"use strict";(self.webpackChunkserenity_js_org=self.webpackChunkserenity_js_org||[]).push([[1674],{38417:e=>{e.exports=JSON.parse('[{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":4,"name":"@serenity-js/assertions","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":2832,"name":"Ensure","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The [interaction](/api/core/class/Interaction/) to "},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"\\nverifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/).\\nIf not, it throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/).\\n\\nUse "},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":" to verify the state of the system under test.\\n\\n## Basic usage with static values\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.that(\'Hello world!\', equals(\'Hello world!\'))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Composing expectations with "},{"kind":"code","text":"`and`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.that(\'Hello world!\', and(startsWith(\'Hello\'), endsWith(\'!\'))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Overriding the type of Error thrown upon assertion failure\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, TestCompromisedError } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\n\\nawait actorCalled(\'Erica\')\\n  .whoCan(CallAnApi.at(\'https://example.com\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/api/health\')),\\n    Ensure.that(LastResponse.status(), equals(200))\\n      .otherwiseFailWith(TestCompromisedError, \'The server is down, please cheer it up!\')\\n  )\\n```"}]},"children":[{"id":2833,"name":"that","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":88,"character":11}],"signatures":[{"id":2834,"name":"that","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [interaction](/api/core/class/Interaction/) to "},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":", which\\nverifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/).\\nIf not, it immediately throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)."}],"blockTags":[{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":88,"character":11}],"typeParameter":[{"id":2835,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":2836,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) describing the actual state of the system."}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":2835,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":2837,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) you expect the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" value to meet"}]},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":2835,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2832,"typeArguments":[{"type":"reference","target":2835,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Ensure","package":"@serenity-js/assertions"}}]},{"id":2838,"name":"eventually","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":107,"character":11}],"signatures":[{"id":2839,"name":"eventually","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`EnsureEventually`"},{"kind":"text","text":"](/api/assertions/class/EnsureEventually/),\\nwhich verifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) within the expected timeframe.\\n\\nIf the expectation is not met by the time the timeout expires, the interaction throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)."}],"blockTags":[{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":107,"character":11}],"typeParameter":[{"id":2840,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":2841,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) describing the actual state of the system."}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":2840,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":2842,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) you expect the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" value to meet"}]},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":2840,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2888,"typeArguments":[{"type":"reference","target":2840,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"EnsureEventually","package":"@serenity-js/assertions"}}]},{"id":2861,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":127,"character":10}],"signatures":[{"id":2862,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":127,"character":10}],"parameters":[{"id":2863,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":652,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}},{"id":2864,"name":"otherwiseFailWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":4}],"signatures":[{"id":2865,"name":"otherwiseFailWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/) thrown when\\nthe actual value does not meet the expectation."}]},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":4}],"parameters":[{"id":2866,"name":"typeOfRuntimeError","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A constructor function producing a subtype of ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) to throw, e.g. ["},{"kind":"code","text":"`TestCompromisedError`"},{"kind":"text","text":"](/api/core/class/TestCompromisedError/)"}]},"type":{"type":"reflection","declaration":{"id":2867,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":42}],"signatures":[{"id":2868,"name":"new typeOfRuntimeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":160,"character":42}],"parameters":[{"id":2869,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2870,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}}]}}},{"id":2871,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The message explaining the failure"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":2873,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":2874,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":2875,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":2876,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":2877,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2878,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2879,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2879]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":2885,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":2886,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[2833,2838,2861,2864,2873,2875,2885]}],"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":72,"character":13}],"typeParameters":[{"id":2887,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/assertions/class/Ensure","nextId":2888},{"id":2888,"name":"EnsureEventually","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The [interaction](/api/core/class/Interaction/) to "},{"kind":"code","text":"`EnsureEventually`"},{"kind":"text","text":"\\nverifies if the resolved value of the provided ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nmeets the specified ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) within the expected timeframe.\\n\\nIf the expectation is not met by the time the timeout expires, the interaction throws an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/).\\n"},{"kind":"code","text":"`EnsureEventually`"},{"kind":"text","text":" retries the evaluation if resolving the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" results in an ["},{"kind":"code","text":"`ListItemNotFoundError`"},{"kind":"text","text":"](/api/core/class/ListItemNotFoundError/),\\nbut rethrows any other errors.\\n\\n:::tip Use the factory method\\nUse the factory method ["},{"kind":"code","text":"`Ensure.eventually`"},{"kind":"text","text":"](/api/assertions/class/Ensure/#eventually] to instantiate this interaction.\\n:::\\n\\n## Basic usage with dynamic values\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.eventually(\\n    Text.of(PageElement.located(By.css(\'h1\'))),\\n    equals(\'Learn Serenity/JS!\')\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n## Composing expectations with "},{"kind":"code","text":"`and`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\nimport { Text, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.eventually(\\n    Text.of(PageElement.located(By.css(\'h1\'))),\\n    and(startsWith(\'Serenity\'), endsWith(\'!\'))\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n## Overriding the type of Error thrown upon assertion failure\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\nimport { Text, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.eventually(\\n    Text.of(PageElement.located(By.css(\'h1\'))),\\n    and(startsWith(\'Serenity\'), endsWith(\'!\'))\\n  ).otherwiseFailWith(LogicError, `Looks like we\'re not on the right page`)\\n)\\n```"}],"modifierTags":["@experimental"]},"children":[{"id":2899,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":92,"character":4}],"signatures":[{"id":2900,"name":"new EnsureEventually","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":92,"character":4}],"typeParameter":[{"id":2901,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":2902,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":2901,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":2903,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":2901,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}},{"id":2904,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}},{"id":2905,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2888,"typeArguments":[{"type":"reference","target":2901,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"EnsureEventually","package":"@serenity-js/assertions"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}},{"id":2909,"name":"timeoutAfter","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":106,"character":4}],"signatures":[{"id":2910,"name":"timeoutAfter","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Override the default timeout set via ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)."}]},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":106,"character":4}],"parameters":[{"id":2911,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2888,"typeArguments":[{"type":"reference","target":2901,"name":"Actual","package":"@serenity-js/assertions","qualifiedName":"EnsureEventually.Actual","refersToTypeParameter":true}],"name":"EnsureEventually","package":"@serenity-js/assertions"}}]},{"id":2912,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":113,"character":10}],"signatures":[{"id":2913,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":113,"character":10}],"parameters":[{"id":2914,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":652,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}},{"id":2915,"name":"otherwiseFailWith","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":4}],"signatures":[{"id":2916,"name":"otherwiseFailWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/) thrown when\\nthe actual value does not meet the expectation."}]},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":4}],"parameters":[{"id":2917,"name":"typeOfRuntimeError","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A constructor function producing a subtype of ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) to throw, e.g. ["},{"kind":"code","text":"`TestCompromisedError`"},{"kind":"text","text":"](/api/core/class/TestCompromisedError/)"}]},"type":{"type":"reflection","declaration":{"id":2918,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":42}],"signatures":[{"id":2919,"name":"new typeOfRuntimeError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":161,"character":42}],"parameters":[{"id":2920,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":2921,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}}]}}},{"id":2922,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The message explaining the failure"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":2924,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":2925,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":2926,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":2927,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":2928,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2929,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2930,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2930]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":2936,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":2937,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"groups":[{"title":"Constructors","children":[2899]},{"title":"Methods","children":[2909,2912,2915,2924,2926,2936]}],"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":85,"character":13}],"typeParameters":[{"id":2938,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/assertions/class/EnsureEventually","previousId":2832,"nextId":2939},{"id":2939,"name":"and","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/and.ts","line":24,"character":16}],"signatures":[{"id":2940,"name":"and","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when all the "},{"kind":"code","text":"`expectations`"},{"kind":"text","text":" are met for the given actual value.\\n\\nUse "},{"kind":"code","text":"`and`"},{"kind":"text","text":" to combine several expectations using logical \\"and\\",\\n\\n## Combining several expectations\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, and, startsWith, endsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', and(startsWith(\'Hello\'), endsWith(\'!\'))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/and.ts","line":24,"character":16}],"typeParameter":[{"id":2941,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":2942,"name":"expectations","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":2941,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":2941,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/and","previousId":2888,"nextId":2943},{"id":2943,"name":"contain","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/contain.ts","line":28,"character":13}],"signatures":[{"id":2944,"name":"contain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual array of "},{"kind":"code","text":"`Item[]`"},{"kind":"text","text":" contains\\nat least one "},{"kind":"code","text":"`Item`"},{"kind":"text","text":" that is equal to the resolved value of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\nNote that the equality check performs comparison **by value**\\nusing [TinyTypes "},{"kind":"code","text":"`equal`"},{"kind":"text","text":"](https://github.com/jan-molak/tiny-types/blob/master/src/objects/equal.ts).\\n\\n## Ensuring that the array contains the given item\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, and, startsWith, endsWith } from \'@serenity-js/assertions\'\\n\\nconst items = [ { name: \'apples\' }, { name: \'bananas\' } ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(items, contain({ name: \'bananas\' })),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/contain.ts","line":28,"character":13}],"typeParameter":[{"id":2945,"name":"Item","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":2946,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":2945,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":2945,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/contain","previousId":2939,"nextId":2947},{"id":2947,"name":"containAtLeastOneItemThat","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/containAtLeastOneItemThat.ts","line":25,"character":16}],"signatures":[{"id":2948,"name":"containAtLeastOneItemThat","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual array of "},{"kind":"code","text":"`Item[]`"},{"kind":"text","text":" contains\\nat least one "},{"kind":"code","text":"`Item`"},{"kind":"text","text":" for which the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":" is met.\\n\\n## Ensuring that at least one item in an array meets the expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, containAtLeastOneItemThat, isGreaterThan } from \'@serenity-js/assertions\'\\n\\nconst items = [ 10, 15, 20 ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(items, containAtLeastOneItemThat(isGreaterThan(18))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/containAtLeastOneItemThat.ts","line":25,"character":16}],"typeParameter":[{"id":2949,"name":"Item","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":2950,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":2949,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":2949,"name":"Item","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/containAtLeastOneItemThat","previousId":2943,"nextId":2951},{"id":2951,"name":"containItemsWhereEachItem","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/containItemsWhereEachItem.ts","line":25,"character":16}],"signatures":[{"id":2952,"name":"containItemsWhereEachItem","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when all the items of the actual array of "},{"kind":"code","text":"`Item[]`"},{"kind":"text","text":"\\nmeet the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":".\\n\\n## Ensuring that all the items in an array meet the expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, containItemsWhereEachItem, endsWith } from \'@serenity-js/assertions\'\\n\\nconst items = [ \'Monday\', \'Tuesday\', \'Wednesday\', \'Thursday\', \'Friday\' ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(items, containItemsWhereEachItem(endsWith(\'day\'))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/containItemsWhereEachItem.ts","line":25,"character":16}],"typeParameter":[{"id":2953,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":2954,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":2953,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":2953,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/containItemsWhereEachItem","previousId":2947,"nextId":2955},{"id":2955,"name":"endsWith","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/endsWith.ts","line":22,"character":13}],"signatures":[{"id":2956,"name":"endsWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nends with the resolved value of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\n## Ensuring that a given string ends with an expected substring\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', endsWith(\'!\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/endsWith.ts","line":22,"character":13}],"parameters":[{"id":2957,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/endsWith","previousId":2951,"nextId":2958},{"id":2958,"name":"equals","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/equals.ts","line":29,"character":13}],"signatures":[{"id":2959,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual value\\nis equal to the resolved value of "},{"kind":"code","text":"`expectedValue`"},{"kind":"text","text":".\\n\\nNote that the equality check performs comparison **by value**\\nusing [TinyTypes "},{"kind":"code","text":"`equal`"},{"kind":"text","text":"](https://github.com/jan-molak/tiny-types/blob/master/src/objects/equal.ts).\\n\\n## Ensuring that the actual value equals expected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst actual   = { name: \'apples\' }\\nconst expected = { name: \'apples\' }\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(actual, equals(expected)),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/equals.ts","line":29,"character":13}],"typeParameter":[{"id":2960,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":2961,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":2960,"name":"T","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":2960,"name":"T","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/equals","previousId":2955,"nextId":2962},{"id":2962,"name":"includes","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/includes.ts","line":41,"character":13}],"signatures":[{"id":2963,"name":"includes","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nincludes a substring of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\n## Ensuring that a given string includes the expected substring\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', includes(\'World\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that page URL includes the expected substring\\n\\n["},{"kind":"code","text":"`Page.current().url()`"},{"kind":"text","text":"](/api/web/class/Page/#url) returns a ["},{"kind":"code","text":"`QuestionAdapter<URL>`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\na proxy object around the standard Node.js [URL](https://nodejs.org/api/url.html) class,\\noffering access to "},{"kind":"code","text":"`string`"},{"kind":"text","text":" properties such as ["},{"kind":"code","text":"`hostname`"},{"kind":"text","text":"](https://nodejs.org/api/url.html#urlobjecthostname),\\n["},{"kind":"code","text":"`pathname`"},{"kind":"text","text":"](https://nodejs.org/api/url.html#urlobjectpathname), and so on.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Navigate.to(\'/handbook\'),\\n  Ensure.that(Page.current().url().hostname, includes(\'serenity-js\')),\\n  Ensure.that(Page.current().url().pathname, includes(\'book\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/includes.ts","line":41,"character":13}],"parameters":[{"id":2964,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/includes","previousId":2958,"nextId":2965},{"id":2965,"name":"isAfter","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isAfter.ts","line":42,"character":13}],"signatures":[{"id":2966,"name":"isAfter","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`Date`"},{"kind":"text","text":"\\nis after the expected "},{"kind":"code","text":"`Date`"},{"kind":"text","text":".\\n\\n## Ensuring that a given date is after the expected date\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isAfter } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(new Date(\'2022-01-01\'), isAfter(new Date(\'1995-01-01\'))),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given date is within the expected date range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, isAfter, isBefore } from \'@serenity-js/assertions\'\\n\\nconst isWithinDateRange = (lowerBound: Answerable<Date>, upperBound: Answerable<Date>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(isAfter(lowerBound), isBefore(upperBound))\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    new Date(\'2022-01-01\'),\\n    isWithinDateRange(new Date(\'1995-01-01\'), new Date(\'2025-01-01\'))\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isAfter.ts","line":42,"character":13}],"parameters":[{"id":2967,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":648,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isAfter","previousId":2962,"nextId":2968},{"id":2968,"name":"isBefore","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isBefore.ts","line":42,"character":13}],"signatures":[{"id":2969,"name":"isBefore","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`Date`"},{"kind":"text","text":"\\nis before the expected "},{"kind":"code","text":"`Date`"},{"kind":"text","text":".\\n\\n## Ensuring that a given date is after the expected date\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isBefore } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(new Date(\'1995-01-01\'), isBefore(new Date(\'2022-01-01\'))),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given date is within the expected date range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, isAfter, isBefore } from \'@serenity-js/assertions\'\\n\\nconst isWithinDateRange = (lowerBound: Answerable<Date>, upperBound: Answerable<Date>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(isAfter(lowerBound), isBefore(upperBound))\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    new Date(\'2022-01-01\'),\\n    isWithinDateRange(new Date(\'1995-01-01\'), new Date(\'2025-01-01\'))\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isBefore.ts","line":42,"character":13}],"parameters":[{"id":2970,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":648,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}]}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isBefore","previousId":2965,"nextId":2971},{"id":2971,"name":"isCloseTo","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isCloseTo.ts","line":24,"character":13}],"signatures":[{"id":2972,"name":"isCloseTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that is met when the actual value\\nis within a given \xb1 "},{"kind":"code","text":"`absoluteTolerance`"},{"kind":"text","text":" range of the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":" value.\\n\\n## Ensuring that a given floating point number is close to the expected number\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { Ensure, isCloseTo } from \'@serenity-js/assertions\'\\n\\n await actorCalled(\'Iris\').attemptsTo(\\n     Ensure.that(10.123, isCloseTo(10, 0.2))\\n )\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isCloseTo.ts","line":24,"character":13}],"parameters":[{"id":2973,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"type":"namedTupleMember","name":"absoluteTolerance","isOptional":false,"element":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isCloseTo","previousId":2968,"nextId":2974},{"id":2974,"name":"isFalse","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isFalse.ts","line":23,"character":16}],"signatures":[{"id":2975,"name":"isFalse","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" value\\nis "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Ensuring that a given value is false\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isFalse } from \'@serenity-js/assertions\'\\nimport { Cookie } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(Cookie.called(\'example-regular-cookie\').isSecure(), isFalse()),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isFalse.ts","line":23,"character":16}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isFalse","previousId":2971,"nextId":2976},{"id":2976,"name":"isGreaterThan","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isGreaterThan.ts","line":45,"character":13}],"signatures":[{"id":2977,"name":"isGreaterThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`number`"},{"kind":"text","text":"\\nis greater than the expected "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n## Ensuring that a given number is greater than the expected number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isGreaterThan } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(10, isGreaterThan(5)),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given number is within the expected range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, equals, isGreaterThan, isLessThan, or } from \'@serenity-js/assertions\'\\n\\nconst isWithinRange = (lowerBound: Answerable<number>, upperBound: Answerable<number>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(\\n        or(equals(lowerBound), isGreaterThan(lowerBound)),\\n        or(equals(upperBound), isLessThan(upperBound)),\\n      )\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    7,\\n    isWithinRange(5, 10)\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isGreaterThan.ts","line":45,"character":13}],"parameters":[{"id":2978,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isGreaterThan","previousId":2974,"nextId":2979},{"id":2979,"name":"isLessThan","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isLessThan.ts","line":45,"character":13}],"signatures":[{"id":2980,"name":"isLessThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual value of type "},{"kind":"code","text":"`number`"},{"kind":"text","text":"\\nis less than the expected "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n## Ensuring that a given number is less than the expected number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isLessThan } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(5, isLessThan(10)),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given number is within the expected range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, equals, isGreaterThan, isLessThan, or } from \'@serenity-js/assertions\'\\n\\nconst isWithinRange = (lowerBound: Answerable<number>, upperBound: Answerable<number>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(\\n        or(equals(lowerBound), isGreaterThan(lowerBound)),\\n        or(equals(upperBound), isLessThan(upperBound)),\\n      )\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    7,\\n    isWithinRange(5, 10)\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isLessThan.ts","line":45,"character":13}],"parameters":[{"id":2981,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isLessThan","previousId":2976,"nextId":2982},{"id":2982,"name":"isPresent","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isPresent.ts","line":66,"character":16}],"signatures":[{"id":2983,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" value is not undefined or null.\\n\\nAlso, when the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" implements ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/),\\nthe expectation is met when calling ["},{"kind":"code","text":"`Optional.isPresent`"},{"kind":"text","text":"](/api/core/interface/Optional/#isPresent)\\nreturns an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n## Ensuring that a value is defined\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, Send, GetRequest, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, isPresent } from \'@serenity-js/assertions\'\\n\\ninterface Product {\\n    name: string;\\n}\\n\\ninterface ProductsResponse {\\n    products: Product[];\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/products\')),\\n    Ensure.that(LastResponse.body<ProductsResponse>().products[0], isPresent()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Checking if a PageElement is present\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check } from \'@serenity-js/core\';\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\';\\nimport { By, Click, Navigate, PageElement } from \'@serenity-js/web\';\\nimport { Browser, chromium } from \'playwright\';\\n\\nclass NewsletterSubscription {\\n  static modal = () =>\\n    PageElement.located(By.id(\'newsletter-subscription\'))\\n      .describedAs(\'newsletter subscription modal\')\\n\\n  static closeButton = () =>\\n    PageElement.located(By.class(\'.close\'))\\n      .of(NewsletterSubscription.modal())\\n      .describedAs(\'close button\')\\n}\\n\\nconst browser = await chromium.launch({ headless: true });\\n\\nawait actorCalled(\'Isabela\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n    Navigate.to(`https://example.org`),\\n    Check.whether(NewsletterSubscription.modal(), isPresent())\\n      .andIfSo(Click.on(NewsletterSubscription.closeButton())),\\n  )\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isPresent.ts","line":66,"character":16}],"typeParameter":[{"id":2984,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":2984,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isPresent","previousId":2979,"nextId":2985},{"id":2985,"name":"isTrue","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/isTrue.ts","line":23,"character":16}],"signatures":[{"id":2986,"name":"isTrue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" value\\nis "},{"kind":"code","text":"`true`"},{"kind":"text","text":".\\n\\n## Ensuring that a given value is true\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isTrue } from \'@serenity-js/assertions\'\\nimport { Cookie } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(Cookie.called(\'example-secure-cookie\').isSecure(), isTrue()),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/isTrue.ts","line":23,"character":16}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/isTrue","previousId":2982,"nextId":2987},{"id":2987,"name":"matches","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/matches.ts","line":22,"character":13}],"signatures":[{"id":2988,"name":"matches","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nmatches the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":" regular expression.\\n\\n## Ensuring that a given string matches a regular expression\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', matches(/[Ww]orld/)),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/matches.ts","line":22,"character":13}],"parameters":[{"id":2989,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/matches","previousId":2985,"nextId":2990},{"id":2990,"name":"not","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/not.ts","line":25,"character":16}],"signatures":[{"id":2991,"name":"not","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [expectation](/api/core/class/Expectation/) that negates the provided "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":".\\n\\n## Ensuring that the actual value does not equal the expected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals, not } from \'@serenity-js/assertions\'\\n\\nconst actual   = { name: \'apples\' }\\nconst expected = { name: \'bananas\' }\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(actual, not(equals(expected))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/not.ts","line":25,"character":16}],"typeParameter":[{"id":2992,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":2993,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":2992,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":2992,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/not","previousId":2987,"nextId":2994},{"id":2994,"name":"or","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/or.ts","line":24,"character":16}],"signatures":[{"id":2995,"name":"or","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when at least one of the "},{"kind":"code","text":"`expectations`"},{"kind":"text","text":" is met for the given actual value.\\n\\nUse "},{"kind":"code","text":"`or`"},{"kind":"text","text":" to combine several expectations using logical \\"or\\",\\n\\n## Combining several expectations\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, or, startsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', or(startsWith(\'Hello\'), startsWith(\'Hi\'))),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/or.ts","line":24,"character":16}],"typeParameter":[{"id":2996,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":2997,"name":"expectations","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":2996,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":2996,"name":"Actual_Type","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/or","previousId":2990,"nextId":2998},{"id":2998,"name":"property","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/property.ts","line":63,"character":16}],"signatures":[{"id":2999,"name":"property","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the value of\\nthe "},{"kind":"code","text":"`actual[propertyName]`"},{"kind":"text","text":" meets the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":".\\n\\n## Ensuring that an array has an item\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, property } from \'@serenity-js/assertions\'\\n\\nconst list = [ \'hello\', \'world\' ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(list, property(0, isPresent())),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that the property meets an expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, property, equals } from \'@serenity-js/assertions\'\\n\\nconst list = [ \'hello\', \'world\' ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(list, property(\'length\', equals(2))),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Asserting on a list of objects\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, property, equals } from \'@serenity-js/assertions\'\\n\\nconst developers = [{\\n    name: \'Jan\',\\n    id: \'@jan-molak\',\\n}, {\\n    name: \'John\',\\n    id: \'@wakaleo\',\\n}]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    developers,\\n    containItemsWhereEachItem(\\n      property(\'id\', startsWith(\'@\'))\\n    ),\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/property.ts","line":63,"character":16}],"typeParameter":[{"id":3000,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}},{"id":3001,"name":"PropertyName","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":3002,"name":"propertyName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3001,"name":"PropertyName","package":"@serenity-js/assertions","refersToTypeParameter":true}},{"id":3003,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":3001,"name":"PropertyName","package":"@serenity-js/assertions","refersToTypeParameter":true},"objectType":{"type":"reference","target":3000,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":3000,"name":"Actual","package":"@serenity-js/assertions","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/property","previousId":2994,"nextId":3004},{"id":3004,"name":"startsWith","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/assertions/src/expectations/startsWith.ts","line":22,"character":13}],"signatures":[{"id":3005,"name":"startsWith","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [expectation](/api/core/class/Expectation/) that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nstarts with the resolved value of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\n## Ensuring that a given string starts with an expected substring\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, startsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', startsWith(\'Hello\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/assertions/src/expectations/startsWith.ts","line":22,"character":13}],"parameters":[{"id":3006,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"namedTupleMember","name":"expected","isOptional":false,"element":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/assertions/function/startsWith","previousId":2998}],"groups":[{"title":"Activities","children":[2832,2888]},{"title":"Expectations","children":[2939,2943,2947,2951,2955,2958,2962,2965,2968,2971,2974,2976,2979,2982,2985,2987,2990,2994,2998,3004]}],"sources":[{"fileName":"packages/assertions/src/index.ts","line":1,"character":0}],"permalink":"/api/assertions"},"urlSlug":"assertions"}],"packageName":"@serenity-js/assertions","packageVersion":"3.25.4"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":29,"name":"@serenity-js/console-reporter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":30,"name":"default","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/index.ts","line":9,"character":24}],"signatures":[{"id":31,"name":"default","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/index.ts","line":9,"character":24}],"parameters":[{"id":32,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22119,"name":"ConsoleReporterConfig","package":"@serenity-js/console-reporter"},"defaultValue":"undefined"}],"type":{"type":"reference","target":2126,"typeArguments":[{"type":"reference","target":22061,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}],"permalink":"/api/console-reporter/function/default","nextId":22061},{"id":22061,"name":"ConsoleReporter","variant":"declaration","kind":128,"flags":{"isPublic":true,"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) that uses [standard output](https://en.wikipedia.org/wiki/Standard_streams)\\nto report on progress of your Serenity/JS acceptance tests.\\n\\n"},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" ships with colour themes for both dark and light terminals,\\nas well as a monochromatic theme for those moments when you\'re in a noir mood\\n(or have a terminal that doesn\'t support colours, like the good old "},{"kind":"code","text":"`cmd.exe`"},{"kind":"text","text":" on Windows).\\n\\n## Registering Console Reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\n import { configure } from \'@serenity-js/core\';\\n import { ConsoleReporter } from \'@serenity-js/console-reporter\';\\n\\n configure({\\n   crew: [\\n     ConsoleReporter.withDefaultColourSupport()\\n   ],\\n });\\n```"},{"kind":"text","text":"\\n\\n## Redirecting output to a file\\n\\n"},{"kind":"code","text":"```ts\\n import { configure } from \'@serenity-js/core\';\\n import { ConsoleReporter } from \'@serenity-js/console-reporter\';\\n import { createWriteStream } from \'fs\';\\n\\n configure({\\n   outputStream: createWriteStream(\'./output.log\'),\\n   crew: [ ConsoleReporter.withDefaultColourSupport() ],\\n });\\n ```"},{"kind":"text","text":"\\n\\n## Registering Console Reporter with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport { devices } from \'@playwright/test\';\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\';\\n\\nconst config: PlaywrightTestConfig = {\\n\\n  reporter: [\\n    [ \'line\' ],\\n    [ \'html\', { open: \'never\' } ],\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        \'@serenity-js/console-reporter\',\\n      ]\\n    }]\\n  ],\\n}\\n```"},{"kind":"text","text":"\\n\\n## Registering Console Reporter with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { ConsoleReporter } from \'@serenity-js/console-reporter\';\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\';\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/console-reporter\',\\n    ]\\n    // other Serenity/JS config\\n  },\\n\\n // other WebdriverIO config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Registering Console Reporter with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nconst { ConsoleReporter } = require(\'@serenity-js/console-reporter\');\\n\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/console-reporter\',\\n    ],\\n    // other Serenity/JS config\\n  },\\n\\n  // other Protractor config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Changing the default colour theme\\n\\n"},{"kind":"code","text":"```js\\n  // ...\\n  serenity: {\\n    crew: [\\n      [ \'@serenity-js/console-reporter\', {\\n        theme: \'light\',\\n        // theme: \'dark\',\\n        // theme: \'mono\',\\n        // theme: \'auto\',\\n      } ]\\n    ],\\n  },\\n  //...\\n```"}]},"children":[{"id":22062,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":170,"character":11}],"signatures":[{"id":22063,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":170,"character":11}],"parameters":[{"id":22064,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22119,"name":"ConsoleReporterConfig","package":"@serenity-js/console-reporter"}}],"type":{"type":"reference","target":2126,"typeArguments":[{"type":"reference","target":22061,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22065,"name":"withDefaultColourSupport","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":184,"character":11}],"signatures":[{"id":22066,"name":"withDefaultColourSupport","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" that auto-detects\\nyour terminal\'s support for colours and uses a colour theme\\nfor dark terminals if successful.\\n\\nPlease note that spawning your test process from another process\\n(by using [npm-failsafe](https://www.npmjs.com/package/npm-failsafe), for example)\\ncauses the "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" to use the monochromatic colour scheme,\\nas colour support can\'t be detected in child processes."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":184,"character":11}],"type":{"type":"reference","target":2126,"typeArguments":[{"type":"reference","target":22061,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22067,"name":"forMonochromaticTerminals","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":194,"character":11}],"signatures":[{"id":22068,"name":"forMonochromaticTerminals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" with a monochromatic colour theme.\\nGood for terminals with no colour support (like the "},{"kind":"code","text":"`cmd.exe`"},{"kind":"text","text":" on Windows),\\nor for times when you need to pipe the output to a text file and want\\nto avoid printing control characters."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":194,"character":11}],"type":{"type":"reference","target":2126,"typeArguments":[{"type":"reference","target":22061,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22069,"name":"forDarkTerminals","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":201,"character":11}],"signatures":[{"id":22070,"name":"forDarkTerminals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" with a colour theme optimised for terminals with dark backgrounds."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":201,"character":11}],"type":{"type":"reference","target":2126,"typeArguments":[{"type":"reference","target":22061,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22071,"name":"forLightTerminals","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":208,"character":11}],"signatures":[{"id":22072,"name":"forLightTerminals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" with a colour theme optimised for terminals with light backgrounds."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":208,"character":11}],"type":{"type":"reference","target":2126,"typeArguments":[{"type":"reference","target":22061,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22076,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":230,"character":4}],"signatures":[{"id":22077,"name":"new ConsoleReporter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":230,"character":4}],"parameters":[{"id":22078,"name":"printer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Printer","package":"@serenity-js/console-reporter"}},{"id":22079,"name":"theme","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"TerminalTheme","package":"@serenity-js/console-reporter"}},{"id":22080,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22061,"name":"ConsoleReporter","package":"@serenity-js/console-reporter"}}]},{"id":22090,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":250,"character":4}],"signatures":[{"id":22091,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},{"tag":"@listens","content":[]}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":250,"character":4}],"parameters":[{"id":22092,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"ListensToDomainEvents.notifyOf"}}],"implementationOf":{"type":"reference","target":-1,"name":"ListensToDomainEvents.notifyOf"}}],"groups":[{"title":"Constructors","children":[22076]},{"title":"Methods","children":[22062,22065,22067,22069,22071,22090]}],"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":161,"character":13}],"implementedTypes":[{"type":"reference","target":1962,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"permalink":"/api/console-reporter/class/ConsoleReporter","previousId":30,"nextId":22119},{"id":22119,"name":"ConsoleReporterConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to configure the ["},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":"](/api/console-reporter/class/ConsoleReporter/)."}]},"children":[{"id":22120,"name":"theme","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Choose a colour theme optimised for light, dark, or monochromatic terminals.\\nOr, use \'auto\' to automatically pick the most suitable one."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporterConfig.ts","line":11,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"mono"},{"type":"literal","value":"auto"}]}}],"groups":[{"title":"Properties","children":[22120]}],"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporterConfig.ts","line":6,"character":17}],"permalink":"/api/console-reporter/interface/ConsoleReporterConfig","previousId":22061}],"groups":[{"title":"Functions","children":[30]},{"title":"Stage","children":[22061,22119]}],"sources":[{"fileName":"packages/console-reporter/src/index.ts","line":1,"character":0}],"permalink":"/api/console-reporter"},"urlSlug":"console-reporter"}],"packageName":"@serenity-js/console-reporter","packageVersion":"3.25.4"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":2,"name":"@serenity-js/core/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":2159,"name":"OutputStream","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An output stream to be injected into [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/)\\nconfigured via ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`Serenity.configure`"},{"kind":"text","text":"](/api/core/class/Serenity/#configure)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"children":[{"id":2160,"name":"write","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/OutputStream.ts","line":13,"character":4}],"signatures":[{"id":2161,"name":"write","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/OutputStream.ts","line":13,"character":4}],"parameters":[{"id":2162,"name":"content","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[2160]}],"sources":[{"fileName":"packages/core/src/adapter/OutputStream.ts","line":12,"character":17}],"permalink":"/api/core-adapter/interface/OutputStream","nextId":2163},{"id":2163,"name":"TestRunnerAdapter","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an adapter needed to run a given type of tests programmatically"}]},"children":[{"id":2164,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":13,"character":4}],"signatures":[{"id":2165,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads test scenarios."}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":13,"character":4}],"parameters":[{"id":2166,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2167,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":21,"character":4}],"signatures":[{"id":2168,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":21,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":2169,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":29,"character":4}],"signatures":[{"id":2170,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Runs loaded test scenarios."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":29,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2171,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":4}],"signatures":[{"id":2172,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner."}]},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2173,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2174,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[2174]}],"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":34}]}}]}}]}],"groups":[{"title":"Methods","children":[2164,2167,2169,2171]}],"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":8,"character":17}],"permalink":"/api/core-adapter/interface/TestRunnerAdapter","previousId":2159}],"groups":[{"title":"Integration","children":[2159,2163]}],"sources":[{"fileName":"packages/core/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/core-adapter"},"urlSlug":"core-adapter"},{"index":false,"label":"Domain Events","reflection":{"id":3,"name":"@serenity-js/core/events","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":2175,"name":"ActivityFinished","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) is finished."}]},"children":[{"id":2176,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"signatures":[{"id":2177,"name":"new ActivityFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"parameters":[{"id":2178,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2179,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2180,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2181,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2182,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2175,"name":"ActivityFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2183,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2184,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2185,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2186,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":17,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2187,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2188,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2189,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2190,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2191,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2192,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2193,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2194,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2176]},{"title":"Properties","children":[2183,2184,2185,2186,2187]},{"title":"Methods","children":[2188,2191,2193]}],"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":12,"character":22}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2450,"name":"InteractionFinished"},{"type":"reference","target":2686,"name":"TaskFinished"}],"permalink":"/api/core-events/class/ActivityFinished","nextId":2195},{"id":2195,"name":"ActivityRelatedArtifactArchived","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2196,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":18,"character":11}],"signatures":[{"id":2197,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":18,"character":11}],"parameters":[{"id":2198,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2195,"name":"ActivityRelatedArtifactArchived","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2265,"name":"ArtifactArchived.fromJSON"}}],"overwrites":{"type":"reference","target":2264,"name":"ArtifactArchived.fromJSON"}},{"id":2199,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":30,"character":4}],"signatures":[{"id":2200,"name":"new ActivityRelatedArtifactArchived","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":30,"character":4}],"parameters":[{"id":2201,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2202,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2203,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2204,"name":"type","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"}},{"id":2205,"name":"path","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":2206,"name":"artifactTimestamp","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}},{"id":2207,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2195,"name":"ActivityRelatedArtifactArchived","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2268,"name":"ArtifactArchived.constructor"}}],"overwrites":{"type":"reference","target":2267,"name":"ArtifactArchived.constructor"}},{"id":2208,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":32,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2209,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":43,"character":4}],"signatures":[{"id":2210,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":43,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":2281,"name":"ArtifactArchived.toJSON"}}],"overwrites":{"type":"reference","target":2280,"name":"ArtifactArchived.toJSON"}},{"id":2211,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":26,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2275,"name":"ArtifactArchived.sceneId"}},{"id":2212,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":27,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2276,"name":"ArtifactArchived.name"}},{"id":2213,"name":"type","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":28,"character":24}],"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2277,"name":"ArtifactArchived.type"}},{"id":2214,"name":"path","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":29,"character":24}],"type":{"type":"reference","name":"Path","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2278,"name":"ArtifactArchived.path"}},{"id":2215,"name":"artifactTimestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":30,"character":24}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2279,"name":"ArtifactArchived.artifactTimestamp"}},{"id":2216,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2282,"name":"ArtifactArchived.timestamp"}},{"id":2217,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2218,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2219,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2284,"name":"ArtifactArchived.equals"}}],"inheritedFrom":{"type":"reference","target":2283,"name":"ArtifactArchived.equals"}},{"id":2220,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2221,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2287,"name":"ArtifactArchived.toString"}}],"inheritedFrom":{"type":"reference","target":2286,"name":"ArtifactArchived.toString"}}],"groups":[{"title":"Constructors","children":[2199]},{"title":"Properties","children":[2208,2211,2212,2213,2214,2215,2216]},{"title":"Methods","children":[2196,2209,2217,2220]}],"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":2263,"name":"ArtifactArchived","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActivityRelatedArtifactArchived","previousId":2175,"nextId":2222},{"id":2222,"name":"ActivityRelatedArtifactGenerated","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2223,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":13,"character":11}],"signatures":[{"id":2224,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":13,"character":11}],"parameters":[{"id":2225,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2222,"name":"ActivityRelatedArtifactGenerated","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2290,"name":"ArtifactGenerated.fromJSON"}}],"overwrites":{"type":"reference","target":2289,"name":"ArtifactGenerated.fromJSON"}},{"id":2226,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":23,"character":4}],"signatures":[{"id":2227,"name":"new ActivityRelatedArtifactGenerated","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":23,"character":4}],"parameters":[{"id":2228,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2229,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2230,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2231,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":2232,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2222,"name":"ActivityRelatedArtifactGenerated","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":2293,"name":"ArtifactGenerated.constructor"}}],"overwrites":{"type":"reference","target":2292,"name":"ArtifactGenerated.constructor"}},{"id":2233,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":25,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2234,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2298,"name":"ArtifactGenerated.sceneId"}},{"id":2235,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":24,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2299,"name":"ArtifactGenerated.name"}},{"id":2236,"name":"artifact","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":25,"character":24}],"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2300,"name":"ArtifactGenerated.artifact"}},{"id":2237,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2301,"name":"ArtifactGenerated.timestamp"}},{"id":2238,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2239,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2240,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2303,"name":"ArtifactGenerated.equals"}}],"inheritedFrom":{"type":"reference","target":2302,"name":"ArtifactGenerated.equals"}},{"id":2241,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2242,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2306,"name":"ArtifactGenerated.toString"}}],"inheritedFrom":{"type":"reference","target":2305,"name":"ArtifactGenerated.toString"}},{"id":2243,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2244,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2308,"name":"ArtifactGenerated.toJSON"}}],"inheritedFrom":{"type":"reference","target":2307,"name":"ArtifactGenerated.toJSON"}}],"groups":[{"title":"Constructors","children":[2226]},{"title":"Properties","children":[2233,2234,2235,2236,2237]},{"title":"Methods","children":[2223,2238,2241,2243]}],"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2288,"name":"ArtifactGenerated","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/ActivityRelatedArtifactGenerated","previousId":2195,"nextId":2245},{"id":2245,"name":"ActivityStarts","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) starts."}]},"children":[{"id":2246,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"signatures":[{"id":2247,"name":"new ActivityStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"parameters":[{"id":2248,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2249,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2250,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2251,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2245,"name":"ActivityStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2252,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2253,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2254,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2255,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2256,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2257,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2258,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2259,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2260,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2261,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2262,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2246]},{"title":"Properties","children":[2252,2253,2254,2255]},{"title":"Methods","children":[2256,2259,2261]}],"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":12,"character":22}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2473,"name":"InteractionStarts"},{"type":"reference","target":2709,"name":"TaskStarts"}],"permalink":"/api/core-events/class/ActivityStarts","previousId":2222,"nextId":2263},{"id":2263,"name":"ArtifactArchived","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2264,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":14,"character":11}],"signatures":[{"id":2265,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":14,"character":11}],"parameters":[{"id":2266,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2263,"name":"ArtifactArchived","package":"@serenity-js/core"}}]},{"id":2267,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":25,"character":4}],"signatures":[{"id":2268,"name":"new ArtifactArchived","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":25,"character":4}],"parameters":[{"id":2269,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2270,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2271,"name":"type","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"}},{"id":2272,"name":"path","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":2273,"name":"artifactTimestamp","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}},{"id":2274,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2263,"name":"ArtifactArchived","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2275,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":26,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2276,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":27,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2277,"name":"type","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":28,"character":24}],"type":{"type":"reference","name":"ArtifactType","package":"@serenity-js/core"}},{"id":2278,"name":"path","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":29,"character":24}],"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":2279,"name":"artifactTimestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":30,"character":24}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}},{"id":2280,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":42,"character":4}],"signatures":[{"id":2281,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":42,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"overwrites":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}},{"id":2282,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2283,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2284,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2285,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2286,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2287,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}}],"groups":[{"title":"Constructors","children":[2267]},{"title":"Properties","children":[2275,2276,2277,2278,2279,2282]},{"title":"Methods","children":[2264,2280,2283,2286]}],"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2195,"name":"ActivityRelatedArtifactArchived"}],"permalink":"/api/core-events/class/ArtifactArchived","previousId":2245,"nextId":2288},{"id":2288,"name":"ArtifactGenerated","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2289,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":13,"character":11}],"signatures":[{"id":2290,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":13,"character":11}],"parameters":[{"id":2291,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2288,"name":"ArtifactGenerated","package":"@serenity-js/core"}}]},{"id":2292,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":22,"character":4}],"signatures":[{"id":2293,"name":"new ArtifactGenerated","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":22,"character":4}],"parameters":[{"id":2294,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2295,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2296,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":2297,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2288,"name":"ArtifactGenerated","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2298,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2299,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":24,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2300,"name":"artifact","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":25,"character":24}],"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":2301,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2302,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2303,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2304,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2305,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2306,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2307,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2308,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2292]},{"title":"Properties","children":[2298,2299,2300,2301]},{"title":"Methods","children":[2289,2302,2305,2307]}],"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":2222,"name":"ActivityRelatedArtifactGenerated"}],"permalink":"/api/core-events/class/ArtifactGenerated","previousId":2263,"nextId":2309},{"id":2309,"name":"AsyncOperationAborted","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2310,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":12,"character":11}],"signatures":[{"id":2311,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":12,"character":11}],"parameters":[{"id":2312,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2309,"name":"AsyncOperationAborted","package":"@serenity-js/core"}}]},{"id":2313,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":20,"character":4}],"signatures":[{"id":2314,"name":"new AsyncOperationAborted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":20,"character":4}],"parameters":[{"id":2315,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2316,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2317,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2309,"name":"AsyncOperationAborted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2318,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":21,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2319,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":22,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2320,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2321,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2322,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2323,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2324,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2325,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2326,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2327,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2313]},{"title":"Properties","children":[2318,2319,2320]},{"title":"Methods","children":[2310,2321,2324,2326]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/AsyncOperationAborted","previousId":2288,"nextId":2328},{"id":2328,"name":"AsyncOperationAttempted","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2329,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":12,"character":11}],"signatures":[{"id":2330,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":12,"character":11}],"parameters":[{"id":2331,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2328,"name":"AsyncOperationAttempted","package":"@serenity-js/core"}}]},{"id":2332,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":21,"character":4}],"signatures":[{"id":2333,"name":"new AsyncOperationAttempted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":21,"character":4}],"parameters":[{"id":2334,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2335,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2336,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2337,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2328,"name":"AsyncOperationAttempted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2338,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":22,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2339,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":23,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2340,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":24,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2341,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2342,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2343,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2344,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2345,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2346,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2347,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2348,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2332]},{"title":"Properties","children":[2338,2339,2340,2341]},{"title":"Methods","children":[2329,2342,2345,2347]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/AsyncOperationAttempted","previousId":2309,"nextId":2349},{"id":2349,"name":"AsyncOperationCompleted","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2350,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":12,"character":11}],"signatures":[{"id":2351,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":12,"character":11}],"parameters":[{"id":2352,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2349,"name":"AsyncOperationCompleted","package":"@serenity-js/core"}}]},{"id":2353,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":19,"character":4}],"signatures":[{"id":2354,"name":"new AsyncOperationCompleted","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":19,"character":4}],"parameters":[{"id":2355,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2356,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2349,"name":"AsyncOperationCompleted","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2357,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":20,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2358,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2359,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2360,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2361,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2362,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2363,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2364,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2365,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2353]},{"title":"Properties","children":[2357,2358]},{"title":"Methods","children":[2350,2359,2362,2364]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/AsyncOperationCompleted","previousId":2328,"nextId":2366},{"id":2366,"name":"AsyncOperationFailed","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2367,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":13,"character":11}],"signatures":[{"id":2368,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":13,"character":11}],"parameters":[{"id":2369,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2366,"name":"AsyncOperationFailed","package":"@serenity-js/core"}}]},{"id":2370,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":21,"character":4}],"signatures":[{"id":2371,"name":"new AsyncOperationFailed","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":21,"character":4}],"parameters":[{"id":2372,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":2373,"name":"correlationId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2374,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2366,"name":"AsyncOperationFailed","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2375,"name":"error","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":22,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":2376,"name":"correlationId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2377,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":31,"character":4}],"signatures":[{"id":2378,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":31,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"overwrites":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}},{"id":2379,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2380,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2381,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2382,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2383,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2384,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}}],"groups":[{"title":"Constructors","children":[2370]},{"title":"Properties","children":[2375,2376,2379]},{"title":"Methods","children":[2367,2377,2380,2383]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/AsyncOperationFailed","previousId":2349,"nextId":2385},{"id":2385,"name":"BusinessRuleDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted by [@serenity-js/cucumber](/api/cucumber)\\nwhen a [business rule](https://cucumber.io/docs/gherkin/reference/#rule) is detected."}]},"children":[{"id":2386,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":15,"character":18}],"signatures":[{"id":2387,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":15,"character":18}],"parameters":[{"id":2388,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2385,"name":"BusinessRuleDetected","package":"@serenity-js/core"}}]},{"id":2389,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":24,"character":4}],"signatures":[{"id":2390,"name":"new BusinessRuleDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":24,"character":4}],"parameters":[{"id":2391,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2392,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2393,"name":"rule","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"BusinessRule","package":"@serenity-js/core"}},{"id":2394,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2385,"name":"BusinessRuleDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2395,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":25,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2396,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":26,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2397,"name":"rule","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":27,"character":24}],"type":{"type":"reference","name":"BusinessRule","package":"@serenity-js/core"}},{"id":2398,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2399,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2400,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2401,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2402,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2403,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2404,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2405,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2389]},{"title":"Properties","children":[2395,2396,2397,2398]},{"title":"Methods","children":[2386,2399,2402,2404]}],"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/BusinessRuleDetected","previousId":2366,"nextId":2406},{"id":2406,"name":"DomainEvent","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Represents an internal domain event that occurs during test execution."}]},"children":[{"id":2410,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"..."},{"id":2411,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2412,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2413,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":2414,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2415,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":2416,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2417,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Properties","children":[2410]},{"title":"Methods","children":[2411,2414,2416]}],"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":10,"character":22}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"extendedBy":[{"type":"reference","target":2175,"name":"ActivityFinished"},{"type":"reference","target":2245,"name":"ActivityStarts"},{"type":"reference","target":2263,"name":"ArtifactArchived"},{"type":"reference","target":2288,"name":"ArtifactGenerated"},{"type":"reference","target":2309,"name":"AsyncOperationAborted"},{"type":"reference","target":2328,"name":"AsyncOperationAttempted"},{"type":"reference","target":2349,"name":"AsyncOperationCompleted"},{"type":"reference","target":2366,"name":"AsyncOperationFailed"},{"type":"reference","target":2385,"name":"BusinessRuleDetected"},{"type":"reference","target":2431,"name":"FeatureNarrativeDetected"},{"type":"reference","target":2494,"name":"RetryableSceneDetected"},{"type":"reference","target":2511,"name":"SceneBackgroundDetected"},{"type":"reference","target":2532,"name":"SceneDescriptionDetected"},{"type":"reference","target":2551,"name":"SceneFinished"},{"type":"reference","target":2572,"name":"SceneFinishes"},{"type":"reference","target":2589,"name":"SceneParametersDetected"},{"type":"reference","target":2610,"name":"SceneSequenceDetected"},{"type":"reference","target":2629,"name":"SceneStarts"},{"type":"reference","target":2648,"name":"SceneTagged"},{"type":"reference","target":2667,"name":"SceneTemplateDetected"},{"type":"reference","target":2730,"name":"TestRunFinished"},{"type":"reference","target":2747,"name":"TestRunFinishes"},{"type":"reference","target":2762,"name":"TestRunnerDetected"},{"type":"reference","target":2781,"name":"TestRunStarts"},{"type":"reference","target":2796,"name":"TestSuiteFinished"},{"type":"reference","target":2815,"name":"TestSuiteStarts"}],"permalink":"/api/core-events/class/DomainEvent","previousId":2385,"nextId":2431},{"id":2418,"name":"EmitsDomainEvents","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) or a supporting class capable of telling\\nthe current wall clock time.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Serenity`"},{"kind":"text","text":"](/api/core/class/Serenity/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"children":[{"id":2419,"name":"currentSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":6,"character":4}],"signatures":[{"id":2420,"name":"currentSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":6,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2421,"name":"assignNewActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":7,"character":4}],"signatures":[{"id":2422,"name":"assignNewActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":7,"character":4}],"parameters":[{"id":2423,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2424,"name":"announce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":8,"character":4}],"signatures":[{"id":2425,"name":"announce","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":8,"character":4}],"parameters":[{"id":2426,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2427,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":9,"character":4}],"signatures":[{"id":2428,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":9,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2429,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"signatures":[{"id":2430,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1836,"name":"TellsTime.currentTime"}}],"inheritedFrom":{"type":"reference","target":1835,"name":"TellsTime.currentTime"}}],"groups":[{"title":"Methods","children":[2419,2421,2424,2427,2429]}],"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":5,"character":17}],"extendedTypes":[{"type":"reference","target":1834,"name":"TellsTime","package":"@serenity-js/core"}],"implementedBy":[{"type":"reference","target":1839,"name":"Serenity"},{"type":"reference","target":2044,"name":"Stage"}],"permalink":"/api/core-events/interface/EmitsDomainEvents","previousId":2815},{"id":2431,"name":"FeatureNarrativeDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2432,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":12,"character":18}],"signatures":[{"id":2433,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":12,"character":18}],"parameters":[{"id":2434,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2431,"name":"FeatureNarrativeDetected","package":"@serenity-js/core"}}]},{"id":2442,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2435,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":20,"character":4}],"signatures":[{"id":2436,"name":"new FeatureNarrativeDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":20,"character":4}],"parameters":[{"id":2437,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2438,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2439,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2431,"name":"FeatureNarrativeDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2440,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2441,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2443,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2444,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2445,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2446,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2447,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2448,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2449,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2435]},{"title":"Properties","children":[2442,2440,2441]},{"title":"Methods","children":[2432,2443,2446,2448]}],"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/FeatureNarrativeDetected","previousId":2406,"nextId":2450},{"id":2450,"name":"InteractionFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2451,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionFinished.ts","line":12,"character":11}],"signatures":[{"id":2452,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionFinished.ts","line":12,"character":11}],"parameters":[{"id":2453,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2450,"name":"InteractionFinished","package":"@serenity-js/core"}}]},{"id":2454,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"signatures":[{"id":2455,"name":"new InteractionFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"parameters":[{"id":2456,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2457,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2458,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2459,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2460,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2450,"name":"InteractionFinished","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2177,"name":"ActivityFinished.constructor"}}],"inheritedFrom":{"type":"reference","target":2176,"name":"ActivityFinished.constructor"}},{"id":2461,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2183,"name":"ActivityFinished.sceneId"}},{"id":2462,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2184,"name":"ActivityFinished.activityId"}},{"id":2463,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2185,"name":"ActivityFinished.details"}},{"id":2464,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":17,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2186,"name":"ActivityFinished.outcome"}},{"id":2465,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2187,"name":"ActivityFinished.timestamp"}},{"id":2466,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2467,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2468,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2189,"name":"ActivityFinished.equals"}}],"inheritedFrom":{"type":"reference","target":2188,"name":"ActivityFinished.equals"}},{"id":2469,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2470,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2192,"name":"ActivityFinished.toString"}}],"inheritedFrom":{"type":"reference","target":2191,"name":"ActivityFinished.toString"}},{"id":2471,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2472,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2194,"name":"ActivityFinished.toJSON"}}],"inheritedFrom":{"type":"reference","target":2193,"name":"ActivityFinished.toJSON"}}],"groups":[{"title":"Constructors","children":[2454]},{"title":"Properties","children":[2461,2462,2463,2464,2465]},{"title":"Methods","children":[2451,2466,2469,2471]}],"sources":[{"fileName":"packages/core/src/events/InteractionFinished.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2175,"name":"ActivityFinished","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/InteractionFinished","previousId":2431,"nextId":2473},{"id":2473,"name":"InteractionStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2474,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionStarts.ts","line":11,"character":11}],"signatures":[{"id":2475,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/InteractionStarts.ts","line":11,"character":11}],"parameters":[{"id":2476,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2473,"name":"InteractionStarts","package":"@serenity-js/core"}}]},{"id":2477,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"signatures":[{"id":2478,"name":"new InteractionStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"parameters":[{"id":2479,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2480,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2481,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2482,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2473,"name":"InteractionStarts","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2247,"name":"ActivityStarts.constructor"}}],"inheritedFrom":{"type":"reference","target":2246,"name":"ActivityStarts.constructor"}},{"id":2483,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2252,"name":"ActivityStarts.sceneId"}},{"id":2484,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2253,"name":"ActivityStarts.activityId"}},{"id":2485,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2254,"name":"ActivityStarts.details"}},{"id":2486,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2255,"name":"ActivityStarts.timestamp"}},{"id":2487,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2488,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2489,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2257,"name":"ActivityStarts.equals"}}],"inheritedFrom":{"type":"reference","target":2256,"name":"ActivityStarts.equals"}},{"id":2490,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2491,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2260,"name":"ActivityStarts.toString"}}],"inheritedFrom":{"type":"reference","target":2259,"name":"ActivityStarts.toString"}},{"id":2492,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2493,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2262,"name":"ActivityStarts.toJSON"}}],"inheritedFrom":{"type":"reference","target":2261,"name":"ActivityStarts.toJSON"}}],"groups":[{"title":"Constructors","children":[2477]},{"title":"Properties","children":[2483,2484,2485,2486]},{"title":"Methods","children":[2474,2487,2490,2492]}],"sources":[{"fileName":"packages/core/src/events/InteractionStarts.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":2245,"name":"ActivityStarts","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/InteractionStarts","previousId":2450,"nextId":2494},{"id":2494,"name":"RetryableSceneDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Indicates that the test runner will retry running the test scenario upon failure."}]},"children":[{"id":2495,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":20,"character":11}],"signatures":[{"id":2496,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deserialises the event from a JSONObject"}]},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":20,"character":11}],"parameters":[{"id":2497,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2494,"name":"RetryableSceneDetected","package":"@serenity-js/core"}}]},{"id":2503,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2498,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":31,"character":4}],"signatures":[{"id":2499,"name":"new RetryableSceneDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":31,"character":4}],"parameters":[{"id":2500,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2501,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2494,"name":"RetryableSceneDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2502,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":32,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2504,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2505,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2506,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2507,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2508,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2509,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2510,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2498]},{"title":"Properties","children":[2503,2502]},{"title":"Methods","children":[2495,2504,2507,2509]}],"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/RetryableSceneDetected","previousId":2473,"nextId":2511},{"id":2511,"name":"SceneBackgroundDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2512,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":12,"character":18}],"signatures":[{"id":2513,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":12,"character":18}],"parameters":[{"id":2514,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2511,"name":"SceneBackgroundDetected","package":"@serenity-js/core"}}]},{"id":2524,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2515,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":20,"character":4}],"signatures":[{"id":2516,"name":"new SceneBackgroundDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":20,"character":4}],"parameters":[{"id":2517,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2518,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2519,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2520,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2511,"name":"SceneBackgroundDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2521,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2522,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2523,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":23,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2525,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2526,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2527,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2528,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2529,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2530,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2531,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2515]},{"title":"Properties","children":[2524,2521,2522,2523]},{"title":"Methods","children":[2512,2525,2528,2530]}],"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneBackgroundDetected","previousId":2494,"nextId":2532},{"id":2532,"name":"SceneDescriptionDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2533,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":12,"character":18}],"signatures":[{"id":2534,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":12,"character":18}],"parameters":[{"id":2535,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2532,"name":"SceneDescriptionDetected","package":"@serenity-js/core"}}]},{"id":2543,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2536,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":20,"character":4}],"signatures":[{"id":2537,"name":"new SceneDescriptionDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":20,"character":4}],"parameters":[{"id":2538,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2539,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2540,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2532,"name":"SceneDescriptionDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2541,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2542,"name":"description","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2544,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2545,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2546,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2547,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2548,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2549,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2550,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2536]},{"title":"Properties","children":[2543,2541,2542]},{"title":"Methods","children":[2533,2544,2547,2549]}],"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneDescriptionDetected","previousId":2511,"nextId":2551},{"id":2551,"name":"SceneFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2552,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":13,"character":11}],"signatures":[{"id":2553,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":13,"character":11}],"parameters":[{"id":2554,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2551,"name":"SceneFinished","package":"@serenity-js/core"}}]},{"id":2564,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2555,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":22,"character":4}],"signatures":[{"id":2556,"name":"new SceneFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":22,"character":4}],"parameters":[{"id":2557,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2558,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2559,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2560,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2551,"name":"SceneFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2561,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":23,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2562,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":24,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2563,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":25,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2565,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2566,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2567,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2568,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2569,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2570,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2571,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2555]},{"title":"Properties","children":[2564,2561,2562,2563]},{"title":"Methods","children":[2552,2565,2568,2570]}],"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneFinished","previousId":2532,"nextId":2572},{"id":2572,"name":"SceneFinishes","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted by a Serenity/JS test runner adapter, right before a test and all its associated test hooks finish.\\nTriggers any clean-up operations that might be required, such as discarding of\\nthe [discardable](/api/core/interface/Discardable/) abilities."}]},"children":[{"id":2573,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":16,"character":11}],"signatures":[{"id":2574,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":16,"character":11}],"parameters":[{"id":2575,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2572,"name":"SceneFinishes","package":"@serenity-js/core"}}]},{"id":2581,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2576,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":23,"character":4}],"signatures":[{"id":2577,"name":"new SceneFinishes","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":23,"character":4}],"parameters":[{"id":2578,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2579,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2572,"name":"SceneFinishes","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2580,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":24,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2582,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2583,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2584,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2585,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2586,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2587,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2588,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2576]},{"title":"Properties","children":[2581,2580]},{"title":"Methods","children":[2573,2582,2585,2587]}],"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneFinishes","previousId":2551,"nextId":2589},{"id":2589,"name":"SceneParametersDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2590,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":12,"character":18}],"signatures":[{"id":2591,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":12,"character":18}],"parameters":[{"id":2592,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2589,"name":"SceneParametersDetected","package":"@serenity-js/core"}}]},{"id":2602,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2593,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":21,"character":4}],"signatures":[{"id":2594,"name":"new SceneParametersDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":21,"character":4}],"parameters":[{"id":2595,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2596,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2597,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioParameters","package":"@serenity-js/core"}},{"id":2598,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2589,"name":"SceneParametersDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2599,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2600,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":23,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2601,"name":"parameters","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":24,"character":24}],"type":{"type":"reference","name":"ScenarioParameters","package":"@serenity-js/core"}},{"id":2603,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2604,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2605,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2606,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2607,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2608,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2609,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2593]},{"title":"Properties","children":[2602,2599,2600,2601]},{"title":"Methods","children":[2590,2603,2606,2608]}],"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneParametersDetected","previousId":2572,"nextId":2610},{"id":2610,"name":"SceneSequenceDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2611,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":12,"character":11}],"signatures":[{"id":2612,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":12,"character":11}],"parameters":[{"id":2613,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2610,"name":"SceneSequenceDetected","package":"@serenity-js/core"}}]},{"id":2621,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2614,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":20,"character":4}],"signatures":[{"id":2615,"name":"new SceneSequenceDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":20,"character":4}],"parameters":[{"id":2616,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2617,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2618,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2610,"name":"SceneSequenceDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2619,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2620,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2622,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2623,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2624,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2625,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2626,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2627,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2628,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2614]},{"title":"Properties","children":[2621,2619,2620]},{"title":"Methods","children":[2611,2622,2625,2627]}],"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneSequenceDetected","previousId":2589,"nextId":2629},{"id":2629,"name":"SceneStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2630,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":12,"character":11}],"signatures":[{"id":2631,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":12,"character":11}],"parameters":[{"id":2632,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2629,"name":"SceneStarts","package":"@serenity-js/core"}}]},{"id":2640,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2633,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":20,"character":4}],"signatures":[{"id":2634,"name":"new SceneStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":20,"character":4}],"parameters":[{"id":2635,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2636,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2637,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2629,"name":"SceneStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2638,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2639,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":22,"character":24}],"type":{"type":"reference","name":"ScenarioDetails","package":"@serenity-js/core"}},{"id":2641,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2642,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2643,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2644,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2645,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2646,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2647,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2633]},{"title":"Properties","children":[2640,2638,2639]},{"title":"Methods","children":[2630,2641,2644,2646]}],"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneStarts","previousId":2610,"nextId":2648},{"id":2648,"name":"SceneTagged","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2649,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":12,"character":11}],"signatures":[{"id":2650,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":12,"character":11}],"parameters":[{"id":2651,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2648,"name":"SceneTagged","package":"@serenity-js/core"}}]},{"id":2659,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2652,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":19,"character":4}],"signatures":[{"id":2653,"name":"new SceneTagged","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":19,"character":4}],"parameters":[{"id":2654,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2655,"name":"tag","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Tag","package":"@serenity-js/core"}},{"id":2656,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2648,"name":"SceneTagged","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2657,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":20,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2658,"name":"tag","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":21,"character":24}],"type":{"type":"reference","name":"Tag","package":"@serenity-js/core"}},{"id":2660,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2661,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2662,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2663,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2664,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2665,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2666,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2652]},{"title":"Properties","children":[2659,2657,2658]},{"title":"Methods","children":[2649,2660,2663,2665]}],"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneTagged","previousId":2629,"nextId":2667},{"id":2667,"name":"SceneTemplateDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2668,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":12,"character":18}],"signatures":[{"id":2669,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":12,"character":18}],"parameters":[{"id":2670,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2667,"name":"SceneTemplateDetected","package":"@serenity-js/core"}}]},{"id":2678,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2671,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":20,"character":4}],"signatures":[{"id":2672,"name":"new SceneTemplateDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":20,"character":4}],"parameters":[{"id":2673,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2674,"name":"template","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2675,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2667,"name":"SceneTemplateDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2676,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2677,"name":"template","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Description","package":"@serenity-js/core"}},{"id":2679,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2680,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2681,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2682,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2683,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2684,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2685,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2671]},{"title":"Properties","children":[2678,2676,2677]},{"title":"Methods","children":[2668,2679,2682,2684]}],"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/SceneTemplateDetected","previousId":2648,"nextId":2686},{"id":2686,"name":"TaskFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2687,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskFinished.ts","line":12,"character":11}],"signatures":[{"id":2688,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskFinished.ts","line":12,"character":11}],"parameters":[{"id":2689,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2686,"name":"TaskFinished","package":"@serenity-js/core"}}]},{"id":2690,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"signatures":[{"id":2691,"name":"new TaskFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4}],"parameters":[{"id":2692,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2693,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2694,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2695,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2696,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2686,"name":"TaskFinished","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2177,"name":"ActivityFinished.constructor"}}],"inheritedFrom":{"type":"reference","target":2176,"name":"ActivityFinished.constructor"}},{"id":2697,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2183,"name":"ActivityFinished.sceneId"}},{"id":2698,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2184,"name":"ActivityFinished.activityId"}},{"id":2699,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2185,"name":"ActivityFinished.details"}},{"id":2700,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":17,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2186,"name":"ActivityFinished.outcome"}},{"id":2701,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2187,"name":"ActivityFinished.timestamp"}},{"id":2702,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2703,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2704,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2189,"name":"ActivityFinished.equals"}}],"inheritedFrom":{"type":"reference","target":2188,"name":"ActivityFinished.equals"}},{"id":2705,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2706,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2192,"name":"ActivityFinished.toString"}}],"inheritedFrom":{"type":"reference","target":2191,"name":"ActivityFinished.toString"}},{"id":2707,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2708,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2194,"name":"ActivityFinished.toJSON"}}],"inheritedFrom":{"type":"reference","target":2193,"name":"ActivityFinished.toJSON"}}],"groups":[{"title":"Constructors","children":[2690]},{"title":"Properties","children":[2697,2698,2699,2700,2701]},{"title":"Methods","children":[2687,2702,2705,2707]}],"sources":[{"fileName":"packages/core/src/events/TaskFinished.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2175,"name":"ActivityFinished","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TaskFinished","previousId":2667,"nextId":2709},{"id":2709,"name":"TaskStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2710,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskStarts.ts","line":11,"character":11}],"signatures":[{"id":2711,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TaskStarts.ts","line":11,"character":11}],"parameters":[{"id":2712,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2709,"name":"TaskStarts","package":"@serenity-js/core"}}]},{"id":2713,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"signatures":[{"id":2714,"name":"new TaskStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4}],"parameters":[{"id":2715,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2716,"name":"activityId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2717,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}},{"id":2718,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2709,"name":"TaskStarts","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2247,"name":"ActivityStarts.constructor"}}],"inheritedFrom":{"type":"reference","target":2246,"name":"ActivityStarts.constructor"}},{"id":2719,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":14,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2252,"name":"ActivityStarts.sceneId"}},{"id":2720,"name":"activityId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":15,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2253,"name":"ActivityStarts.activityId"}},{"id":2721,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":16,"character":24}],"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":2254,"name":"ActivityStarts.details"}},{"id":2722,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2255,"name":"ActivityStarts.timestamp"}},{"id":2723,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2724,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2725,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2257,"name":"ActivityStarts.equals"}}],"inheritedFrom":{"type":"reference","target":2256,"name":"ActivityStarts.equals"}},{"id":2726,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2727,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2260,"name":"ActivityStarts.toString"}}],"inheritedFrom":{"type":"reference","target":2259,"name":"ActivityStarts.toString"}},{"id":2728,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2729,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2262,"name":"ActivityStarts.toJSON"}}],"inheritedFrom":{"type":"reference","target":2261,"name":"ActivityStarts.toJSON"}}],"groups":[{"title":"Constructors","children":[2713]},{"title":"Properties","children":[2719,2720,2721,2722]},{"title":"Methods","children":[2710,2723,2726,2728]}],"sources":[{"fileName":"packages/core/src/events/TaskStarts.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":2245,"name":"ActivityStarts","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TaskStarts","previousId":2686,"nextId":2730},{"id":2730,"name":"TestRunFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when all the test scenarios have finished running."}]},"children":[{"id":2731,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":14,"character":11}],"signatures":[{"id":2732,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":14,"character":11}],"parameters":[{"id":2733,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2730,"name":"TestRunFinished","package":"@serenity-js/core"}}]},{"id":2739,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2734,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":21,"character":4}],"signatures":[{"id":2735,"name":"new TestRunFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":21,"character":4}],"parameters":[{"id":2736,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2737,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2730,"name":"TestRunFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2738,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":22,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2740,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2741,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2742,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2743,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2744,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2745,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2746,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2734]},{"title":"Properties","children":[2739,2738]},{"title":"Methods","children":[2731,2740,2743,2745]}],"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunFinished","previousId":2709,"nextId":2747},{"id":2747,"name":"TestRunFinishes","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when the last test in the test suite has finished running\\nand it\'s time for any last-minute reporting activities to take place."}]},"children":[{"id":2748,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":11,"character":11}],"signatures":[{"id":2749,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":11,"character":11}],"parameters":[{"id":2750,"name":"v","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2747,"name":"TestRunFinishes","package":"@serenity-js/core"}}]},{"id":2754,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2751,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":17,"character":4}],"signatures":[{"id":2752,"name":"new TestRunFinishes","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":17,"character":4}],"parameters":[{"id":2753,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2747,"name":"TestRunFinishes","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2755,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2756,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2757,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2758,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2759,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2760,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2761,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2751]},{"title":"Properties","children":[2754]},{"title":"Methods","children":[2748,2755,2758,2760]}],"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunFinishes","previousId":2730,"nextId":2781},{"id":2781,"name":"TestRunStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Emitted when the very first test is about to start"}]},"children":[{"id":2782,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":10,"character":11}],"signatures":[{"id":2783,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":10,"character":11}],"parameters":[{"id":2784,"name":"v","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":2781,"name":"TestRunStarts","package":"@serenity-js/core"}}]},{"id":2788,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2785,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":16,"character":4}],"signatures":[{"id":2786,"name":"new TestRunStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":16,"character":4}],"parameters":[{"id":2787,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2781,"name":"TestRunStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2789,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2790,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2791,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2792,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2793,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2794,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2795,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2785]},{"title":"Properties","children":[2788]},{"title":"Methods","children":[2782,2789,2792,2794]}],"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":9,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunStarts","previousId":2747,"nextId":2762},{"id":2762,"name":"TestRunnerDetected","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2763,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":12,"character":18}],"signatures":[{"id":2764,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":12,"character":18}],"parameters":[{"id":2765,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2762,"name":"TestRunnerDetected","package":"@serenity-js/core"}}]},{"id":2773,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2766,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":20,"character":4}],"signatures":[{"id":2767,"name":"new TestRunnerDetected","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":20,"character":4}],"parameters":[{"id":2768,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2769,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2770,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2762,"name":"TestRunnerDetected","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2771,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":21,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":2772,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":22,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":2774,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2775,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2776,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2777,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2778,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2779,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2780,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2766]},{"title":"Properties","children":[2773,2771,2772]},{"title":"Methods","children":[2763,2774,2777,2779]}],"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestRunnerDetected","previousId":2781,"nextId":2796},{"id":2796,"name":"TestSuiteFinished","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2797,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":13,"character":11}],"signatures":[{"id":2798,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":13,"character":11}],"parameters":[{"id":2799,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2796,"name":"TestSuiteFinished","package":"@serenity-js/core"}}]},{"id":2807,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2800,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":21,"character":4}],"signatures":[{"id":2801,"name":"new TestSuiteFinished","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":21,"character":4}],"parameters":[{"id":2802,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":2803,"name":"outcome","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2804,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2796,"name":"TestSuiteFinished","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2805,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":22,"character":24}],"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":2806,"name":"outcome","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":23,"character":24}],"type":{"type":"reference","name":"Outcome","package":"@serenity-js/core"}},{"id":2808,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2809,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2810,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2811,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2812,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2813,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2814,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2800]},{"title":"Properties","children":[2807,2805,2806]},{"title":"Methods","children":[2797,2808,2811,2813]}],"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestSuiteFinished","previousId":2762,"nextId":2815},{"id":2815,"name":"TestSuiteStarts","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2816,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":12,"character":11}],"signatures":[{"id":2817,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":12,"character":11}],"parameters":[{"id":2818,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":2815,"name":"TestSuiteStarts","package":"@serenity-js/core"}}]},{"id":2824,"name":"timestamp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"defaultValue":"...","inheritedFrom":{"type":"reference","target":2410,"name":"DomainEvent.timestamp"}},{"id":2819,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":19,"character":4}],"signatures":[{"id":2820,"name":"new TestSuiteStarts","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":19,"character":4}],"parameters":[{"id":2821,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":2822,"name":"timestamp","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2815,"name":"TestSuiteStarts","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"DomainEvent.constructor"}},{"id":2823,"name":"details","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":20,"character":24}],"type":{"type":"reference","name":"TestSuiteDetails","package":"@serenity-js/core"}},{"id":2825,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2826,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":2827,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":2412,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","target":2411,"name":"DomainEvent.equals"}},{"id":2828,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2829,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":2415,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","target":2414,"name":"DomainEvent.toString"}},{"id":2830,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":2831,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":2417,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","target":2416,"name":"DomainEvent.toJSON"}}],"groups":[{"title":"Constructors","children":[2819]},{"title":"Properties","children":[2824,2823]},{"title":"Methods","children":[2816,2825,2828,2830]}],"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}],"permalink":"/api/core-events/class/TestSuiteStarts","previousId":2796,"nextId":2418}],"groups":[{"title":"Events","children":[2175,2195,2222,2245,2263,2288,2309,2328,2349,2366,2385,2406,2431,2450,2473,2494,2511,2532,2551,2572,2589,2610,2629,2648,2667,2686,2709,2730,2747,2781,2762,2796,2815]},{"title":"Time","children":[2418]}],"sources":[{"fileName":"packages/core/src/events/index.ts","line":1,"character":0}],"permalink":"/api/core-events"},"urlSlug":"core-events"},{"index":true,"label":"index","reflection":{"id":1,"name":"@serenity-js/core","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":1839,"name":"Serenity","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":1843,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":37,"character":4}],"signatures":[{"id":1844,"name":"new Serenity","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":37,"character":4}],"parameters":[{"id":1845,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1657,"name":"Clock","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1846,"name":"cwd","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."}],"type":{"type":"reference","target":1839,"name":"Serenity","package":"@serenity-js/core"}}]},{"id":1853,"name":"configure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":67,"character":4}],"signatures":[{"id":1854,"name":"configure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures Serenity/JS. Every call to this function\\nreplaces the previous configuration provided,\\nso this function should be called exactly once\\nin your test suite."}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":67,"character":4}],"parameters":[{"id":1855,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":67,"name":"SerenityConfig","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1856,"name":"engage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":190,"character":4}],"signatures":[{"id":1857,"name":"engage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Re-configures Serenity/JS with a new [cast](/api/core/class/Cast/) of [actors](/api/core/class/Actor/)\\nyou want to use in any subsequent calls to ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/).\\n\\nFor your convenience, use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) function instead,\\nwhich provides an alternative to calling ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) directly in your tests\\nand is typically invoked in a \\"before all\\" or \\"before each\\" hook of your test runner of choice.\\n\\nIf your implementation of the [cast](/api/core/class/Cast/) interface is stateless,\\nyou can invoke this function just once before your entire test suite is executed, see\\n- ["},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeAll) in Jasmine,\\n- ["},{"kind":"code","text":"`before`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`BeforeAll`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#beforeall--afterall) in Cucumber.js\\n\\nHowever, if your [cast](/api/core/class/Cast/) holds state that you want to reset before each scenario,\\nit\'s better to invoke "},{"kind":"code","text":"`engage`"},{"kind":"text","text":" before each test using:\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeEach) in Jasmine\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`Before`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#hooks) in Cucumber.js\\n\\n## Engaging a cast of actors\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Cast } from \'@serenity-js/core\';\\n\\nclass Actors implements Cast {\\n  prepare(actor: Actor) {\\n    return actor.whoCan(\\n      // ... abilities you\'d like the Actor to have\\n    );\\n  }\\n}\\n\\nengage(new Actors());\\n```"},{"kind":"text","text":"\\n\\n### Using with Mocha test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\n\\nbeforeEach(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Jasmine test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport \'jasmine\'\\n\\nbeforeEach(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Cucumber.js test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)"}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":190,"character":4}],"parameters":[{"id":1858,"name":"actors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1888,"name":"Cast","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1859,"name":"theActorCalled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":254,"character":4}],"signatures":[{"id":1860,"name":"theActorCalled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates or retrieves an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\ncalled "},{"kind":"code","text":"`name`"},{"kind":"text","text":" if one has already been instantiated.\\n\\nFor your convenience, use ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/) function instead.\\n\\n## Usage with Mocha\\n\\n"},{"kind":"code","text":"```typescript\\n  import { describe, it } from \'mocha\';\\n  import { actorCalled } from \'@serenity-js/core\';\\n\\n  describe(\'Feature\', () => {\\n\\n     it(\'should have some behaviour\', () =>\\n         actorCalled(\'James\').attemptsTo(\\n             // ... activities\\n         ))\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Usage with Jasmine\\n\\n"},{"kind":"code","text":"```typescript\\n  import \'jasmine\';\\n  import { actorCalled } from \'@serenity-js/core\';\\n\\n  describe(\'Feature\', () => {\\n\\n     it(\'should have some behaviour\', () =>\\n         actorCalled(\'James\').attemptsTo(\\n             // ... activities\\n         ))\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, (name: string) =>\\n  actorCalled(name).attemptsTo(\\n    // ... activities\\n  ))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)"}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":254,"character":4}],"parameters":[{"id":1861,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the actor to instantiate or retrieve"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}}]},{"id":1862,"name":"theActorInTheSpotlight","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":291,"character":4}],"signatures":[{"id":1863,"name":"theActorInTheSpotlight","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves an actor who was last instantiated or retrieved\\nusing ["},{"kind":"code","text":"`Serenity.theActorCalled`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorCalled).\\n\\nThis function is particularly useful when automating Cucumber scenarios.\\n\\nFor your convenience, use ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/) function instead.\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given, When } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, (name: string) =>\\n  actorCalled(name).attemptsTo(\\n    // ... activities\\n  ))\\n\\nWhen(/(?:he|she|they) browse their recent orders/, () =>\\n  actorInTheSpotlight().attemptsTo(\\n    // ... activities\\n  ))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)\\n- ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)"}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":291,"character":4}],"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}}]},{"id":1864,"name":"announce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":295,"character":4}],"signatures":[{"id":1865,"name":"announce","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":295,"character":4}],"parameters":[{"id":1866,"name":"events","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2425,"name":"EmitsDomainEvents.announce"}}],"implementationOf":{"type":"reference","target":2424,"name":"EmitsDomainEvents.announce"}},{"id":1867,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":299,"character":4}],"signatures":[{"id":1868,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":299,"character":4}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2430,"name":"EmitsDomainEvents.currentTime"}}],"implementationOf":{"type":"reference","target":2429,"name":"EmitsDomainEvents.currentTime"}},{"id":1869,"name":"assignNewSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":303,"character":4}],"signatures":[{"id":1870,"name":"assignNewSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":303,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":1871,"name":"currentSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":307,"character":4}],"signatures":[{"id":1872,"name":"currentSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":307,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2420,"name":"EmitsDomainEvents.currentSceneId"}}],"implementationOf":{"type":"reference","target":2419,"name":"EmitsDomainEvents.currentSceneId"}},{"id":1873,"name":"assignNewActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":311,"character":4}],"signatures":[{"id":1874,"name":"assignNewActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":311,"character":4}],"parameters":[{"id":1875,"name":"activityDetails","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2422,"name":"EmitsDomainEvents.assignNewActivityId"}}],"implementationOf":{"type":"reference","target":2421,"name":"EmitsDomainEvents.assignNewActivityId"}},{"id":1876,"name":"createError","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":315,"character":4}],"signatures":[{"id":1877,"name":"createError","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":315,"character":4}],"typeParameter":[{"id":1878,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":1879,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1880,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":315,"character":52}],"signatures":[{"id":1881,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":315,"character":52}],"parameters":[{"id":1882,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":1878,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":1883,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":148,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1878,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]},{"id":1884,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":322,"character":4}],"signatures":[{"id":1885,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@package","content":[]}]},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":322,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":2428,"name":"EmitsDomainEvents.waitForNextCue"}}],"implementationOf":{"type":"reference","target":2427,"name":"EmitsDomainEvents.waitForNextCue"}},{"id":1886,"name":"cwd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":326,"character":4}],"signatures":[{"id":1887,"name":"cwd","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":326,"character":4}],"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1843]},{"title":"Methods","children":[1853,1856,1859,1862,1864,1867,1869,1871,1873,1876,1884,1886]}],"sources":[{"fileName":"packages/core/src/Serenity.ts","line":21,"character":13}],"implementedTypes":[{"type":"reference","target":2418,"name":"EmitsDomainEvents","package":"@serenity-js/core"}],"permalink":"/api/core/class/Serenity","previousId":484,"nextId":66},{"id":66,"name":"ClassDescription","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`ClassDescription`"},{"kind":"text","text":" describes the Node module ID and optionally:\\n- a named export that you want to import\\n- a parameter that should be passed to the static "},{"kind":"code","text":"`fromJSON`"},{"kind":"text","text":" method if the imported type provides it.\\n\\n"},{"kind":"code","text":"`ClassDescription`"},{"kind":"text","text":" is used to describe the [stage crew members](/api/core/interface/StageCrewMember/) passed to ["},{"kind":"code","text":"`SerenityConfig`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/).\\n\\nThe most basic class description is the name of a Node module that must provide a "},{"kind":"code","text":"`default`"},{"kind":"text","text":" export.\\nFor example, below definition would be interpreted as a request to import the "},{"kind":"code","text":"`default`"},{"kind":"text","text":" export from the "},{"kind":"code","text":"`@serenity-js/serenity-bdd`"},{"kind":"text","text":" module and instantiate it using its no-arg constructor:\\n"},{"kind":"code","text":"```typescript\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    `@serenity-js/serenity-bdd`\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\nClass description can also include a named export to be imported. For example, below definition would be interpreted as a request\\nto import the "},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":" type from "},{"kind":"code","text":"`@serenity-js/serenity-bdd`"},{"kind":"text","text":" and instantiate it using its no-arg constructor:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    `@serenity-js/serenity-bdd:SerenityBDDReporter`\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\nHowever, not all types have no-arg constructors. In those cases, a type offering a "},{"kind":"code","text":"`static fromJSON(configParam)`"},{"kind":"text","text":" method can be described using a tuple\\nwhere the first item describes the Node module and optionally the class name, and the second item describes the "},{"kind":"code","text":"`configParam`"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    [ `@serenity-js/core:ArtifactArchiver`, { outputDirectory: \'./target/site/serenity\' } ]\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\nNote that the class description could also describe a local Node module. This can be useful when you\'re writing a custom StageCrewMember implementation.\\nFor example, "},{"kind":"code","text":"`./my-reporter:MyReporter`"},{"kind":"text","text":" would be interpreted as a request to load the "},{"kind":"code","text":"`MyReporter`"},{"kind":"text","text":" type from "},{"kind":"code","text":"`./my-reporter`"},{"kind":"text","text":" file, located\\nrelative to the [working directory](https://nodejs.org/api/process.html#processcwd) of the current Node.js process."}]},"sources":[{"fileName":"packages/core/src/config/ClassDescription.ts","line":52,"character":12}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"tuple","elements":[{"type":"intrinsic","name":"string"}]},{"type":"tuple","elements":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}]}]},"permalink":"/api/core#ClassDescription","previousId":1839,"nextId":67},{"id":67,"name":"SerenityConfig","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Describes the configuration object accepted by the ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/) function.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`ClassDescription`"},{"kind":"text","text":"](/api/core/#ClassDescription)\\n- ["},{"kind":"code","text":"`Stage.waitForNextCue`"},{"kind":"text","text":"](/api/core/class/Stage/#waitForNextCue)"}]},"children":[{"id":68,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":69,"name":"new SerenityConfig","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":67,"name":"SerenityConfig","package":"@serenity-js/core"}}]},{"id":70,"name":"actors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A [cast](/api/core/class/Cast/) of [actors](/api/core/class/Actor/) to be used when ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)\\nand ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/) functions are called."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":26,"character":4}],"type":{"type":"reference","target":1888,"name":"Cast","package":"@serenity-js/core"}},{"id":71,"name":"crew","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/) or [stage crew members](/api/core/interface/StageCrewMember/)\\nto be notified of [Serenity/JS domain events](/api/core-events/class/DomainEvent/) that occur during the scenario execution.\\n\\nNote that the "},{"kind":"code","text":"`crew`"},{"kind":"text","text":" can also be configured using [class descriptions](/api/core/#ClassDescription).\\nThis is useful when you need to load the configuration from a static "},{"kind":"code","text":"`json`"},{"kind":"text","text":" file, or when the test runner doesn\'t support\\nproviding class instances in configuration (e.g. Playwright Test)."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":36,"character":4}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"},{"type":"reference","target":2126,"typeArguments":[{"type":"reference","target":1962,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"},{"type":"reference","target":66,"name":"ClassDescription","package":"@serenity-js/core"}]}}},{"id":72,"name":"cueTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum amount of time between [SceneFinishes](/api/core-events/class/SceneFinishes/) and [SceneFinished](/api/core-events/class/SceneFinished/) events\\nthat Serenity/JS should wait for any post-scenario\\nasync operations to complete. Those include generating the screenshots,\\nsaving reports to disk, [dismissing the actors](/api/core/interface/Discardable/), and so on.\\n\\nDefaults to 5 seconds.\\n\\n**Please note** that this is not\\na scenario timeout, which should be configured in your test runner."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":49,"character":4}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}},{"id":73,"name":"interactionTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum default amount of time allowed for interactions such as ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)\\nto complete.\\n\\nDefaults to 5 seconds, can be overridden per interaction.\\n\\n**Please note** that this is not\\na scenario timeout, which should be configured in your test runner.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)"}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":63,"character":4}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}},{"id":74,"name":"diffFormatter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`DiffFormatter`"},{"kind":"text","text":"](/api/core/interface/DiffFormatter/) that\\nshould be used by the ["},{"kind":"code","text":"`ErrorFactory`"},{"kind":"text","text":"](/api/core/class/ErrorFactory/) and the ability\\nto ["},{"kind":"code","text":"`RaiseErrors`"},{"kind":"text","text":"](/api/core/class/RaiseErrors/)\\nwhen generating diffs included in ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) objects.\\n\\nBy default, Serenity/JS uses ["},{"kind":"code","text":"`NoOpDiffFormatter`"},{"kind":"text","text":"](/api/core/class/NoOpDiffFormatter/)"}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":73,"character":4}],"type":{"type":"reference","target":171,"name":"DiffFormatter","package":"@serenity-js/core"}},{"id":75,"name":"outputStream","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An output stream to be injected into [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/)\\n\\nDefaults to ["},{"kind":"code","text":"`process.stdout`"},{"kind":"text","text":"](https://nodejs.org/api/process.html#process_process_stdout)."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":80,"character":4}],"type":{"type":"reference","target":2159,"name":"OutputStream","package":"@serenity-js/core"}}],"groups":[{"title":"Constructors","children":[68]},{"title":"Properties","children":[70,71,72,73,74,75]}],"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":20,"character":22}],"permalink":"/api/core/class/SerenityConfig","previousId":66,"nextId":483},{"id":126,"name":"ErrorFactory","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates Serenity/JS ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/) objects based\\non the provided [configuration](/api/core/interface/ErrorOptions/)."}]},"children":[{"id":127,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":21,"character":4}],"signatures":[{"id":128,"name":"new ErrorFactory","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":21,"character":4}],"parameters":[{"id":129,"name":"formatter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":171,"name":"DiffFormatter","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":126,"name":"ErrorFactory","package":"@serenity-js/core"}}]},{"id":131,"name":"create","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":4}],"signatures":[{"id":132,"name":"create","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":4}],"typeParameter":[{"id":133,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":134,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":135,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":47}],"signatures":[{"id":136,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":47}],"parameters":[{"id":137,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":133,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":138,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":148,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":133,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[127]},{"title":"Methods","children":[131]}],"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":19,"character":13}],"permalink":"/api/core/class/ErrorFactory","previousId":1003,"nextId":148},{"id":148,"name":"ErrorOptions","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":149,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":8,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":150,"name":"location","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":9,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}},{"id":151,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":10,"character":4}],"type":{"type":"reference","target":1161,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":152,"name":"diff","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":11,"character":4}],"type":{"type":"reflection","declaration":{"id":153,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":154,"name":"expected","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":12,"character":8}],"type":{"type":"intrinsic","name":"unknown"}},{"id":155,"name":"actual","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":13,"character":8}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Properties","children":[154,155]}],"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":11,"character":11}]}}},{"id":156,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":15,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"groups":[{"title":"Properties","children":[149,150,151,152,156]}],"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":7,"character":17}],"permalink":"/api/core/interface/ErrorOptions","previousId":126,"nextId":76},{"id":76,"name":"ErrorSerialiser","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":81,"name":"serialise","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":19,"character":11}],"signatures":[{"id":82,"name":"serialise","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":19,"character":11}],"parameters":[{"id":83,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":84,"name":"registerErrorTypes","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":11}],"signatures":[{"id":85,"name":"registerErrorTypes","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":11}],"parameters":[{"id":86,"name":"types","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":87,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":46}],"signatures":[{"id":88,"name":"new types","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":46}],"parameters":[{"id":89,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}]}}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":90,"name":"deserialise","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":44,"character":11}],"signatures":[{"id":91,"name":"deserialise","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":44,"character":11}],"parameters":[{"id":92,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}]},{"id":115,"name":"deserialiseFromStackTrace","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":78,"character":11}],"signatures":[{"id":116,"name":"deserialiseFromStackTrace","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":78,"character":11}],"parameters":[{"id":117,"name":"stack","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}]},{"id":118,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":119,"name":"new ErrorSerialiser","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":76,"name":"ErrorSerialiser","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[118]},{"title":"Methods","children":[81,84,90,115]}],"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":7,"character":13}],"permalink":"/api/core/class/ErrorSerialiser","previousId":148,"nextId":120},{"id":120,"name":"ErrorStackParser","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A thin wrapper around error-stack-parser module\\n\\n## Learn more\\n- [Error stack parser](https://www.npmjs.com/package/error-stack-parser)"}]},"children":[{"id":121,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":122,"name":"new ErrorStackParser","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":120,"name":"ErrorStackParser","package":"@serenity-js/core"}}]},{"id":123,"name":"parse","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorStackParser.ts","line":12,"character":4}],"signatures":[{"id":124,"name":"parse","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/ErrorStackParser.ts","line":12,"character":4}],"parameters":[{"id":125,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/stackframe/stackframe.d.ts","qualifiedName":"StackFrame"},"name":"StackFrame","package":"stackframe"}}}]}],"groups":[{"title":"Constructors","children":[121]},{"title":"Methods","children":[123]}],"sources":[{"fileName":"packages/core/src/errors/ErrorStackParser.ts","line":11,"character":13}],"permalink":"/api/core/class/ErrorStackParser","previousId":76,"nextId":454},{"id":454,"name":"RaiseErrors","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to create a Serenity/JS ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/)\\nfrom within a custom ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\nThe stack trace of an error created this way includes the filesystem location pointing to where the interaction was invoked,\\nwhich makes debugging any failures easier.\\n\\n:::info Pro tip\\nThe ability to "},{"kind":"code","text":"`RaiseErrors`"},{"kind":"text","text":" is given to all Serenity/JS actors by default, so you don\'t need to configure it explicitly.\\n:::\\n\\n## Raising an error\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Interaction, LogicError, RaiseErrors, the } from \'@serenity-js/core\'\\nimport isPathInside from \'is-path-inside\'\\nimport { unlink } from \'fs/promises\'\\n\\nconst RemoveFile = (pathToFile: string) =>\\n  Interaction.where(the`#actor removes a file at ${ pathToFile }`, async actor => {\\n\\n    if (! isPathInside(pathToFile, process.cwd())) {\\n\\n      throw RaiseErrors.as(actor).create(LogicError, {\\n        message: `Removing files outside the current working directory is not allowed`\\n        diff: {\\n          expected: process.cwd(),\\n          actual: pathToFile,\\n        }\\n      })\\n    }\\n\\n    await unlink(pathToFile);\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ErrorOptions`"},{"kind":"text","text":"](/api/core/interface/ErrorOptions/)\\n- ["},{"kind":"code","text":"`ErrorFactory`"},{"kind":"text","text":"](/api/core/class/ErrorFactory/)\\n- ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)\\n- ["},{"kind":"code","text":"`ConfigurationError`"},{"kind":"text","text":"](/api/core/class/ConfigurationError/)\\n- ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n- ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/)\\n- ["},{"kind":"code","text":"`TestCompromisedError`"},{"kind":"text","text":"](/api/core/class/TestCompromisedError/)"}]},"children":[{"id":460,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":54,"character":4}],"signatures":[{"id":461,"name":"new RaiseErrors","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":54,"character":4}],"parameters":[{"id":462,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":454,"name":"RaiseErrors","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":491,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":490,"name":"Ability.constructor"}},{"id":464,"name":"create","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":4}],"signatures":[{"id":465,"name":"create","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":4}],"typeParameter":[{"id":466,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":467,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":468,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":47}],"signatures":[{"id":469,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":47}],"parameters":[{"id":470,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":466,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":471,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":148,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":466,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[460]},{"title":"Methods","children":[464]}],"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":53,"character":13}],"extendedTypes":[{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/RaiseErrors","previousId":120,"nextId":157},{"id":157,"name":"AnsiDiffFormatter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`DiffFormatter`"},{"kind":"text","text":"](/api/core/interface/DiffFormatter/) that uses [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code)\\nto format the output."}]},"children":[{"id":158,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":27,"character":4}],"signatures":[{"id":159,"name":"new AnsiDiffFormatter","variant":"signature","kind":16384,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"code","text":"`AnsiDiffFormatter`"},{"kind":"text","text":", configured with colour support options for [Chalk](https://github.com/chalk/chalk).\\nWhen no "},{"kind":"code","text":"`chalkOptions`"},{"kind":"text","text":" object is provided, Chalk will auto-detect colour support automatically based on the execution environment.\\n\\nAvailable colour support levels:\\n- "},{"kind":"code","text":"`0`"},{"kind":"text","text":" - All colours disabled.\\n- "},{"kind":"code","text":"`1`"},{"kind":"text","text":" - Basic 16 colours support.\\n- "},{"kind":"code","text":"`2`"},{"kind":"text","text":" - ANSI 256 colours support.\\n- "},{"kind":"code","text":"`3`"},{"kind":"text","text":" - Truecolor - 16 million colours support."}]},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":27,"character":4}],"parameters":[{"id":160,"name":"chalkOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/chalk/index.d.ts","qualifiedName":"chalk.Options"},"name":"Options","package":"chalk","qualifiedName":"chalk.Options"}}],"type":{"type":"reference","target":157,"name":"AnsiDiffFormatter","package":"@serenity-js/core"}}]},{"id":162,"name":"expected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":31,"character":4}],"signatures":[{"id":163,"name":"expected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":31,"character":4}],"parameters":[{"id":164,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":173,"name":"DiffFormatter.expected"}}],"implementationOf":{"type":"reference","target":172,"name":"DiffFormatter.expected"}},{"id":165,"name":"received","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":35,"character":4}],"signatures":[{"id":166,"name":"received","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":35,"character":4}],"parameters":[{"id":167,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":176,"name":"DiffFormatter.received"}}],"implementationOf":{"type":"reference","target":175,"name":"DiffFormatter.received"}},{"id":168,"name":"unchanged","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":39,"character":4}],"signatures":[{"id":169,"name":"unchanged","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":39,"character":4}],"parameters":[{"id":170,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":179,"name":"DiffFormatter.unchanged"}}],"implementationOf":{"type":"reference","target":178,"name":"DiffFormatter.unchanged"}}],"groups":[{"title":"Constructors","children":[158]},{"title":"Methods","children":[162,165,168]}],"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":12,"character":13}],"implementedTypes":[{"type":"reference","target":171,"name":"DiffFormatter","package":"@serenity-js/core"}],"permalink":"/api/core/class/AnsiDiffFormatter","previousId":454,"nextId":171},{"id":171,"name":"DiffFormatter","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Formats text representing expected, received, and unchanged lines of a diff\\nproduced by the ["},{"kind":"code","text":"`ErrorFactory`"},{"kind":"text","text":"](/api/core/class/ErrorFactory/), so that they can be presented to a developer\\nin a visually distinctive way."}]},"children":[{"id":172,"name":"expected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":9,"character":4}],"signatures":[{"id":173,"name":"expected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":9,"character":4}],"parameters":[{"id":174,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":175,"name":"received","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":10,"character":4}],"signatures":[{"id":176,"name":"received","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":10,"character":4}],"parameters":[{"id":177,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":178,"name":"unchanged","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":11,"character":4}],"signatures":[{"id":179,"name":"unchanged","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":11,"character":4}],"parameters":[{"id":180,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[172,175,178]}],"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":8,"character":17}],"implementedBy":[{"type":"reference","target":157,"name":"AnsiDiffFormatter"},{"type":"reference","target":181,"name":"NoOpDiffFormatter"}],"permalink":"/api/core/interface/DiffFormatter","previousId":157,"nextId":181},{"id":181,"name":"NoOpDiffFormatter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A no-op ["},{"kind":"code","text":"`DiffFormatter`"},{"kind":"text","text":"](/api/core/interface/DiffFormatter/) that produces output identical to input."}]},"children":[{"id":182,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":183,"name":"new NoOpDiffFormatter","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":181,"name":"NoOpDiffFormatter","package":"@serenity-js/core"}}]},{"id":184,"name":"expected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":9,"character":4}],"signatures":[{"id":185,"name":"expected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":9,"character":4}],"parameters":[{"id":186,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":173,"name":"DiffFormatter.expected"}}],"implementationOf":{"type":"reference","target":172,"name":"DiffFormatter.expected"}},{"id":187,"name":"received","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":13,"character":4}],"signatures":[{"id":188,"name":"received","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":13,"character":4}],"parameters":[{"id":189,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":176,"name":"DiffFormatter.received"}}],"implementationOf":{"type":"reference","target":175,"name":"DiffFormatter.received"}},{"id":190,"name":"unchanged","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":17,"character":4}],"signatures":[{"id":191,"name":"unchanged","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":17,"character":4}],"parameters":[{"id":192,"name":"line","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","target":179,"name":"DiffFormatter.unchanged"}}],"implementationOf":{"type":"reference","target":178,"name":"DiffFormatter.unchanged"}}],"groups":[{"title":"Constructors","children":[182]},{"title":"Methods","children":[184,187,190]}],"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":8,"character":13}],"implementedTypes":[{"type":"reference","target":171,"name":"DiffFormatter","package":"@serenity-js/core"}],"permalink":"/api/core/class/NoOpDiffFormatter","previousId":171,"nextId":193},{"id":193,"name":"AssertionError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an assertion has failed."}]},"children":[{"id":194,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":13,"character":11}],"signatures":[{"id":195,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":13,"character":11}],"parameters":[{"id":196,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":193,"name":"AssertionError","package":"@serenity-js/core"}}]},{"id":207,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":28,"character":4}],"signatures":[{"id":208,"name":"new AssertionError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":28,"character":4}],"parameters":[{"id":209,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error and the difference between the expected and actual values"}]},"type":{"type":"intrinsic","name":"string"}},{"id":210,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":193,"name":"AssertionError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":211,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":212,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":213,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":214,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":215,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":216,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":217,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":218,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[207]},{"title":"Properties","children":[211,216,217,218]},{"title":"Methods","children":[194,212,214]}],"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/AssertionError","previousId":181,"nextId":219},{"id":219,"name":"ConfigurationError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that a test framework or test suite configuration error occurred."}]},"children":[{"id":220,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":13,"character":11}],"signatures":[{"id":221,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":13,"character":11}],"parameters":[{"id":222,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":219,"name":"ConfigurationError","package":"@serenity-js/core"}}]},{"id":233,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":28,"character":4}],"signatures":[{"id":234,"name":"new ConfigurationError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":28,"character":4}],"parameters":[{"id":235,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":236,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":219,"name":"ConfigurationError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":237,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":238,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":239,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":240,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":241,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":242,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":243,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":244,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[233]},{"title":"Properties","children":[237,242,243,244]},{"title":"Methods","children":[220,238,240]}],"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/ConfigurationError","previousId":193,"nextId":245},{"id":245,"name":"ImplementationPendingError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) attempted to perform\\na ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) that hasn\'t been implemented yet.\\n\\n## A pending Task\\n\\n"},{"kind":"code","text":"```ts\\nimport { Task } from \'@serenity-js/core\'\\n\\n// A pending Task is one that encapsulates no other activities\\nconst Authenticate = () =>\\n  Task.where(`#actor authenticates with the service up a test database` )\\n```"},{"kind":"text","text":"\\n\\n## A pending Interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { Interaction } from \'@serenity-js/core\'\\n\\n// A pending Interaction is one that doesn\'t perform any action\\nconst DoubleClick = () =>\\n  Interaction.where(`#actor double-clicks`)\\n```"}]},"children":[{"id":246,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":34,"character":11}],"signatures":[{"id":247,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":34,"character":11}],"parameters":[{"id":248,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":245,"name":"ImplementationPendingError","package":"@serenity-js/core"}}]},{"id":259,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":49,"character":4}],"signatures":[{"id":260,"name":"new ImplementationPendingError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":49,"character":4}],"parameters":[{"id":261,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":262,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":245,"name":"ImplementationPendingError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":263,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":264,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":265,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":266,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":267,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":268,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":269,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":270,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[259]},{"title":"Properties","children":[263,268,269,270]},{"title":"Methods","children":[246,264,266]}],"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":32,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/ImplementationPendingError","previousId":219,"nextId":271},{"id":271,"name":"ListItemNotFoundError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or a test scenario\\ncan\'t be executed due to no items are found in a list.\\n\\nFor example, it\'s not possible to get the first() or the last() item of a list\\nif the list is empty."}]},"children":[{"id":272,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":17,"character":11}],"signatures":[{"id":273,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":17,"character":11}],"parameters":[{"id":274,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":271,"name":"ListItemNotFoundError","package":"@serenity-js/core"}}]},{"id":285,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":32,"character":4}],"signatures":[{"id":286,"name":"new ListItemNotFoundError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":32,"character":4}],"parameters":[{"id":287,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":288,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`ListItemNotFoundError`"},{"kind":"text","text":"](/api/core/class/ListItemNotFoundError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":271,"name":"ListItemNotFoundError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":289,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":290,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":291,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":292,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":293,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":294,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":295,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":296,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[285]},{"title":"Properties","children":[289,294,295,296]},{"title":"Methods","children":[272,290,292]}],"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/ListItemNotFoundError","previousId":245,"nextId":297},{"id":297,"name":"LogicError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or a test scenario\\ncan\'t be executed due to a logical error.\\n\\nFor example, it\'s not possible to assert on the last HTTP Response if the request\\nhasn\'t been performed yet."}]},"children":[{"id":298,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":17,"character":11}],"signatures":[{"id":299,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":17,"character":11}],"parameters":[{"id":300,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":297,"name":"LogicError","package":"@serenity-js/core"}}]},{"id":311,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":32,"character":4}],"signatures":[{"id":312,"name":"new LogicError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":32,"character":4}],"parameters":[{"id":313,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":314,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":297,"name":"LogicError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":315,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":316,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":317,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":318,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":319,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":320,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":321,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":322,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[311]},{"title":"Properties","children":[315,320,321,322]},{"title":"Methods","children":[298,316,318]}],"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/LogicError","previousId":271,"nextId":323},{"id":323,"name":"OperationInterruptedError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that a [scheduled operation](/api/core/class/Scheduler/)\\nhas been stopped before it was completed."}]},"children":[{"id":324,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":14,"character":11}],"signatures":[{"id":325,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":14,"character":11}],"parameters":[{"id":326,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":323,"name":"OperationInterruptedError","package":"@serenity-js/core"}}]},{"id":337,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":32,"character":4}],"signatures":[{"id":338,"name":"new OperationInterruptedError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":32,"character":4}],"parameters":[{"id":339,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":340,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":323,"name":"OperationInterruptedError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":341,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":342,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":343,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":344,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":345,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":346,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":347,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":348,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[337]},{"title":"Properties","children":[341,346,347,348]},{"title":"Methods","children":[324,342,344]}],"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/OperationInterruptedError","previousId":297,"nextId":349},{"id":349,"name":"RuntimeError","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Base class for custom errors that may occur during execution of a test scenario.\\n\\n## Defining a custom error\\n\\n"},{"kind":"code","text":"```ts\\nimport { RuntimeError } from \'@serenity-js/core\'\\n\\nexport class CustomError extends RuntimeError {\\n  constructor(message: string, cause?: Error) {\\n      super(CustomError, message, cause);\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n## Wrapping a sync error\\n\\n"},{"kind":"code","text":"```ts\\ntry {\\n    operationThatMightThrowAnError();\\n} catch(error) {\\n    // catch and re-throw\\n    throw new CustomError(\'operationThatMightThrowAnError has failed\', error);\\n}\\n```"},{"kind":"text","text":"\\n\\n## Wrapping an async error\\n\\n"},{"kind":"code","text":"```ts\\noperationThatMightRejectAPromise()\\n  .catch(error => {\\n    // catch and re-throw\\n    throw new CustomError(\'operationThatMightThrowAnError has failed\', error)\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Registering a custom error with ["},{"kind":"code","text":"`ErrorSerialiser`"},{"kind":"text","text":"](/api/core/class/ErrorSerialiser/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { RuntimeError } from \'@serenity-js/core\'\\nimport { ErrorSerialiser } from \'@serenity-js/core/lib/io\'\\n\\nexport class CustomError extends RuntimeError {\\n\\n   static fromJSON(serialised: JSONObject): CustomError {\\n        const error = new CustomError(\\n            serialised.message as string,\\n            ErrorSerialiser.deserialise(serialised.cause as string | undefined),\\n        );\\n\\n        error.stack = serialised.stack as string;\\n\\n        return error;\\n    }\\n\\n  constructor(message: string, cause?: Error) {\\n      super(CustomError, message, cause);\\n  }\\n}\\n\\nErrorSerialiser.registerErrorTypes(CustomError)\\n```"}]},"children":[{"id":368,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":369,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":370,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":371,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":372,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"}}]},{"id":373,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.name","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error/name"}},{"id":374,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.message","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error/message"}},{"id":375,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Error.stack","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error/stack"}}],"groups":[{"title":"Properties","children":[368,373,374,375]},{"title":"Methods","children":[369,371]}],"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":68,"character":22}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}],"extendedBy":[{"type":"reference","target":193,"name":"AssertionError"},{"type":"reference","target":219,"name":"ConfigurationError"},{"type":"reference","target":245,"name":"ImplementationPendingError"},{"type":"reference","target":271,"name":"ListItemNotFoundError"},{"type":"reference","target":297,"name":"LogicError"},{"type":"reference","target":323,"name":"OperationInterruptedError"},{"type":"reference","target":376,"name":"TestCompromisedError"},{"type":"reference","target":402,"name":"TimeoutExpiredError"},{"type":"reference","target":428,"name":"UnknownError"}],"permalink":"/api/core/class/RuntimeError","previousId":323,"nextId":376},{"id":376,"name":"TestCompromisedError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that the test can\'t be performed due to an issue with a downstream dependency.\\nFor example, it makes no sense to run a full-stack integration test if we already know that\\nthe database server is down.\\n\\n## Throwing a TestCompromisedError from a custom Interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { Interaction } from \'@serenity-js/core\';\\n\\nconst SetUpTestDatabase = () =>\\n  Interaction.where(`#actor sets up a test database`, actor => {\\n    return SomeCustomDatabaseSpecificAbility.as(actor).setUpTestDatabase().catch(error => {\\n      throw new TestCompromisedError(\'Could not set up the test database\', error)\\n    })\\n})\\n```"}]},"children":[{"id":377,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":28,"character":11}],"signatures":[{"id":378,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":28,"character":11}],"parameters":[{"id":379,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":376,"name":"TestCompromisedError","package":"@serenity-js/core"}}]},{"id":394,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":395,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":396,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":397,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":398,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":390,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":43,"character":4}],"signatures":[{"id":391,"name":"new TestCompromisedError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":43,"character":4}],"parameters":[{"id":392,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":393,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":376,"name":"TestCompromisedError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":399,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":400,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":401,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[390]},{"title":"Properties","children":[394,399,400,401]},{"title":"Methods","children":[377,395,397]}],"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":26,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/TestCompromisedError","previousId":349,"nextId":402},{"id":402,"name":"TimeoutExpiredError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) or a test scenario\\ntook longer to execute than the expected timeout."}]},"children":[{"id":403,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":14,"character":11}],"signatures":[{"id":404,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":14,"character":11}],"parameters":[{"id":405,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":402,"name":"TimeoutExpiredError","package":"@serenity-js/core"}}]},{"id":420,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":421,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":422,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":423,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":424,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":416,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":32,"character":4}],"signatures":[{"id":417,"name":"new TimeoutExpiredError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":32,"character":4}],"parameters":[{"id":418,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":419,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":402,"name":"TimeoutExpiredError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":425,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":426,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":427,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[416]},{"title":"Properties","children":[420,425,426,427]},{"title":"Methods","children":[403,421,423]}],"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/TimeoutExpiredError","previousId":376,"nextId":428},{"id":428,"name":"UnknownError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an unknown error has occurred."}]},"children":[{"id":429,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":13,"character":11}],"signatures":[{"id":430,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":13,"character":11}],"parameters":[{"id":431,"name":"serialised","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":428,"name":"UnknownError","package":"@serenity-js/core"}}]},{"id":446,"name":"cause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":368,"name":"RuntimeError.cause"}},{"id":447,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"signatures":[{"id":448,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":370,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":369,"name":"RuntimeError.toString"}},{"id":449,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"signatures":[{"id":450,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":107,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":372,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":371,"name":"RuntimeError.toJSON"}},{"id":442,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":28,"character":4}],"signatures":[{"id":443,"name":"new UnknownError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":28,"character":4}],"parameters":[{"id":444,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":445,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/), if any"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":428,"name":"UnknownError","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":451,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":373,"name":"RuntimeError.name"}},{"id":452,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":374,"name":"RuntimeError.message"}},{"id":453,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":375,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[442]},{"title":"Properties","children":[446,451,452,453]},{"title":"Methods","children":[429,447,449]}],"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/core/class/UnknownError","previousId":402,"nextId":1086},{"id":483,"name":"serenity","variant":"declaration","kind":32,"flags":{"isExternal":true,"isConst":true},"comment":{"summary":[{"kind":"text","text":"Serenity object is the root object of the Serenity/JS framework."}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":14,"character":13}],"type":{"type":"reference","target":1839,"name":"Serenity","package":"@serenity-js/core"},"defaultValue":"...","permalink":"/api/core#serenity","previousId":67,"nextId":472},{"id":472,"name":"configure","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":32,"character":16}],"signatures":[{"id":473,"name":"configure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures Serenity/JS. Every call to this function\\nreplaces the previous configuration provided,\\nso this function should be called exactly once\\nin your test suite.\\n\\nThis function is an alias for ["},{"kind":"code","text":"`Serenity.configure`"},{"kind":"text","text":"](/api/core/class/Serenity/#configure).\\n\\n:::tip configure vs engage\\n * If you want to retain the configuration but reset the [cast of actors](/api/core/class/Cast/), use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) instead.\\n:::"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":32,"character":16}],"parameters":[{"id":474,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":67,"name":"SerenityConfig","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/core/function/configure","previousId":483,"nextId":475},{"id":475,"name":"engage","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":145,"character":16}],"signatures":[{"id":476,"name":"engage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Re-configures Serenity/JS with a new [cast](/api/core/class/Cast/) of [actors](/api/core/class/Actor/)\\nyou want to use in any subsequent calls to ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/).\\n\\nThis function is an alias for ["},{"kind":"code","text":"`Serenity.engage`"},{"kind":"text","text":"](/api/core/class/Serenity/#engage),\\nwhich provides an alternative to calling ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) directly in your tests\\nand is typically invoked in a \\"before all\\" or \\"before each\\" hook of your test runner of choice.\\n\\n:::tip configure vs engage\\nCalling ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) replaces the currently configured [cast of actors](/api/core/class/Cast/),\\nbut doesn\'t affect any other configuration.\\nIf you want to reset the Serenity/JS configuration completely, use ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/) instead.\\n:::\\n\\nIf your implementation of the [cast](/api/core/class/Cast/) interface is stateless,\\nyou can invoke this function just once before your entire test suite is executed, see\\n- ["},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeAll) in Jasmine,\\n- ["},{"kind":"code","text":"`before`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`BeforeAll`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#beforeall--afterall) in Cucumber.js\\n\\nHowever, if your [cast](/api/core/class/Cast/) holds state that you want to reset before each scenario,\\nit\'s better to invoke "},{"kind":"code","text":"`engage`"},{"kind":"text","text":" before each test using:\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeEach) in Jasmine\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`Before`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#hooks) in Cucumber.js\\n\\n## Engaging a cast of actors\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Cast } from \'@serenity-js/core\';\\n\\nclass Actors implements Cast {\\n  prepare(actor: Actor) {\\n    return actor.whoCan(\\n      // ... abilities you\'d like the Actor to have\\n    );\\n  }\\n}\\n\\nengage(new Actors());\\n```"},{"kind":"text","text":"\\n\\n### Using with Mocha test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\n\\nbeforeEach(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Jasmine test runner\\n\\n"},{"kind":"code","text":"```typescript\\nimport \'jasmine\'\\n\\ndescribe(\'My feature\', () => {\\n  beforeEach(() => engage(new Actors()))\\n\\n\\n})\\n```"},{"kind":"text","text":"\\n\\n### Using with Cucumber.js test runner\\n\\nEngage "},{"kind":"code","text":"`Actors`"},{"kind":"text","text":" [before](https://github.com/cucumber/cucumber-js/blob/main/docs/support_files/hooks.md)\\neach test scenario:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\nEngage "},{"kind":"code","text":"`Actors`"},{"kind":"text","text":" before scenarios with [specific tags](https://github.com/cucumber/cucumber-js/blob/main/docs/support_files/hooks.md#tagged-hooks):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(\'@web\', () => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Playwright Test runner\\n\\n[Serenity/JS Playwright Test module](/api/playwright-test) will configure the cast on your behalf,\\nso you don\'t need to call ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\n\\ndescribe(\'My feature\', () => {\\n\\n  this.use({\\n    actors: new Actors()\\n  })\\n\\n  // test scenarios\\n\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`Serenity.engage`"},{"kind":"text","text":"](/api/core/class/Serenity/#engage)"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":145,"character":16}],"parameters":[{"id":477,"name":"actors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1888,"name":"Cast","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/core/function/engage","previousId":472,"nextId":1888},{"id":478,"name":"actorCalled","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":232,"character":16}],"signatures":[{"id":479,"name":"actorCalled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates or retrieves an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\ncalled "},{"kind":"code","text":"`name`"},{"kind":"text","text":" if one has already been instantiated.\\n\\nThis method is an alias for ["},{"kind":"code","text":"`Serenity.theActorCalled`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorCalled).\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, async (name: string) => {\\n  await actorCalled(name).attemptsTo(\\n    // ... activities\\n  )\\n})\\n```"},{"kind":"text","text":"\\n\\n## Usage with Jasmine\\n\\n"},{"kind":"code","text":"```typescript\\nimport \'jasmine\';\\nimport { actorCalled } from \'@serenity-js/core\';\\n\\ndescribe(\'Feature\', () => {\\n\\n    it(\'should have some behaviour\', async () {\\n        await actorCalled(\'James\').attemptsTo(\\n            // ... activities\\n        )\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Usage with Mocha\\n\\n"},{"kind":"code","text":"```typescript\\nimport { describe, it } from \'mocha\';\\nimport { actorCalled } from \'@serenity-js/core\';\\n\\ndescribe(\'Feature\', () => {\\n\\n    it(\'should have some behaviour\', async () => {\\n        await actorCalled(\'James\').attemptsTo(\\n            // ... activities\\n        )\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Usage with Playwright Test\\n\\nWhen using [Serenity/JS with Playwright Test](/api/playwright-test/), you should use either\\nthe default ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) fixture\\nor the injected ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) function\\ninstead of importing it from "},{"kind":"code","text":"`@serenity-js/core`"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { describe, it } from \'@serenity-js/playwright-test\';\\n\\ndescribe(\'Feature\', () => {\\n\\n    it(\'should have some behaviour\', async ({ actorCalled }) => {\\n        await actorCalled(\'James\').attemptsTo(\\n            // ... activities\\n        )\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`Serenity.theActorCalled`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorCalled)"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":232,"character":16}],"parameters":[{"id":480,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the actor to instantiate or retrieve"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}}],"permalink":"/api/core/function/actorCalled","previousId":1016,"nextId":481},{"id":481,"name":"actorInTheSpotlight","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/instance.ts","line":270,"character":16}],"signatures":[{"id":482,"name":"actorInTheSpotlight","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves an actor who was last instantiated or retrieved\\nusing ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/).\\n\\nThis function is particularly useful when automating Cucumber scenarios.\\n\\nThis function is an alias for ["},{"kind":"code","text":"`Serenity.theActorInTheSpotlight`"},{"kind":"text","text":"](/api/core/class/Serenity/#theActorInTheSpotlight).\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given, When } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, (name: string) =>\\n  actorCalled(name).attemptsTo(\\n    // ... activities\\n  ))\\n\\nWhen(/(?:he|she|they) browse their recent orders/, () =>\\n  actorInTheSpotlight().attemptsTo(\\n    // ... activities\\n  ))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)"}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":270,"character":16}],"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}}],"permalink":"/api/core/function/actorInTheSpotlight","previousId":478,"nextId":515},{"id":57,"name":"format","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":16}],"signatures":[{"id":58,"name":"format","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`format`"},{"kind":"text","text":" is a factory function returning\\na [tag function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_template_literals)\\nthat produces a human-readable "},{"kind":"code","text":"`string`"},{"kind":"text","text":" description of a template containing\\none or more [answerables](/api/core/#Answerable).\\n\\nTypically, you\'ll want to use "},{"kind":"code","text":"`d`"},{"kind":"text","text":" and "},{"kind":"code","text":"`f`"},{"kind":"text","text":" shorthands instead, or the modern alternative - "},{"kind":"code","text":"`the`"},{"kind":"text","text":":\\n- the ["},{"kind":"code","text":"`d`"},{"kind":"text","text":"](/api/core/function/d/) function works best for generating a **static description** of a parameterised ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n- the ["},{"kind":"code","text":"`f`"},{"kind":"text","text":"](/api/core/function/f/) function is better suited for debugging\\n- the ["},{"kind":"code","text":"`the`"},{"kind":"text","text":"](/api/core/function/f/) function works best for generating a **dynamic description** of a parameterised ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n\\n:::tip Use "},{"kind":"code","text":"`the`"},{"kind":"text","text":" instead of "},{"kind":"code","text":"`format`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"`format`"},{"kind":"text","text":", "},{"kind":"code","text":"`d`"},{"kind":"text","text":" and "},{"kind":"code","text":"`f`"},{"kind":"text","text":" are the original Serenity/JS string formatting functions,\\nstill present in the framework for backwards compatibility purposes.\\n\\nTo generate a dynamic description of a "},{"kind":"code","text":"`Question`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":",\\nuse ["},{"kind":"code","text":"`the`"},{"kind":"text","text":"](/api/core/function/the/) function instead.\\n:::\\n\\n## Using "},{"kind":"code","text":"`format`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { format, Question } from \'@serenity-js/core\'\\n\\nconst someQuestion = () =>\\n  Question.about(\'some question\', actor => \'some value\')\\n\\nformat({ markQuestions: true }) `actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n\\nformat({ markQuestions: false }) `actor answers ${ question() }`\\n // returns: actor answers some question\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`d`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { d, Question } from \'@serenity-js/core\'\\n\\nconst someQuestion = () =>\\n  Question.about(\'some question\', actor => \'some value\')\\n\\nd`actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`f`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { f, Question } from \'@serenity-js/core\'\\n\\nconst someQuestion = () =>\\n  Question.about(\'some question\', actor => \'some value\')\\n\\nf`actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n\\nformat({ markQuestions: false }) `actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n```"}]},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":16}],"parameters":[{"id":59,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`markQuestions`"},{"kind":"text","text":": boolean - if set to true, descriptions of questions passed in as arguments will be surrounded with double angled brackets, i.e. "},{"kind":"code","text":"`<<description>>`"}]},"type":{"type":"reflection","declaration":{"id":60,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":61,"name":"markQuestions","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":33}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[61]}],"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":31}]}}}],"type":{"type":"reflection","declaration":{"id":62,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":70,"character":60}],"signatures":[{"id":63,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":64,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":65,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"string"}}]}}}],"permalink":"/api/core/function/format","previousId":868,"nextId":53},{"id":53,"name":"f","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":82,"character":13}],"signatures":[{"id":54,"name":"f","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":82,"character":13}],"parameters":[{"id":55,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":56,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/core/function/f","previousId":57,"nextId":49},{"id":49,"name":"d","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":85,"character":13}],"signatures":[{"id":50,"name":"d","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/io/format.ts","line":85,"character":13}],"parameters":[{"id":51,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":52,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/core/function/d","previousId":53,"nextId":648},{"id":567,"name":"Activity","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Activities** represents [tasks](/api/core/class/Task/) and [interactions](/api/core/class/Interaction/) to be performed by an [actor](/api/core/class/Actor/).\\n\\nLearn more about:\\n- [Performing activities at multiple levels](/handbook/design/screenplay-pattern#performing-activities-at-multiple-levels)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- [Command design pattern on Wikipedia](https://en.wikipedia.org/wiki/Command_pattern)"}]},"children":[{"id":572,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"signatures":[{"id":573,"name":"new Activity","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"parameters":[{"id":574,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":575,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":567,"name":"Activity","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"Describable.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Describable.constructor"}},{"id":577,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":578,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}}]},{"id":579,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":53,"character":13}],"signatures":[{"id":580,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":53,"character":13}],"parameters":[{"id":581,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"type":{"type":"union","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":562,"name":"PerformsActivities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":582,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":583,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":584,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":585,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":586,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[586]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1072,"name":"Describable.describedBy"}}],"inheritedFrom":{"type":"reference","target":1071,"name":"Describable.describedBy"}},{"id":592,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":593,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1082,"name":"Describable.toString"}}],"inheritedFrom":{"type":"reference","target":1081,"name":"Describable.toString"}}],"groups":[{"title":"Constructors","children":[572]},{"title":"Methods","children":[577,579,582,592]}],"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":22,"character":22}],"extendedTypes":[{"type":"reference","target":1067,"name":"Describable","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":753,"name":"Interaction"},{"type":"reference","target":1538,"name":"Task"}],"permalink":"/api/core/class/Activity","previousId":1517,"nextId":594},{"id":594,"name":"Actor","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**Actors** represent **people** and **external systems** interacting with the system under test.\\nTheir role is to perform [activities](/api/core/class/Activity/) that demonstrate how to accomplish a given goal.\\n\\nActors are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [abilities](/api/core/class/Ability/), [interactions](/api/core/class/Interaction/), [tasks](/api/core/class/Task/), and [questions](/api/core/class/Question/).\\nActors are also the first thing you see in a typical Serenity/JS test scenario.\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\n- ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n\\n## Representing people and systems as actors\\n\\nTo use a Serenity/JS ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/), all you need is to say their name:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\')\\n// returns: Actor\\n```"},{"kind":"text","text":"\\n\\nSerenity/JS actors perform within the scope of a test scenario, so the first time you invoke ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/),\\nSerenity/JS instantiates a new actor from the default [cast](/api/core/class/Cast/) of actors (or any custom cast you might have [configured](/api/core/function/configure/)).\\nAny subsequent invocations of this function within the scope of the same test scenario retrieve the already instantiated actor, identified by their name.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\')    // instantiates Alice\\nactorCalled(\'Bob\')      // instantiates Bob\\nactorCalled(\'Alice\')    // retrieves Alice, since she\'s already been instantiated\\n```"},{"kind":"text","text":"\\n\\nSerenity/JS scenarios can involve as many or as few actors as you need to model the given business workflow.\\nFor example, you might want to use **multiple actors** in test scenarios that model how **different people** perform different parts of a larger business process, such as reviewing and approving a loan application.\\nIt is also quite common to introduce **supporting actors** to perform **administrative tasks**, like setting up test data and environment, or **audit tasks**, like checking the logs or messages emitted to a message queue\\nby the system under test.\\n\\n:::info The Stan Lee naming convention\\nActor names can be much more than just simple identifiers like "},{"kind":"code","text":"`Alice`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Bob`"},{"kind":"text","text":". While you can give your actors any names you like, a good convention to follow is to give them\\nnames indicating the [personae](https://articles.uie.com/goodwin_interview/) they represent or the role they play in the system.\\n\\nJust like the characters in [Stan Lee](https://en.wikipedia.org/wiki/Stan_Lee) graphic novels,\\nactors in Serenity/JS test scenarios are often given alliterate names as a mnemonic device.\\nNames like \\"Adam the Admin\\", \\"Edna the Editor\\", \\"Trevor the Traveller\\", are far more memorable than a generic \\"UI user\\" or \\"API user\\".\\nThey\'re also much easier for people to associate with the context, constraints, and affordances of the given actor.\\n:::"}]},"children":[{"id":595,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":94,"character":4}],"signatures":[{"id":596,"name":"new Actor","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":94,"character":4}],"parameters":[{"id":597,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":598,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}},{"id":599,"name":"abilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}},"defaultValue":"[]"}],"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}}]},{"id":601,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":95,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":603,"name":"abilityTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":117,"character":4}],"signatures":[{"id":604,"name":"abilityTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves actor\'s ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) of "},{"kind":"code","text":"`abilityType`"},{"kind":"text","text":", or one that extends "},{"kind":"code","text":"`abilityType`"},{"kind":"text","text":".\\n\\nPlease note that this method performs an ["},{"kind":"code","text":"`instanceof`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof) check against abilities\\ngiven to this actor via ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan).\\n\\nPlease also note that ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) performs the same check when abilities are assigned to the actor\\nto ensure the actor has at most one instance of a given ability type."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":117,"character":4}],"typeParameter":[{"id":605,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}}],"parameters":[{"id":606,"name":"abilityType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":492,"typeArguments":[{"type":"reference","target":605,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AbilityType","package":"@serenity-js/core"}}],"type":{"type":"reference","target":605,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"implementationOf":{"type":"reference","target":559,"name":"UsesAbilities.abilityTo"}}],"implementationOf":{"type":"reference","target":558,"name":"UsesAbilities.abilityTo"}},{"id":607,"name":"attemptsTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) attempt to perform a sequence of [activities](/api/core/class/Activity/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":138,"character":4}],"signatures":[{"id":608,"name":"attemptsTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the actor to attempt to perform a number of [activities](/api/core/class/Activity/),\\nso either [tasks](/api/core/class/Task/) or [interactions](/api/core/class/Interaction/)),\\none by one."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":138,"character":4}],"parameters":[{"id":609,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":567,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":563,"name":"PerformsActivities.attemptsTo"}}],"implementationOf":{"type":"reference","target":563,"name":"PerformsActivities.attemptsTo"}},{"id":610,"name":"whoCan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":159,"character":4}],"signatures":[{"id":611,"name":"whoCan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Gives this Actor a list of [abilities](/api/core/class/Ability/) they can use\\nto interact with the system under test or the test environment."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The actor with newly gained abilities"}]},{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`ConfigurationError`"},{"kind":"text","text":"](/api/core/class/ConfigurationError/)\\n Throws a ConfigurationError if the actor already has an ability of this type."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":159,"character":4}],"parameters":[{"id":612,"name":"abilities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A vararg list of abilities to give the actor"}]},"type":{"type":"array","elementType":{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":517,"name":"CanHaveAbilities.whoCan"}}],"implementationOf":{"type":"reference","target":516,"name":"CanHaveAbilities.whoCan"}},{"id":613,"name":"answer","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":172,"character":4}],"signatures":[{"id":614,"name":"answer","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The answer to the Answerable"}]}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":172,"character":4}],"typeParameter":[{"id":615,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":616,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) to answer (resolve the value of)."}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":615,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":615,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":1005,"name":"AnswersQuestions.answer"}}],"implementationOf":{"type":"reference","target":1004,"name":"AnswersQuestions.answer"}},{"id":617,"name":"collect","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":179,"character":4}],"signatures":[{"id":618,"name":"collect","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) collect an artifact so that it can be included in the test report.\\n\\n#### Implementing a custom interaction to attach artifacts\\n\\n"},{"kind":"code","text":"```ts\\nimport * as fs from \'node:fs\'\\nimport { Answerable, Interaction, the } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\nimport { Name, TextData } from \'@serenity-js/core/lib/model\'\\n\\nexport class Attach {\\n\\n  static contentsOf = (pathToFile: Path): Interaction =>\\n    Interaction.where(`#actor attaches contents of ${ pathToFile.basename() }`, async actor => {\\n      const data = fs.readFileSync(pathToFile.value).toString(\'utf-8\');\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        new Name(pathToFile.basename()),\\n      )\\n    })\\n\\n  static textData = (contents: Answerable<string>, name?: string): Interaction =>\\n    Interaction.where(the`#actor attaches text data`, async actor => {\\n      const data = await actor.answer(contents);\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        name && new Name(name),\\n      )\\n    })\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Attaching plain text\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.textData(\'some text\', \'some name\'),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Attaching contents of a text file\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.contentsOf(Path.from(__dirname, \'output/server.log\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":179,"character":4}],"parameters":[{"id":619,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The artifact to be collected, such as "},{"kind":"code","text":"`JSON`"},{"kind":"text","text":" data."}]},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":620,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The name of the artifact to make it easy to recognise in the test report"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Name","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":654,"name":"CollectsArtifacts.collect"}}],"implementationOf":{"type":"reference","target":653,"name":"CollectsArtifacts.collect"}},{"id":621,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":192,"character":4}],"signatures":[{"id":622,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current time."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":192,"character":4}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":1836,"name":"TellsTime.currentTime"}}],"implementationOf":{"type":"reference","target":1835,"name":"TellsTime.currentTime"}},{"id":623,"name":"dismiss","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":200,"character":4}],"signatures":[{"id":624,"name":"dismiss","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the actor to invoke ["},{"kind":"code","text":"`Discardable.discard`"},{"kind":"text","text":"](/api/core/interface/Discardable/#discard) method on any\\n[discardable](/api/core/interface/Discardable/) [ability](/api/core/class/Ability/) it\'s been configured with."}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":200,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":625,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":214,"character":4}],"signatures":[{"id":626,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable, string representation of this actor and their abilities.\\n\\n**PRO TIP:** To get the name of the actor, use ["},{"kind":"code","text":"`Actor.name`"},{"kind":"text","text":"](/api/core/class/Actor/#name)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":214,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[595]},{"title":"Properties","children":[601]},{"title":"Methods","children":[603,607,610,613,617,621,623,625]}],"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":85,"character":13}],"implementedTypes":[{"type":"reference","target":562,"name":"PerformsActivities","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":515,"typeArguments":[{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}],"name":"CanHaveAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":652,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1834,"name":"TellsTime","package":"@serenity-js/core"}],"permalink":"/api/core/class/Actor","previousId":567,"nextId":753},{"id":648,"name":"Answerable","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A union type that provides a convenient way to represent any value\\nthat can be resolved by ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Answerable.ts","line":9,"character":12}],"typeParameters":[{"id":649,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"union","types":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":649,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":649,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":649,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},{"type":"reference","target":649,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}]},"permalink":"/api/core#Answerable","previousId":49,"nextId":650},{"id":650,"name":"Answered","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes the type of answer a given ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) would\\nresolve to when given to ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer).\\n\\n"},{"kind":"code","text":"```ts\\nAnswered<Answerable<T>> === T\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Answered.ts","line":13,"character":12}],"typeParameters":[{"id":651,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"conditional","checkType":{"type":"reference","target":651,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"trueType":{"type":"reference","target":651,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"falseType":{"type":"conditional","checkType":{"type":"reference","target":651,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":893,"typeArguments":[{"type":"inferred","name":"A"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]},"trueType":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"},"falseType":{"type":"reference","target":651,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}},"permalink":"/api/core#Answered","previousId":648,"nextId":890},{"id":753,"name":"Interaction","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Interactions** are low-level [activities](/api/core/class/Activity/) that encapsulate\\na handful of instructions for an [actor](/api/core/class/Actor/) on how to use their [abilities](/api/core/class/Ability/)\\nto perform an individual interaction with the given interface of the system under test.\\n\\n:::tip Tasks or interactions?\\nBecause of their low-level nature, interactions are named using the vocabulary of the [solution domain](https://blog.mattwynne.net/2013/01/17/the-problem-with-solutions/),\\nand represent an individual interaction with the given interface, e.g. ["},{"kind":"code","text":"`Click`"},{"kind":"text","text":"](/api/web/class/Click/), ["},{"kind":"code","text":"`Enter`"},{"kind":"text","text":"](/api/web/class/Enter/), or ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/).\\n\\nInteractions follow the [Single Responsibility Principle](https://en.wikipedia.org/wiki/Single_responsibility_principle) which means that they do _one thing and one thing only_.\\nIf you\'re considering implementing an \\"interaction\\" that performs more than one logical activity, e.g. checks if the button is visible and then clicks on it if is,\\nconsider using separate interactions for separate responsibilities and then composing them using a [task](/api/core/class/Task/).\\n:::\\n\\nInteractions are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [abilities](/api/core/class/Ability/), [questions](/api/core/class/Question/), and [tasks](/api/core/class/Task/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- [Abilities](/api/core/class/Ability/)\\n- [Activities](/api/core/class/Activity/)\\n\\n## Writing a custom interaction\\n\\n[Serenity/JS modules](/handbook/getting-started/architecture) ship with dozens of interactions to help you compose your test scenarios.\\nHowever, if you need to interact with a non-standard interface, or want to create a flavour of a given interaction that behaves slightly differently than the built-in version,\\nyou can easily create your own implementations using the ["},{"kind":"code","text":"`Interaction.where`"},{"kind":"text","text":"](/api/core/class/Interaction/#where) factory method.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Interaction, the } from \'@serenity-js/core\'\\nimport { BrowseTheWeb, Page } from \'@serenity-js/web\'\\n\\nexport const ClearLocalStorage = () =>\\n  Interaction.where(the`#actor clears local storage`, async (actor: Actor) => {\\n    // Interaction to ClearLocalStorage directly uses Actor\'s ability to BrowseTheWeb\\n    const page: Page = await BrowseTheWeb.as(actor).currentPage()\\n    await page.executeScript(() => window.localStorage.clear())\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Using a custom interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { By, Navigate, PageElement } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\n\\nawait actorCalled(\'In\xeas\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    ClearLocalStorage(), // reported as \\"In\xeas clears local storage\\"\\n  )\\n```"}]},"children":[{"id":754,"name":"where","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":79,"character":11}],"signatures":[{"id":755,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":79,"character":11}],"parameters":[{"id":756,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Description to be used when reporting this interaction, for example "},{"kind":"code","text":"`#actor clears local storage`"},{"kind":"text","text":".\\n Note that "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" will be replaced with the name of the actor performing this interaction."}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":757,"name":"interaction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":758,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":81,"character":21}],"signatures":[{"id":759,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":81,"character":21}],"parameters":[{"id":760,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":652,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":764,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"signatures":[{"id":765,"name":"new Interaction","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"parameters":[{"id":766,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":767,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":573,"name":"Activity.constructor"}}],"inheritedFrom":{"type":"reference","target":572,"name":"Activity.constructor"}},{"id":772,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":773,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":578,"name":"Activity.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":577,"name":"Activity.instantiationLocation"}},{"id":768,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":97,"character":13}],"signatures":[{"id":769,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":97,"character":13}],"parameters":[{"id":770,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":580,"name":"Activity.performAs"}}],"overwrites":{"type":"reference","target":579,"name":"Activity.performAs"}},{"id":774,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":775,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":776,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":777,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":778,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[778]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":583,"name":"Activity.describedBy"}}],"inheritedFrom":{"type":"reference","target":582,"name":"Activity.describedBy"}},{"id":784,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":785,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":593,"name":"Activity.toString"}}],"inheritedFrom":{"type":"reference","target":592,"name":"Activity.toString"}}],"groups":[{"title":"Constructors","children":[764]},{"title":"Methods","children":[754,772,768,774,784]}],"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":70,"character":22}],"extendedTypes":[{"type":"reference","target":567,"name":"Activity","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":657,"name":"Debug"},{"type":"reference","target":717,"name":"Log"},{"type":"reference","target":1613,"name":"WaitUntil"}],"permalink":"/api/core/class/Interaction","previousId":594,"nextId":893},{"id":890,"name":"Optional","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`Optional`"},{"kind":"text","text":" is a container object, which holds a value that may or may not be \\"present\\",\\n\\nThe meaning of being \\"present\\" depends on the context and typically means a value that:\\n- is other than "},{"kind":"code","text":"`null`"},{"kind":"text","text":" or "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":"\\n- is retrievable, so retrieving it doesn\'t throw any errors\\n\\nAdditionally, "},{"kind":"code","text":"`Optional`"},{"kind":"text","text":" can also have a context-specific meaning. For example, "},{"kind":"code","text":"`Optional#isPresent()`"},{"kind":"text","text":":\\n- in the context of a "},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":" means that the element exists in the DOM.\\n- in the context of a "},{"kind":"code","text":"`ModalWindow`"},{"kind":"text","text":" means that the modal window is open.\\n- in the case of a REST API response, "},{"kind":"code","text":"`LastResponse.body().books[0].author.name.isPresent()`"},{"kind":"text","text":"\\n  will inform us if a given entry exists (so "},{"kind":"code","text":"`books[0].author.name`"},{"kind":"text","text":"),\\n  and if all the links of the property chain leading to the entry of interest exist too\\n  (so "},{"kind":"code","text":"`books`"},{"kind":"text","text":" is present, and so is "},{"kind":"code","text":"`books[0]`"},{"kind":"text","text":", "},{"kind":"code","text":"`books[0].author`"},{"kind":"text","text":", "},{"kind":"code","text":"`books[0].author.name`"},{"kind":"text","text":")."}]},"children":[{"id":891,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Optional.ts","line":25,"character":4}],"signatures":[{"id":892,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the optional value\\nis present, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/core/src/screenplay/Optional.ts","line":25,"character":4}],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Answerable","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[891]}],"sources":[{"fileName":"packages/core/src/screenplay/Optional.ts","line":20,"character":17}],"permalink":"/api/core/interface/Optional","previousId":650,"nextId":983},{"id":893,"name":"Question","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Questions** describe how [actors](/api/core/class/Actor/) should query the system under test or the test environment to retrieve some information.\\n\\nQuestions are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [abilities](/api/core/class/Ability/),\\n[interactions](/api/core/class/Interaction/),\\nand [tasks](/api/core/class/Task/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n## Implementing a basic custom Question\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, AnswersQuestions, UsesAbilities, Question } from \'@serenity-js/core\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n const LastItemOf = <T>(list: T[]): Question<T> =>\\n   Question.about(\'last item from the list\', (actor: AnswersQuestions & UsesAbilities) => {\\n     return list[list.length - 1]\\n   });\\n\\n await actorCalled(\'Quentin\').attemptsTo(\\n   Ensure.that(LastItemFrom([1,2,3]), equals(3)),\\n )\\n```"},{"kind":"text","text":"\\n\\n## Implementing a Question that uses an Ability\\n\\nJust like the [interactions](/api/core/class/Interaction/), a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\nalso can use [actor\'s](/api/core/class/Actor/) [abilities](/api/core/class/Ability/).\\n\\nHere, we use the ability to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) to retrieve a property of\\nan HTTP response.\\n\\n"},{"kind":"code","text":"```ts\\n import { AnswersQuestions, UsesAbilities, Question } from \'@serenity-js/core\'\\n import { CallAnApi } from \'@serenity-js/rest\'\\n\\n const TextOfLastResponseStatus = () =>\\n   Question.about<number>(`the text of the last response status`, actor => {\\n     return CallAnApi.as(actor).mapLastResponse(response => response.statusText)\\n   })\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\n- ["},{"kind":"code","text":"`LastResponse`"},{"kind":"text","text":"](/api/rest/class/LastResponse/)\\n\\n## Mapping answers to other questions\\n\\nApart from retrieving information, [questions](/api/core/class/Question/) can be used to transform information retrieved by other questions.\\n\\nHere, we use the factory method ["},{"kind":"code","text":"`Question.about`"},{"kind":"text","text":"](/api/core/class/Question/#about) to produce a question that makes the received [actor](/api/core/class/Actor/)\\nanswer ["},{"kind":"code","text":"`LastResponse.status`"},{"kind":"text","text":"](/api/rest/class/LastResponse/#status) and then compare it against some expected value.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, AnswersQuestions, UsesAbilities, Question } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst RequestWasSuccessful = () =>\\n  Question.about<number>(`the text of the last response status`, async actor => {\\n    const status = await actor.answer(LastResponse.status());\\n\\n    return status === 200;\\n  })\\n\\nawait actorCalled(\'Quentin\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'));\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(RequestWasSuccessful(), isTrue()),\\n  )\\n```"},{"kind":"text","text":"\\n\\nNote that the above example is for demonstration purposes only, Serenity/JS provides an easier way to\\nverify the response status of the ["},{"kind":"code","text":"`LastResponse`"},{"kind":"text","text":"](/api/rest/class/LastResponse/):\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Quentin\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'));\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"}]},"children":[{"id":894,"name":"about","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":137,"character":11},{"fileName":"packages/core/src/screenplay/Question.ts","line":143,"character":11},{"fileName":"packages/core/src/screenplay/Question.ts","line":148,"character":11}],"signatures":[{"id":895,"name":"about","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Factory method that simplifies the process of defining custom questions.\\n\\n#### Defining a custom question\\n\\n"},{"kind":"code","text":"```ts\\nimport { Question } from \'@serenity-js/core\'\\n\\nconst EnvVariable = (name: string) =>\\n  Question.about(`the ${ name } env variable`, actor => process.env[name])\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":137,"character":11}],"typeParameter":[{"id":896,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":897,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":898,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":899,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":900,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":139,"character":14}],"signatures":[{"id":901,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":139,"character":14}],"parameters":[{"id":902,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"union","types":[{"type":"reference","target":896,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":896,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":903,"name":"metaQuestionBody","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":904,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":140,"character":26}],"signatures":[{"id":905,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":140,"character":26}],"parameters":[{"id":906,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":897,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"union","types":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":896,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":896,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Question","package":"@serenity-js/core"}]}}]}}}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":897,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":896,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}},{"id":907,"name":"about","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":143,"character":11}],"typeParameter":[{"id":908,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":909,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":910,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":911,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":145,"character":14}],"signatures":[{"id":912,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":145,"character":14}],"parameters":[{"id":913,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"union","types":[{"type":"reference","target":908,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":908,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":908,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":914,"name":"fromObject","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":225,"character":11}],"signatures":[{"id":915,"name":"fromObject","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that recursively resolves\\nany ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) fields of the provided object,\\nincluding ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) fields\\nof [nested objects](/api/core/#WithAnswerableProperties).\\n\\nOptionally, the method accepts "},{"kind":"code","text":"`overrides`"},{"kind":"text","text":" to be shallow-merged with the fields of the original "},{"kind":"code","text":"`source`"},{"kind":"text","text":",\\nproducing a new merged object.\\n\\nOverrides are applied from left to right, with subsequent objects overwriting property assignments of the previous ones.\\n\\n#### Resolving an object recursively using "},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { Send, PostRequest } from \'@serenity-js/rest\'\\nimport { By, Text, PageElement } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Daisy\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org\'))\\n  .attemptsTo(\\n    Send.a(\\n      PostRequest.to(\'/products/2\')\\n        .with(\\n          Question.fromObject({\\n            name: Text.of(PageElement.located(By.css(\'.name\'))),\\n          })\\n        )\\n      )\\n  );\\n```"},{"kind":"text","text":"\\n\\n#### Merging objects using "},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Question } from \'@serenity-js/core\'\\n import { Send, PostRequest } from \'@serenity-js/rest\'\\n import { By, Text, PageElement } from \'@serenity-js/web\'\\n\\n await actorCalled(\'Daisy\')\\n   .whoCan(CallAnApi.at(\'https://api.example.org\'))\\n   .attemptsTo(\\n     Send.a(\\n       PostRequest.to(\'/products/2\')\\n         .with(\\n           Question.fromObject({\\n             name: Text.of(PageElement.located(By.css(\'.name\'))),\\n             quantity: undefined,\\n           }, {\\n             quantity: 2,\\n           })\\n         )\\n       )\\n   );\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- ["},{"kind":"code","text":"`RecursivelyAnswered`"},{"kind":"text","text":"](/api/core/#RecursivelyAnswered)\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":225,"character":11}],"typeParameter":[{"id":916,"name":"Source_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":917,"name":"source","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":1837,"typeArguments":[{"type":"reference","target":916,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WithAnswerableProperties","package":"@serenity-js/core"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":918,"name":"overrides","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":1837,"typeArguments":[{"type":"reference","target":916,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WithAnswerableProperties","package":"@serenity-js/core"}],"name":"Partial","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":1536,"typeArguments":[{"type":"reference","target":916,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"RecursivelyAnswered","package":"@serenity-js/core"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":919,"name":"fromArray","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":250,"character":11}],"signatures":[{"id":920,"name":"fromArray","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves\\nany ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) elements of the provided array."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":250,"character":11}],"typeParameter":[{"id":921,"name":"Source_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":922,"name":"source","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":921,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}},{"id":923,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1084,"name":"DescriptionFormattingOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":921,"name":"Source_Type","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":924,"name":"isAQuestion","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":276,"character":11}],"signatures":[{"id":925,"name":"isAQuestion","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if the value is a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":276,"character":11}],"typeParameter":[{"id":926,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":927,"name":"maybeQuestion","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to check"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"maybeQuestion","asserts":false,"targetType":{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":926,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Question","package":"@serenity-js/core"}}}]},{"id":928,"name":"isAMetaQuestion","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":287,"character":11}],"signatures":[{"id":929,"name":"isAMetaQuestion","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if the value is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":287,"character":11}],"typeParameter":[{"id":930,"name":"CT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":931,"name":"RQT","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":893,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Question","package":"@serenity-js/core"}}],"parameters":[{"id":932,"name":"maybeMetaQuestion","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to check"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"maybeMetaQuestion","asserts":false,"targetType":{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":930,"name":"CT","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":931,"name":"RQT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaQuestion","package":"@serenity-js/core"}}}]},{"id":933,"name":"formattedValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":314,"character":11}],"signatures":[{"id":934,"name":"formattedValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be composed with any ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nto produce a single-line description of its value.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst accountDetails = () =>\\n  Question.about(\'account details\', actor => ({ name: \'Alice\', age: 28 }))\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Ensure.that(\\n    Question.formattedValue().of(accountDetails()),\\n    equals(\'{ name: \\"Alice\\", age: 28 }\'),\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":314,"character":11}],"parameters":[{"id":935,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1084,"name":"DescriptionFormattingOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1497,"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":936,"name":"value","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":345,"character":11}],"signatures":[{"id":937,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be composed with any ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nto return its value when the answerable is a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/),\\nor the answerable itself otherwise.\\n\\nThe description of the resulting question is produced by calling ["},{"kind":"code","text":"`Question.describedBy`"},{"kind":"text","text":"](/api/core/class/Question/#describedBy) on the\\nprovided answerable.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst accountDetails = () =>\\n  Question.about(\'account details\', actor => ({ name: \'Alice\', age: 28 }))\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Ensure.that(\\n    Question.description().of(accountDetails()),\\n    equals(\'account details\'),\\n  ),\\n  Ensure.that(\\n    Question.value().of(accountDetails()),\\n    equals({ name: \'Alice\', age: 28 }),\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":345,"character":11}],"typeParameter":[{"id":938,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":938,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":938,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":957,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":483,"character":13}],"signatures":[{"id":958,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to use their [abilities](/api/core/class/Ability/)\\nto answer this question."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":483,"character":13}],"parameters":[{"id":959,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":982,"name":"T","package":"@serenity-js/core","qualifiedName":"Question.T","refersToTypeParameter":true}}]},{"id":960,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"signatures":[{"id":961,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"parameters":[{"id":962,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":982,"name":"T","package":"@serenity-js/core","qualifiedName":"Question.T","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"}}]},{"id":963,"name":"as","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"signatures":[{"id":964,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"typeParameter":[{"id":965,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":966,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":967,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"signatures":[{"id":968,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"parameters":[{"id":969,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","target":982,"name":"T","package":"@serenity-js/core","qualifiedName":"Question.T","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}}],"type":{"type":"union","types":[{"type":"reference","target":965,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":965,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":965,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":970,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":971,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":972,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":973,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":974,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[974]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1072,"name":"Describable.describedBy"}}],"inheritedFrom":{"type":"reference","target":1071,"name":"Describable.describedBy"}},{"id":980,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":981,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1082,"name":"Describable.toString"}}],"inheritedFrom":{"type":"reference","target":1081,"name":"Describable.toString"}}],"groups":[{"title":"Methods","children":[894,914,919,924,928,933,936,957,960,963,970,980]}],"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":119,"character":22}],"typeParameters":[{"id":982,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1067,"name":"Describable","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":1242,"name":"List"}],"permalink":"/api/core/class/Question","previousId":753,"nextId":1538},{"id":983,"name":"QuestionAdapterFieldDecorator","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an object recursively wrapped in ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) proxies, so that:\\n- both methods and fields of the wrapped object can be used as [questions](/api/core/class/Question/) or [interactions](/api/core/class/Interaction/)\\n- method parameters of the wrapped object will accept ["},{"kind":"code","text":"`Answerable<T>`"},{"kind":"text","text":"](/api/core/#Answerable)"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":537,"character":12}],"typeParameters":[{"id":994,"name":"Original_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"mapped","parameter":"Field","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":994,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","target":994,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionStatement","package":"@serenity-js/core"}}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"}},"templateType":{"type":"conditional","checkType":{"type":"indexedAccess","indexType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":994,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}},"extendsType":{"type":"reflection","declaration":{"id":984,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":540,"character":37}],"signatures":[{"id":985,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":986,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"inferred","name":"OriginalParameters"}}],"type":{"type":"inferred","name":"OriginalMethodResult"}}]}},"trueType":{"type":"conditional","checkType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":"replace"},{"type":"literal","value":"replaceAll"}]},"trueType":{"type":"reflection","declaration":{"id":987,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":543,"character":18}],"signatures":[{"id":988,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":989,"name":"searchValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}],"name":"Answerable","package":"@serenity-js/core"}},{"id":990,"name":"replaceValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]}},"falseType":{"type":"reflection","declaration":{"id":991,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":544,"character":18}],"signatures":[{"id":992,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":993,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"mapped","parameter":"P","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"OriginalParameters","package":"@serenity-js/core","refersToTypeParameter":true}},"templateType":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"P","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"OriginalParameters","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","name":"OriginalMethodResult","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]}}},"falseType":{"type":"conditional","checkType":{"type":"indexedAccess","indexType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":994,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}},"extendsType":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"bigint"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"},{"type":"intrinsic","name":"object"}]},"trueType":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"Field","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":994,"name":"Original_Type","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"},"falseType":{"type":"intrinsic","name":"any"}}}},"permalink":"/api/core#QuestionAdapterFieldDecorator","previousId":890,"nextId":995},{"id":995,"name":"QuestionAdapter","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A union type representing a proxy object returned by ["},{"kind":"code","text":"`Question.about`"},{"kind":"text","text":"](/api/core/class/Question/#about).\\n\\n["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) proxies the methods and fields of the wrapped object recursively,\\nallowing them to be used as either a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) or an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":561,"character":12}],"typeParameters":[{"id":999,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"intersection","types":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":999,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":996,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":997,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":564,"character":8}],"signatures":[{"id":998,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":564,"character":8}],"type":{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[997]}],"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":564,"character":6}]}},{"type":"reference","target":983,"typeArguments":[{"type":"reference","target":999,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapterFieldDecorator","package":"@serenity-js/core"}]},"permalink":"/api/core#QuestionAdapter","previousId":983,"nextId":1000},{"id":1000,"name":"MetaQuestionAdapter","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An extension of ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter), that in addition to proxying methods and fields\\nof the wrapped object can also act as a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":573,"character":12}],"typeParameters":[{"id":1001,"name":"Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1002,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"intersection","types":[{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":1002,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":1001,"name":"Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":1002,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]},"permalink":"/api/core#MetaQuestionAdapter","previousId":995,"nextId":1536},{"id":1536,"name":"RecursivelyAnswered","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes a recursively resolved plain JavaScript object with [answerable properties](/api/core/#WithAnswerableProperties).\\n\\nTypically, used in conjunction with ["},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"](/api/core/class/Question/#fromObject).\\n\\n## Using "},{"kind":"code","text":"`RecursivelyAnswered`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport {\\n  actorCalled, notes, q, Question, QuestionAdapter, WithAnswerableProperties\\n} from \'@serenity-js/core\';\\n\\ninterface RequestConfiguration {\\n  headers: Record<string, string>;\\n}\\n\\nconst requestConfiguration: WithAnswerableProperties<RequestConfiguration> = {\\n  headers: {\\n    Authorization: q`Bearer ${ notes().get(\'authDetails\').token }`\\n  }\\n}\\n\\nconst question: QuestionAdapter<RequestConfiguration> =\\n  Question.fromObject<RequestConfiguration>(requestConfiguration)\\n\\nconst answer = await actorCalled(\'Annie\').answer(question);\\n\\nconst a1: RequestConfiguration = answer;\\nconst a2: RecursivelyAnswered<WithAnswerableProperties<RequestConfiguration>> = answer;\\n\\n// RequestConfiguration === RecursivelyAnswered<WithAnswerableProperties<RequestConfiguration>>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/RecursivelyAnswered.ts","line":38,"character":12}],"typeParameters":[{"id":1537,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"conditional","checkType":{"type":"reference","target":1537,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"trueType":{"type":"reference","target":1537,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1537,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":893,"typeArguments":[{"type":"inferred","name":"A"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]},"trueType":{"type":"reference","target":1536,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Awaited"},"typeArguments":[{"type":"reference","name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Awaited","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"}],"name":"RecursivelyAnswered","package":"@serenity-js/core"},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1537,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"object"},"trueType":{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1537,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}},"templateType":{"type":"reference","target":1536,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"K","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1537,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"RecursivelyAnswered","package":"@serenity-js/core"}},"falseType":{"type":"reference","target":1537,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}}},"permalink":"/api/core#RecursivelyAnswered","previousId":1000,"nextId":1837},{"id":1538,"name":"Task","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Tasks** model **[sequences of activities](/api/core/class/Activity/)**\\nand help you capture meaningful steps of an [actor](/api/core/class/Actor/) workflow\\nin your domain.\\n\\nTypically, tasks correspond to higher-level, business domain-specific activities\\nlike to "},{"kind":"code","text":"`BookAPlaneTicket`"},{"kind":"text","text":", "},{"kind":"code","text":"`PlaceATrade`"},{"kind":"text","text":", "},{"kind":"code","text":"`TransferFunds`"},{"kind":"text","text":", and so on.\\nHowever, higher-level tasks can and should be composed of lower-level tasks.\\nFor example, a task to "},{"kind":"code","text":"`SignUp`"},{"kind":"text","text":" could be composed of tasks to "},{"kind":"code","text":"`ProvideUsername`"},{"kind":"text","text":" and "},{"kind":"code","text":"`ProvidePassword`"},{"kind":"text","text":".\\n\\nThe lowest-level tasks in your abstraction hierarchy should be composed of [interactions](/api/core/class/Interaction/).\\nFor example, a low-level task to "},{"kind":"code","text":"`ProvideUsername`"},{"kind":"text","text":" could be composed of an interaction to [enter](/api/web/class/Enter/) the value\\ninto a form field and [press](/api/web/class/Press/) the ["},{"kind":"code","text":"`Key.Enter`"},{"kind":"text","text":"](/api/web/class/Key/#Enter).\\n\\nTasks are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [abilities](/api/core/class/Ability/), [interactions](/api/core/class/Interaction/), and [questions](/api/core/class/Question/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- [User-Centred Design: How a 50 year old technique became the key to scalable test automation](https://janmolak.com/user-centred-design-how-a-50-year-old-technique-became-the-key-to-scalable-test-automation-66a658a36555)\\n- [Actors](/api/core/class/Actor/)\\n- [Activities](/api/core/class/Activity/)\\n- [Interactions](/api/core/class/Interaction/)\\n\\n## Defining a task\\n\\n"},{"kind":"code","text":"```ts\\nimport { Answerable, Task, the } from \'@serenity-js/core\'\\nimport { By, Click, Enter, PageElement, Press, Key } from \'@serenity-js/web\'\\n\\nconst SignIn = (username: Answerable<string>, password: Answerable<string>) =>\\n  Task.where(the`#actor signs is as ${ username }`,\\n    Enter.theValue(username).into(PageElement.located(By.id(\'username\'))),\\n    Enter.theValue(password).into(PageElement.located(By.id(\'password\'))),\\n    Press.the(Key.Enter),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Defining a not implemented task\\n\\nNote that calling ["},{"kind":"code","text":"`Task.where`"},{"kind":"text","text":"](/api/core/class/Task/#where) method without providing the sequence of [activities](/api/core/class/Activity/)\\nproduces a Task that\'s marked as \\"pending\\" in the test report.\\n\\nThis feature is useful when you want to quickly write down a task that will be needed in the scenario,\\nbut you\'re not yet sure what activities it will involve.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Task, the } from \'@serenity-js/core\'\\n\\nconst SignUp = () =>\\n    Task.where(the`#actor signs up for a newsletter`) // no activities provided\\n                                                      // => task marked as pending\\n```"},{"kind":"text","text":"\\n\\n## Composing activities into tasks\\n\\nThe purpose of **tasks** is to help you capture domain vocabulary by **associating domain meaning** with a **sequence of activities**.\\nFrom the implementation perspective, tasks help you give a **meaningful description** to such sequence\\nand provide a way to **easily reuse activities across your code base**.\\n\\n:::tip Remember\\n**Tasks** associate **domain meaning** with a sequence of **lower-level activities** and provide a mechanism for **code reuse**.\\n:::\\n\\nFor example, a task to _find a flight connection from London to New York_ could be modelled as a sequence of the following lower-level activities:\\n- specify origin city of \\"London\\"\\n- specify destination city of \\"New York\\"\\n\\nThe easiest way to implement such task, and any custom Serenity/JS task for this matter, is to use the ["},{"kind":"code","text":"`Task.where`"},{"kind":"text","text":"](/api/core/class/Task/#where) method to compose the lower-level activities:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Task, the } from \'@serenity-js/core\'\\n\\nconst findFlight = (originCity: string, destinationCity: string) =>\\n    Task.where(the`#actor finds a flight from ${ originCity } to ${ destinationCity }`,   // task goal\\n        specifyOriginCity(originCity),                                                  // activities\\n        specifyDestinationCity(originCity),\\n    )\\n```"},{"kind":"text","text":"\\n\\nFurthermore, if the actor was interacting with a web UI, a task to _specify origin city_ could again be composed of other activities:\\n- click on the "},{"kind":"code","text":"`origin airport`"},{"kind":"text","text":" widget\\n- enter city name of "},{"kind":"code","text":"`London`"},{"kind":"text","text":"\\n- pick the first suggested airport from the list\\n\\nConversely, a task to _specify destination city_ could be composed of:\\n- click on the "},{"kind":"code","text":"`destination airport`"},{"kind":"text","text":" widget\\n- enter city name of "},{"kind":"code","text":"`New York`"},{"kind":"text","text":"\\n- pick the first suggested airport from the list\\n\\nConveniently, [Serenity/JS modules](/handbook/getting-started/architecture) provide low-level activities that\\nallow actors to interact with the various interfaces of the system under test.\\nFor example, [Serenity/JS Web module](/api/web) ships with activities such as ["},{"kind":"code","text":"`Click`"},{"kind":"text","text":"](/api/web/class/Click/) or ["},{"kind":"code","text":"`Enter`"},{"kind":"text","text":"](/api/web/class/Enter/),\\nwhich we can incorporate into our task definitions just like any other activities:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Task, the } from \'@serenity-js/core\'\\nimport { Click, Enter, Key, Press } from \'@serenity-js/web\'\\n\\nimport { FlightFinder } from \'./ui/flight-finder\'\\n\\nconst specifyOriginCity = (originCity: string) =>\\n    Task.where(the`#actor specifies origin city of ${ originCity }`,\\n        Click.on(FlightFinder.originAirport),\\n        Enter.theValue(originCity).into(FlightFinder.originAirport),\\n        Press.the(Key.ArrowDown, Key.Enter).into(FlightFinder.originAirport),\\n    )\\n\\nconst specifyDestinationCity = (destinationCity: string) =>\\n    Task.where(the`#actor specifies destination city of ${ destinationCity }`,\\n        Click.on(FlightFinder.destinationAirport),\\n        Enter.theValue(destinationCity).into(FlightFinder.destinationAirport),\\n        Press.the(Key.ArrowDown, Key.Enter).into(FlightFinder.destinationAirport),\\n    )\\n```"},{"kind":"text","text":"\\n\\nAs you can already see, tasks to _specify origin city_ and _specify destination city_ are almost identical,\\nsave for the name of the widget and the text value the actor is supposed to enter.\\nSerenity/JS **task-based code reuse model** means that we can clean up such duplicated implementation\\nby **extracting a parameterised task**, in this case called "},{"kind":"code","text":"`specifyCity`"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Task, the } from \'@serenity-js/core\'\\nimport { Click, Enter, Key, PageElement, Press } from \'@serenity-js/web\'\\n\\nimport { FlightFinder } from \'./ui/flight-finder\'\\n\\nconst specifyOriginCity = (originCity: string) =>\\n    Task.where(the`#actor specifies origin city of ${ originCity }`,\\n        specifyCity(originCity, FlightFinder.originAirport)\\n    )\\n\\nconst specifyDestinationCity = (destinationCity: string) =>\\n    Task.where(the`#actor specifies destination city of ${ destinationCity }`,\\n        specifyCity(destinationCity, FlightFinder.destinationAirport),\\n    )\\n\\nconst specifyCity = (cityName: string, widget: PageElement) =>\\n    Task.where(the`#actor specifies city of ${ cityName } in ${ widget }`,\\n        Click.on(widget),\\n        Enter.theValue(cityName).into(widget),\\n        Press.the(Key.ArrowDown, Key.Enter).into(widget),\\n    )\\n```"},{"kind":"text","text":"\\n\\nAs you work with Serenity/JS, you\'ll notice that the ideas of **functional decomposition**, so thinking of tasks as sequences of lower-level activities,\\nas well as **functional composition**, so implementing reusable activities and composing them into higher-level tasks,\\nare at the heart of the Screenplay Pattern. You\'ll also notice that the entire Serenity/JS framework does it best to help your team follow this approach.\\n\\n:::info The power of the Serenity/JS task-based code reuse model\\nWhat makes the Serenity/JS task-based code reuse model so **powerful at scale** is the observation that:\\n- for most software systems, a vast number of **diverse test scenarios** can be composed of a relatively **small number of high-level activities**\\n- all **high-level activities** can be composed of a relatively **small number of lower-level activities**\\n- in a reasonably consistently-designed software system, most lower-level activities tend to be similar and rather consistent across the various aspects of a given interface.\\nIn particular, **there are only so many ways** one can interact with a UI button or send an HTTP request to a web service.\\n\\nWhat this means in practice is that by investing your time in properly designing **relatively few reusable tasks**\\nto test your system, you give your team a **significant productivity boost** and **leverage** when producing high-level test scenarios.\\n\\nOn top of that, this design approach results not only in **simpler test scenarios** that reduce\\nthe [cognitive load](https://en.wikipedia.org/wiki/Cognitive_load) on the reader as they require them to process\\nthe scenario only one level of abstraction at the time.\\nIt also allows for the test to **take shortcuts** in well-defined points of the workflow - use a REST API request to create\\na test user account instead of going through the registration form.\\n:::"}]},"children":[{"id":1539,"name":"where","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":186,"character":11}],"signatures":[{"id":1540,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A factory method that makes defining custom tasks more convenient."}]},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":186,"character":11}],"parameters":[{"id":1541,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A description to be used when reporting this task"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1542,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of lower-level activities that constitute this task"}]},"type":{"type":"array","elementType":{"type":"reference","target":567,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1538,"name":"Task","package":"@serenity-js/core"}}]},{"id":1546,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"signatures":[{"id":1547,"name":"new Task","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":27,"character":4}],"parameters":[{"id":1548,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1549,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":1538,"name":"Task","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":573,"name":"Activity.constructor"}}],"inheritedFrom":{"type":"reference","target":572,"name":"Activity.constructor"}},{"id":1554,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":1555,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":578,"name":"Activity.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":577,"name":"Activity.instantiationLocation"}},{"id":1550,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":202,"character":13}],"signatures":[{"id":1551,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":202,"character":13}],"parameters":[{"id":1552,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)"}]},"type":{"type":"reference","target":562,"name":"PerformsActivities","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":580,"name":"Activity.performAs"}}],"overwrites":{"type":"reference","target":579,"name":"Activity.performAs"}},{"id":1556,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1557,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1558,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1559,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1560,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1560]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":583,"name":"Activity.describedBy"}}],"inheritedFrom":{"type":"reference","target":582,"name":"Activity.describedBy"}},{"id":1566,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1567,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":593,"name":"Activity.toString"}}],"inheritedFrom":{"type":"reference","target":592,"name":"Activity.toString"}}],"groups":[{"title":"Constructors","children":[1546]},{"title":"Methods","children":[1539,1554,1550,1556,1566]}],"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":175,"character":22}],"extendedTypes":[{"type":"reference","target":567,"name":"Activity","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":1016,"name":"Check"}],"permalink":"/api/core/class/Task","previousId":893,"nextId":484},{"id":1837,"name":"WithAnswerableProperties","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes a plain JavaScript object with ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) properties.\\nTypically, used in conjunction with ["},{"kind":"code","text":"`RecursivelyAnswered`"},{"kind":"text","text":"](/api/core/#RecursivelyAnswered) and ["},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"](/api/core/class/Question/#fromObject).\\n\\n"},{"kind":"code","text":"```ts\\nimport {\\n  actorCalled, notes, q, Question, QuestionAdapter, WithAnswerableProperties\\n} from \'@serenity-js/core\';\\n\\ninterface RequestConfiguration {\\n  headers: Record<string, string>;\\n}\\n\\nconst requestConfiguration: WithAnswerableProperties<RequestConfiguration> = {\\n  headers: {\\n    Authorization: q`Bearer ${ notes().get(\'authDetails\').token }`\\n  }\\n}\\n\\nconst question: QuestionAdapter<RequestConfiguration> =\\n    Question.fromObject<RequestConfiguration>(requestConfiguration)\\n\\nconst answer: RequestConfiguration = await actorCalled(\'Annie\').answer(question);\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/WithAnswerableProperties.ts","line":31,"character":12}],"typeParameters":[{"id":1838,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"conditional","checkType":{"type":"reference","target":1838,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"trueType":{"type":"reference","target":1838,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1838,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"union","types":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":893,"typeArguments":[{"type":"inferred","name":"A"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]},"trueType":{"type":"reference","target":648,"typeArguments":[{"type":"reference","name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"},"falseType":{"type":"conditional","checkType":{"type":"reference","target":1838,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true},"extendsType":{"type":"intrinsic","name":"object"},"trueType":{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","target":1838,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}},"templateType":{"type":"reference","target":1837,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"K","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":1838,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"WithAnswerableProperties","package":"@serenity-js/core"}},"falseType":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":1838,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}}},"permalink":"/api/core#WithAnswerableProperties","previousId":1536,"nextId":1008},{"id":484,"name":"Ability","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Abilities** enable [actors](/api/core/class/Actor/)\\nto perform [interactions](/api/core/class/Interaction/) with the system under test\\nand answer [questions](/api/core/class/Question/) about its state.\\n\\nFrom the technical perspective, **abilities** act as **wrappers** around any **integration libraries** required\\nto communicate with the external interfaces of system under test,\\nsuch as [web browser drivers](/api/web/class/BrowseTheWeb/) or an [HTTP client](/api/rest/class/CallAnApi/).\\nThey also enable [portability](/handbook/design/portable-test-code)\\nof your test code across such integration libraries.\\n\\nAbilities are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with [actors](/api/core/class/Actor/), [interactions](/api/core/class/Interaction/),\\n[questions](/api/core/class/Question/), and [tasks](/api/core/class/Task/).\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- [Actors](/api/core/class/Actor/)\\n- [Configuring actors using Casts](/api/core/class/Cast/)\\n- [Interactions](/api/core/class/Interaction/)\\n- [Questions](/api/core/class/Question/)\\n- [Web testing](/handbook/web-testing/)\\n- [API testing](/handbook/api-testing/)\\n- [Mobile testing](/handbook/mobile-testing/)\\n\\n## Giving actors the abilities to interact\\n\\nSerenity/JS actors are capable of interacting with **any interface** of the system under test,\\nbe it a [web UI](/handbook/web-testing/), a [mobile app](/handbook/mobile-testing/), a [web service](/handbook/api-testing/),\\nor [anything else](/api/core/class/Ability/) that a Node.js program can talk to.\\nThis flexibility is enabled by a mechanism called _**abilities**_\\nand achieved without introducing any unnecessary dependencies to your code base thanks to the [modular architecture](/handbook/getting-started/architecture) of Serenity/JS.\\n\\n:::tip Remember\\n**Actors** have **abilities** that enable them to **perform interactions** and **answer questions**.\\n:::\\n\\nFrom the technical perspective, an **ability** is an [adapter](https://en.wikipedia.org/wiki/Adapter_pattern)\\naround an interface-specific integration library, such as a web browser driver, an HTTP client, a database client, and so on.\\nYou give an actor an ability, and it\'s the ability\'s responsibility to provide a consistent API around the integration library and deal with any of its quirks.\\nAbilities **encapsulate integration libraries** and handle their [configuration and initialisation](/api/core/interface/Initialisable/),\\nthe process of [freeing up any resources](/api/core/interface/Discardable/) they hold,\\nas well as managing any state associated with the library.\\n\\n### Portable interactions with web interfaces\\n\\nTo make your Serenity/JS actors interact with web interfaces,\\nyou call the ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor#whoCan) method and give them an implementation of the ability to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb),\\nspecific to your web integration tool of choice.\\n\\nNote how ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/), ["},{"kind":"code","text":"`BrowseTheWebWithWebdriverIO`"},{"kind":"text","text":"](/api/webdriverio/class/BrowseTheWebWithWebdriverIO/), and ["},{"kind":"code","text":"`BrowseTheWebWithProtractor`"},{"kind":"text","text":"](/api/protractor/class/BrowseTheWebWithProtractor/)\\nall **extend** the base ability to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/).\\n\\n#### Playwright\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'   // Serenity/JS integration module\\nimport { chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })              // integration library\\n\\nawait actorCalled(\'Trevor\')                                            // generic actor\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))                   // tool-specific ability\\n```"},{"kind":"text","text":"\\n\\n#### WebdriverIO\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio\' // Serenity/JS integration module\\n\\nawait actorCalled(\'Trevor\')                                            // generic actor\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))                  // tool-specific ability\\n```"},{"kind":"text","text":"\\n\\n#### Protractor\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor } from \'@serenity-js/protractor\'   // Serenity/JS integration module\\nimport { protractor } from \'protractor\'                                // integration library\\n\\nawait actorCalled(\'Trevor\')                                            // generic actor\\n  .whoCan(BrowseTheWebWithProtractor.using(protractor.browser))        // tool-specific ability\\n```"},{"kind":"text","text":"\\n\\n### Retrieving an ability\\n\\nUse ["},{"kind":"code","text":"`PerformActivities`"},{"kind":"text","text":"](/api/core/class/PerformActivities/)} to retrieve an ability in a custom ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) or ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) implementation.\\n\\nHere, "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" can be the integration library-specific class, for example ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/),\\nor its library-agnostic parent class, like ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/).\\n\\nTo make your code portable across the various integration libraries, retrieve the ability\\nusing the library-agnostic parent class:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWeb } from \'@serenity-js/web\' // Serenity/JS web module\\n\\nconst actor    = actorCalled(\'Trevor\')\\nconst ability  = await BrowseTheWeb.as(actor)   // retrieve implementation of BrowseTheWeb\\n```"},{"kind":"text","text":"\\n\\nAs you can already see, providing **encapsulation** and a **cleaner API** around the integration libraries are not the only reasons why you\'d want to use the abilities.\\n\\nAnother reason is that the Serenity/JS implementation of the Screenplay Pattern lets you **completely decouple the actor from the integration libraries**\\nand make the abilities of the same type **interchangeable**.\\nFor example, [Serenity/JS web modules](/handbook/web-testing/serenity-js-web-modules) offer an abstraction that lets you switch between web integration libraries\\nas vastly different as Selenium, WebdriverIO, or Playwright without having to change _anything whatsoever_ in your test scenarios.\\n\\nWhat this means is that your test code can become [portable and reusable across projects and teams](/handbook/design/portable-test-code),\\neven if they don\'t use the same low-level integration tools. It also helps you to **avoid vendor lock-in**, as you can wrap any third-party integration library\\ninto an ability and swap it out for another implementation if you need to.\\n\\nHowever, Serenity/JS **doesn\'t prevent you** from using the integration libraries directly.\\nWhen you need to, you can use a library-specific ability like ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\nto trade portability for access to library-specific low-level methods:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright, PlaywrightPage } from \'@serenity-js/playwright\'\\n\\nconst actor          = actorCalled(\'Trevor\')\\nconst ability        = await BrowseTheWebWithPlaywright.as(actor)\\nconst page           = (await ability.currentPage()) as PlaywrightPage;\\nconst playwrightPage = await page.nativePage();\\n// use any Playwright-specific APIs on playwrightPage\\n```"},{"kind":"text","text":"\\n\\n:::warning Using integration library-specific APIs reduces portability\\nWhile Serenity/JS provides you with escape hatches and ways to access the low-level APIs of your integration libraries,\\ndoing so can reduce the portability of your code. Only do it when you have a good reason to trade portability for low-level access.\\n:::\\n\\n\\n## Associating actors with data\\n\\nOne more reason to use abilities is that abilities can also help you to **associate actors with data** they need to perform their activities.\\nFor example, a commonly used ability is one to ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes), which allows your actors to start the test scenario\\nequipped with some data set, or record information about what they see in the test scenario so that they can act upon it later:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Notepad, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  firstName: string;\\n  lastName: string;\\n  emailAddress: string;\\n}\\n\\nawait actorCalled(\'Trevor\')\\n  .whoCan(\\n    TakeNotes.using(Notepad.with<MyNotes>({\\n      firstName: \'Trevor\',\\n      lastName: \'Traveller\',\\n      emailAddress: \'Trevor.Traveller@example.org\',\\n    }))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Actors with multiple abilities\\n\\nOf course, an actor can have **any number of abilities** they need to play their role.\\nFor example, it is quite common for an actor to be able to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb), ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes), and ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Notepad, TakeNotes } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\nimport { chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\nconst baseURL = \'https://example.org\'\\n\\ninterface MyNotes {\\n  firstName: string;\\n  lastName: string;\\n  emailAddress: string;\\n}\\n\\nawait actorCalled(\'Trevor\')\\n  .whoCan(\\n    BrowseTheWebWithPlaywright.using(browser, { baseURL }),\\n    CallAnApi.at(`${ baseURL }/api`),\\n    TakeNotes.using(Notepad.with<MyNotes>({\\n      firstName: \'Trevor\',\\n      lastName: \'Traveller\',\\n      emailAddress: \'Trevor.Traveller@example.org\',\\n    }))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Writing custom abilities\\n\\nIf your system under test provides a type of interface that Serenity/JS doesn\'t support yet,\\nyou might want to implement a custom ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/), as well as [interactions](/api/core/class/Interaction/)\\nand [questions](/api/core/class/Question/) to interact with it.\\n\\nThe best way to start with that is for you to review the examples in the [Screenplay Pattern API docs](/api/core/class/Ability/),\\nas well as the [Serenity/JS code base on GitHub](https://github.com/serenity-js/serenity-js/tree/main/packages).\\nAlso note that all the [Serenity/JS modules](/handbook/getting-started/architecture)\\nhave their automated tests written in such a way to not only provide an **extremely high test coverage** for the framework itself,\\nbut to be **accessible** and act as a **reference implementation for you** to create your own integrations.\\n\\nIf you believe that the custom integration you\'ve developed could benefit the wider Serenity/JS community,\\nplease consider open-sourcing it yourself, or [contributing it](/community/contributing/) to the main framework.\\n\\n[![Join Serenity/JS Community Chat](https://img.shields.io/badge/Chat-Serenity%2FJS%20Community-FBD30B?logo=matrix)](https://matrix.to/#/#serenity-js:gitter.im)\\n\\n### Defining a custom ability to "},{"kind":"code","text":"`MakePhoneCalls`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability, actorCalled, Interaction } from \'@serenity-js/core\'\\n\\nclass MakePhoneCalls extends Ability {\\n\\n  // A static method is typically used to inject a client of a given interface\\n  // and instantiate the ability, for example:\\n  //   actorCalled(\'Phil\').whoCan(MakePhoneCalls.using(phone))\\n  static using(phone: Phone) {\\n    return new MakePhoneCalls(phone);\\n  }\\n\\n  // Abilities can hold state, for example: the client of a given interface,\\n  // additional configuration, or the result of the last interaction with a given interface.\\n  protected constructor(private readonly phone: Phone) {\\n  }\\n\\n  // Abilities expose methods that enable Interactions to call the system under test,\\n  // and Questions to retrieve information about its state.\\n  dial(phoneNumber: string): Promise<void> {\\n    // ...\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n### Defining a custom interaction using the custom ability\\n\\n"},{"kind":"code","text":"```ts\\nimport { Answerable, Interaction, the } from \'@serenity-js/core\'\\n\\n// A custom interaction using the actor\'s ability:\\nconst Call = (phoneNumber: Answerable<string>) =>\\n  Interaction.where(the`#actor calls ${ phoneNumber }`, async actor => {\\n    await MakePhoneCalls.as(actor).dial(phoneNumber)\\n  })\\n```"},{"kind":"text","text":"\\n\\n### Using the custom ability and interaction in a test scenario\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Connie\')\\n  .whoCan(MakePhoneCalls.using(phone))\\n  .attemptsTo(\\n    Call(phoneNumber)\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using auto-initialisable and auto-discardable abilities\\n\\nAbilities that rely on resources that need to be initialised before they can be used,\\nor discarded before the actor is dismissed can implement\\nthe ["},{"kind":"code","text":"`Initialisable`"},{"kind":"text","text":"](/api/core/interface/Initialisable/)\\nor ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/) interfaces, respectively.\\n\\n### Defining a custom ability to "},{"kind":"code","text":"`QueryPostgresDB`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport {\\n  Ability, actorCalled, Discardable, Initialisable, Question, UsesAbilities,\\n} from \'@serenity-js/core\'\\n\\n// Some low-level interface-specific client we want the Actor to use,\\n// for example a PostgreSQL database client:\\nconst { Client } = require(\'pg\');\\n\\n// A custom Ability to give an Actor access to the low-level client:\\nclass QueryPostgresDB\\n  extends Ability\\n  implements Initialisable, Discardable\\n{\\n  constructor(private readonly client) {\\n  }\\n\\n  // Invoked by Serenity/JS upon the first invocation of `actor.attemptsTo`\\n  initialise(): Promise<void> | void {\\n    return this.client.connect();\\n  }\\n\\n  // Used to ensure that the Ability is not initialised more than once\\n  isInitialised(): boolean {\\n    return this.client._connected;\\n  }\\n\\n  // Discards any resources the Ability uses when the Actor is dismissed,\\n  // so when the Stage receives a SceneFinishes event for scenario-scoped actor,\\n  // or TestRunFinishes for cross-scenario-scoped actors\\n  discard(): Promise<void> | void {\\n    return this.client.end();\\n  }\\n\\n  // Any custom integration APIs the Ability, should make available to the Actor.\\n  // Here, we want the ability to enable the actor to query the database.\\n  query(query: string) {\\n    return this.client.query(query);\\n  }\\n\\n  // ... other custom integration APIs\\n}\\n```"},{"kind":"text","text":"\\n\\n### Defining a custom question using the custom ability\\n\\n"},{"kind":"code","text":"```ts\\n// A custom Question to allow the Actor query the database\\nconst CurrentDBUser = () =>\\n  Question.about(\'current db user\', actor =>\\n    QueryPostgresDB.as(actor)\\n      .query(\'SELECT current_user\')\\n      .then(result => result.rows[0].current_user)\\n  );\\n```"},{"kind":"text","text":"\\n\\n### Using the custom ability and question in a test scenario\\n\\n"},{"kind":"code","text":"```ts\\n// Example test scenario where the Actor uses the Ability to QueryPostgresDB\\n// to assert on the username the connection has been established with\\n\\nimport { describe, it } from \'mocha\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ndescribe(\'Serenity/JS\', () => {\\n  it(\'can initialise and discard abilities automatically\', () =>\\n    actorCalled(\'Debbie\')\\n      .whoCan(new QueryPostgresDB(new Client()))\\n      .attemptsTo(\\n        Ensure.that(CurrentDBUser(), equals(\'jan\'))\\n      ))\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`AbilityType`"},{"kind":"text","text":"](/api/core/#AbilityType)\\n- ["},{"kind":"code","text":"`Initialisable`"},{"kind":"text","text":"](/api/core/interface/Initialisable/)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\n- ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/)"}]},"children":[{"id":485,"name":"as","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":401,"character":11}],"signatures":[{"id":486,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to access an [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) of the given type\\nfrom within the ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) and ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) classes.\\n\\n#### Retrieving an ability in an interaction definition\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Interaction } from \'@serenity-js/core\'\\nimport { BrowseTheWeb, Page } from \'@serenity-js/web\'\\n\\nexport const ClearLocalStorage = () =>\\n  Interaction.where(`#actor clears local storage`, async (actor: Actor) => {\\n    const browseTheWeb: BrowseTheWeb = BrowseTheWeb.as(actor)    // retrieve an ability\\n    const page: Page = await browseTheWeb.currentPage()\\n    await page.executeScript(() => window.localStorage.clear())\\n  })\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving an ability in a question definition\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Question } from \'@serenity-js/core\'\\nimport { BrowseTheWeb, Page } from \'@serenity-js/web\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\nconst LocalStorage = {\\n  numberOfItems: () =>\\n    Question.about<number>(`number of items in local storage`, async (actor: Actor) => {\\n      const browseTheWeb: BrowseTheWeb = BrowseTheWeb.as(actor)    // retrieve an ability\\n      const page: Page = await browseTheWeb.currentPage()\\n      return page.executeScript(() => window.localStorage.length)\\n    })\\n}\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":401,"character":11}],"typeParameter":[{"id":487,"name":"A","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}}],"parameters":[{"id":488,"name":"this","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":492,"typeArguments":[{"type":"reference","target":487,"name":"A","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AbilityType","package":"@serenity-js/core"}},{"id":489,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}}],"type":{"type":"reference","target":487,"name":"A","package":"@serenity-js/core","refersToTypeParameter":true}}]},{"id":490,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":491,"name":"new Ability","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[490]},{"title":"Methods","children":[485]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":362,"character":22}],"extendedBy":[{"type":"reference","target":454,"name":"RaiseErrors"},{"type":"reference","target":497,"name":"AnswerQuestions"},{"type":"reference","target":528,"name":"PerformActivities"},{"type":"reference","target":871,"name":"TakeNotes"},{"type":"reference","target":1568,"name":"ScheduleWork"}],"permalink":"/api/core/class/Ability","previousId":1538,"nextId":1839},{"id":492,"name":"AbilityType","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface describing the static access method that every ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) class\\nneeds to provide in order to be accessible from within the [interactions](/api/core/class/Interaction/).\\n\\n#### Retrieving an ability from an interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability, Answerable, actorCalled, Interaction, the } from \'@serenity-js/core\';\\n\\nclass MakePhoneCalls extends Ability {\\n  static using(phone: Phone) {\\n    return new MakePhoneCalls(phone);\\n  }\\n\\n  protected constructor(private readonly phone: Phone) {\\n  }\\n\\n  // some method that allows us to interact with the external interface of the system under test\\n  dial(phoneNumber: string): Promise<void> {\\n    // ...\\n  }\\n}\\n\\nconst Call = (phoneNumber: Answerable<string>) =>\\n  Interaction.where(the`#actor calls ${ phoneNumber }`, async actor => {\\n    await MakePhoneCalls.as(actor).dial(phoneNumber)\\n  });\\n\\nawait actorCalled(\'Connie\')\\n  .whoCan(MakePhoneCalls.using(phone))\\n  .attemptsTo(\\n    Call(phoneNumber),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":45,"character":12}],"typeParameters":[{"id":496,"name":"A","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":493,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":46,"character":5}],"signatures":[{"id":494,"name":"__type","variant":"signature","kind":16384,"flags":{"isExternal":true,"isAbstract":true},"parameters":[{"id":495,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":496,"name":"A","package":"@serenity-js/core","refersToTypeParameter":true}}]}},"permalink":"/api/core#AbilityType","nextId":497},{"id":497,"name":"AnswerQuestions","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to resolve the value of a given ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable).\\n\\n"},{"kind":"code","text":"`AnswerQuestions`"},{"kind":"text","text":" is used internally by ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer), and it is unlikely you\'ll ever need to use it directly in your code.\\nThat is, unless you\'re building a custom Serenity/JS extension and want to override the default behaviour of the framework,\\nin which case you should check out the [Contributor\'s Guide](/community/contributing/)."}]},"children":[{"id":507,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":18,"character":4}],"signatures":[{"id":508,"name":"new AnswerQuestions","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":18,"character":4}],"parameters":[{"id":509,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":497,"name":"AnswerQuestions","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":491,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":490,"name":"Ability.constructor"}},{"id":511,"name":"answer","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":22,"character":4}],"signatures":[{"id":512,"name":"answer","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":22,"character":4}],"typeParameter":[{"id":513,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":514,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":513,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":513,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[507]},{"title":"Methods","children":[511]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/AnswerQuestions","previousId":492,"nextId":520},{"id":515,"name":"CanHaveAbilities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can have an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to perform some ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":516,"name":"whoCan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/CanHaveAbilities.ts","line":19,"character":4}],"signatures":[{"id":517,"name":"whoCan","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) or several abilities to the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/CanHaveAbilities.ts","line":19,"character":4}],"parameters":[{"id":518,"name":"abilities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":519,"name":"Returned_Type","package":"@serenity-js/core","qualifiedName":"CanHaveAbilities.Returned_Type","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[516]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/CanHaveAbilities.ts","line":14,"character":17}],"typeParameters":[{"id":519,"name":"Returned_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}}],"implementedBy":[{"type":"reference","target":594,"name":"Actor"}],"permalink":"/api/core/interface/CanHaveAbilities","previousId":481,"nextId":557},{"id":520,"name":"Discardable","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface to be implemented by any ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that needs to free up\\nthe resources it uses, e.g. disconnect from a database.\\n\\nThis ["},{"kind":"code","text":"`Discardable.discard`"},{"kind":"text","text":"](/api/core/interface/Discardable/#discard) method is invoked directly by the [actor](/api/core/class/Actor/), and indirectly by the [stage](/api/core/class/Stage/):\\n- when [SceneFinishes](/api/core-events/class/SceneFinishes/), for actors instantiated after [SceneStarts](/api/core-events/class/SceneStarts/) - e.g. within a test scenario or in a \\"before each\\" hook\\n- when ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/), for actors instantiated before [SceneStarts](/api/core-events/class/SceneStarts/) - e.g. in a \\"before all\\" hook\\n\\nNote that events such as [SceneFinishes](/api/core-events/class/SceneFinishes/) and ["},{"kind":"code","text":"`TestRunFinishes`"},{"kind":"text","text":"](/api/core-events/class/TestRunFinishes/) are emitted by Serenity/JS test runner adapters,\\nsuch as "},{"kind":"code","text":"`@serenity-js/cucumber`"},{"kind":"text","text":", "},{"kind":"code","text":"`@serenity-js/mocha`"},{"kind":"text","text":", "},{"kind":"code","text":"`@serenity-js/jasmine`"},{"kind":"text","text":", and so on.\\nConsult their respective readmes to learn how to register them with your test runner of choice.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`AbilityType`"},{"kind":"text","text":"](/api/core/#AbilityType)\\n- ["},{"kind":"code","text":"`Initialisable`"},{"kind":"text","text":"](/api/core/interface/Initialisable/)"}]},"children":[{"id":521,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Discardable.ts","line":25,"character":4}],"signatures":[{"id":522,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Discards the resources associated with this ability."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Discardable.ts","line":25,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}],"groups":[{"title":"Methods","children":[521]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/Discardable.ts","line":20,"character":17}],"implementedBy":[{"type":"reference","target":1568,"name":"ScheduleWork"}],"permalink":"/api/core/interface/Discardable","previousId":497,"nextId":523},{"id":523,"name":"Initialisable","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface to be implemented by any ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that needs to initialise\\nthe resources it uses, e.g. establish a database connection.\\n\\nThe ["},{"kind":"code","text":"`Initialisable.initialise`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#initialise) method is invoked whenever ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo) method is called,\\nbut **only when** ["},{"kind":"code","text":"`Initialisable.isInitialised`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#isInitialised) returns false. This is to avoid initialising abilities more than once.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`AbilityType`"},{"kind":"text","text":"](/api/core/#AbilityType)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)"}]},"children":[{"id":524,"name":"initialise","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":24,"character":4}],"signatures":[{"id":525,"name":"initialise","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Initialises the ability. Invoked whenever ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo) method is called,\\nbut **only when** ["},{"kind":"code","text":"`Initialisable.isInitialised`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#isInitialised) returns false.\\n\\nMake sure to implement ["},{"kind":"code","text":"`Initialisable.isInitialised`"},{"kind":"text","text":"](/api/core/interface/Initialisable/#isInitialised) so that it returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen the ability has been successfully initialised."}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":24,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]},{"id":526,"name":"isInitialised","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":33,"character":4}],"signatures":[{"id":527,"name":"isInitialised","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Should return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when all the resources that the given ability needs\\nhave been initialised. Should return "},{"kind":"code","text":"`false`"},{"kind":"text","text":" if the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) should\\ninitialise them again when ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo) is called."}],"blockTags":[{"tag":"@returns","content":[]}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Methods","children":[524,526]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":15,"character":17}],"permalink":"/api/core/interface/Initialisable","previousId":520,"nextId":528},{"id":528,"name":"PerformActivities","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform a given ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n["},{"kind":"code","text":"`PerformActivities`"},{"kind":"text","text":"](/api/core/class/PerformActivities/) is used internally by ["},{"kind":"code","text":"`Actor.attemptsTo`"},{"kind":"text","text":"](/api/core/class/Actor/#attemptsTo), and it is unlikely you\'ll ever need to use it directly in your code.\\nThat is, unless you\'re building a custom Serenity/JS extension and want to override the default behaviour of the framework,\\nin which case you should check out the [Contributor\'s Guide](/community/contributing)."}]},"children":[{"id":534,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":34,"character":4}],"signatures":[{"id":535,"name":"new PerformActivities","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":34,"character":4}],"parameters":[{"id":536,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":562,"name":"PerformsActivities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":537,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":538,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":35,"character":92}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[538]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":35,"character":90}]}}]}},{"id":539,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2418,"name":"EmitsDomainEvents","package":"@serenity-js/core"}}],"type":{"type":"reference","target":528,"name":"PerformActivities","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":491,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":490,"name":"Ability.constructor"}},{"id":544,"name":"perform","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":41,"character":10}],"signatures":[{"id":545,"name":"perform","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":41,"character":10}],"parameters":[{"id":546,"name":"activity","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":567,"name":"Activity","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[534]},{"title":"Methods","children":[544]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":33,"character":13}],"extendedTypes":[{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/PerformActivities","previousId":523,"nextId":657},{"id":557,"name":"UsesAbilities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can use their [abilities](/api/core/class/Ability/) to perform an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\nor answer a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/).\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":558,"name":"abilityTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/UsesAbilities.ts","line":23,"character":4}],"signatures":[{"id":559,"name":"abilityTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Provides access to the [actor\'s](/api/core/class/Actor/) ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to do something"}]},"sources":[{"fileName":"packages/core/src/screenplay/abilities/UsesAbilities.ts","line":23,"character":4}],"typeParameter":[{"id":560,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}}],"parameters":[{"id":561,"name":"doSomething","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The type of ability to look up, e.g. ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) or ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)"}]},"type":{"type":"reference","target":492,"typeArguments":[{"type":"reference","target":560,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AbilityType","package":"@serenity-js/core"}}],"type":{"type":"reference","target":560,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[558]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/UsesAbilities.ts","line":15,"character":17}],"implementedBy":[{"type":"reference","target":594,"name":"Actor"}],"permalink":"/api/core/interface/UsesAbilities","previousId":515,"nextId":562},{"id":562,"name":"PerformsActivities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can perform a sequence of [activities](/api/core/class/Activity/),\\nsuch as [tasks](/api/core/class/Task/) or [interactions](/api/core/class/Interaction/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)\\n- ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\n- ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":563,"name":"attemptsTo","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) attempt to perform a sequence of [activities](/api/core/class/Activity/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":20,"character":4}],"type":{"type":"reflection","declaration":{"id":564,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":20,"character":16}],"signatures":[{"id":565,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":20,"character":16}],"parameters":[{"id":566,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":567,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}}}],"groups":[{"title":"Properties","children":[563]}],"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":15,"character":17}],"implementedBy":[{"type":"reference","target":594,"name":"Actor"}],"permalink":"/api/core/interface/PerformsActivities","previousId":557,"nextId":652},{"id":652,"name":"CollectsArtifacts","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can collect artifacts, such as photos or "},{"kind":"code","text":"`JSON`"},{"kind":"text","text":" data.,\\nwhile the scenario is being executed\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":653,"name":"collect","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/artifacts/CollectsArtifacts.ts","line":77,"character":4}],"signatures":[{"id":654,"name":"collect","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) collect an artifact so that it can be included in the test report.\\n\\n#### Implementing a custom interaction to attach artifacts\\n\\n"},{"kind":"code","text":"```ts\\nimport * as fs from \'node:fs\'\\nimport { Answerable, Interaction, the } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\nimport { Name, TextData } from \'@serenity-js/core/lib/model\'\\n\\nexport class Attach {\\n\\n  static contentsOf = (pathToFile: Path): Interaction =>\\n    Interaction.where(`#actor attaches contents of ${ pathToFile.basename() }`, async actor => {\\n      const data = fs.readFileSync(pathToFile.value).toString(\'utf-8\');\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        new Name(pathToFile.basename()),\\n      )\\n    })\\n\\n  static textData = (contents: Answerable<string>, name?: string): Interaction =>\\n    Interaction.where(the`#actor attaches text data`, async actor => {\\n      const data = await actor.answer(contents);\\n\\n      actor.collect(\\n        TextData.fromJSON({ contentType: \'text/plain\', data }),\\n        name && new Name(name),\\n      )\\n    })\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Attaching plain text\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Path } from \'@serenity-js/core/lib/io\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.textData(\'some text\', \'some name\'),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Attaching contents of a text file\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\').attemptsTo(\\n  Attach.contentsOf(Path.from(__dirname, \'output/server.log\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/artifacts/CollectsArtifacts.ts","line":77,"character":4}],"parameters":[{"id":655,"name":"artifact","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The artifact to be collected, such as "},{"kind":"code","text":"`JSON`"},{"kind":"text","text":" data."}]},"type":{"type":"reference","name":"Artifact","package":"@serenity-js/core"}},{"id":656,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The name of the artifact to make it easy to recognise in the test report"}]},"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[653]}],"sources":[{"fileName":"packages/core/src/screenplay/artifacts/CollectsArtifacts.ts","line":12,"character":17}],"implementedBy":[{"type":"reference","target":594,"name":"Actor"}],"permalink":"/api/core/interface/CollectsArtifacts","previousId":562,"nextId":1003},{"id":657,"name":"Debug","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to evaluate and [log](/api/core/class/Log/) the provided [answerable](/api/core/#Answerable) values.\\n\\nSince this interaction **accepts a callback function** that receives the evaluated results,\\nthe best way to use it is while **running the test scenario via a Node.js debugger**.\\nSee the links below to learn how to do it in popular IDEs.\\n\\n## Debugging Answerable values\\n\\n["},{"kind":"code","text":"`Debug.values`"},{"kind":"text","text":"](/api/core/class/Debug/#values) accepts a callback function that receives an array of ["},{"kind":"code","text":"`DebuggingResult`"},{"kind":"text","text":"](/api/core/interface/DebuggingResult/) objects,\\nas well as the result of evaluating each provided [answerable](/api/core/#Answerable) with ["},{"kind":"code","text":"`Actor.answer`"},{"kind":"text","text":"](/api/core/class/Actor/#answer).\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Debug } from \'@serenity-js/core\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\n// Running the below through the Node.js debugger makes the actor resolve the provided values\\n// and return them to the debugger function, where you can investigate their contents,\\n// or inspect any Errors the evaluation has resulted with.\\nawait actorCalled(\'Debbie\').attemptsTo(\\n    Navigate.to(\'http://example.org\'),\\n    Debug.values((results, title, url) => {\\n        // set a breakpoint here to view `results`, `title` and `url` in your IDE debugger\\n    }, Page.current().title(), Page.current().url()), // accepts multiple values\\n);\\n```"},{"kind":"text","text":"\\n\\n## Accessing Playwright Page\\n\\n[Playwright Test for VSCode](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright)\\nprovides features that allow for [experimenting with web UI locators](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright#tune-locators)\\nwhile the test is paused at breakpoint.\\n\\nSince this functionality is specific to [Playwright](/api/playwright),\\nyou can use it by passing ["},{"kind":"code","text":"`PlaywrightPage.current().nativePage()`"},{"kind":"text","text":"](/api/playwright/class/PlaywrightPage/#current)\\nto Serenity/JS ["},{"kind":"code","text":"`Debug.values`"},{"kind":"text","text":"](/api/core/class/Debug/#values). Also make sure to name the evaluated value "},{"kind":"code","text":"`page`"},{"kind":"text","text":", as this is the variable name that the Playwright VSCode extension expects.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Debug } from \'@serenity-js/core\'\\nimport { PlaywrightPage } from \'@serenity-js/playwright\'\\n\\n// Running the below through the Node.js debugger makes the actor resolve the provided values\\n// and return them to the debugger function, where you can investigate their contents,\\n// or inspect any Errors the evaluation has resulted with.\\nawait actorCalled(\'Debbie\').attemptsTo(\\n    Navigate.to(\'http://example.org\'),\\n    Debug.values((results, page) => {\\n        // set a breakpoint here to use Playwright locator debugging features\\n        page.locator(\'.example-css-class\')\\n        // note that you can change this selector while having the test paused at breakpoint\\n    }, PlaywrightPage.current().nativePage()),\\n);\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Node.js debugging - Getting started](https://nodejs.org/en/docs/guides/debugging-getting-started/)\\n- [Node.js debugging in VS Code](https://code.visualstudio.com/docs/nodejs/nodejs-debugging)\\n- [Running and debugging Node.js in WebStorm](https://www.jetbrains.com/help/webstorm/running-and-debugging-node-js.html)\\n- [Playwright Test for VSCode](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright)"}]},"children":[{"id":658,"name":"values","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":11}],"signatures":[{"id":659,"name":"values","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to evaluate the provided "},{"kind":"code","text":"`values`"},{"kind":"text","text":",\\nlog the results, and then pass them to your "},{"kind":"code","text":"`debuggerFunction`"},{"kind":"text","text":".\\n\\nTo use this interaction, run your test scenario in the Node.js debugger\\nand set a breakpoint inside the "},{"kind":"code","text":"`debuggerFunction`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":11}],"typeParameter":[{"id":660,"name":"Values","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"parameters":[{"id":661,"name":"debuggerFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":662,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":79}],"signatures":[{"id":663,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":87,"character":79}],"parameters":[{"id":664,"name":"results","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"mapped","parameter":"Index","parameterType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]},"templateType":{"type":"reference","target":712,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","typeArguments":[{"type":"reference","name":"Index","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Index","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":660,"name":"Values","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"DebuggingResult","package":"@serenity-js/core"}}},{"id":665,"name":"answers","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"mapped","parameter":"Index","parameterType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]},"templateType":{"type":"reference","target":650,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","typeArguments":[{"type":"reference","name":"Index","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Index","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":660,"name":"Values","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Answered","package":"@serenity-js/core"}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":666,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":660,"name":"Values","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":697,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":698,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":773,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":772,"name":"Interaction.instantiationLocation"}},{"id":693,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":122,"character":10}],"signatures":[{"id":694,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":122,"character":10}],"parameters":[{"id":695,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":652,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":769,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":768,"name":"Interaction.performAs"}},{"id":699,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":700,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":701,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":702,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":703,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[703]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":775,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":774,"name":"Interaction.describedBy"}},{"id":709,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":710,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":785,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":784,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[658,697,693,699,709]}],"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":75,"character":13}],"typeParameters":[{"id":711,"name":"Values","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Answerable","package":"@serenity-js/core"}}}],"extendedTypes":[{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/core/class/Debug","previousId":528,"nextId":712},{"id":712,"name":"DebuggingResult","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An interface describing debugging data received by the callback function passed to ["},{"kind":"code","text":"`Debug.values`"},{"kind":"text","text":"](/api/core/class/Debug/#values)."}]},"children":[{"id":713,"name":"description","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":7,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":714,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":8,"character":4}],"type":{"type":"reference","target":716,"name":"T","package":"@serenity-js/core","qualifiedName":"DebuggingResult.T","refersToTypeParameter":true}},{"id":715,"name":"error","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":9,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"groups":[{"title":"Properties","children":[713,714,715]}],"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":6,"character":17}],"typeParameters":[{"id":716,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/core/interface/DebuggingResult","previousId":657,"nextId":717},{"id":717,"name":"Log","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto [collect](/api/core/interface/CollectsArtifacts/) arbitrary static values\\nand answers to [answerables](/api/core/#Answerable),\\nso that they can be sent to the [stage crew members](/api/core/interface/StageCrewMember/)\\nand printed to the terminal by the ["},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":"](/api/console-reporter/class/ConsoleReporter/)\\nor attached to the HTML report by the ["},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":"](/api/serenity-bdd/class/SerenityBDDReporter/).\\n\\n## Logging static and "},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":" values\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log } from \'@serenity-js/core\'\\nimport { Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Laura\').attemptsTo(\\n  Log.the(\'Current page\', Page.current().title(), Page.current().url()),\\n)\\n```"}]},"children":[{"id":718,"name":"the","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":42,"character":11}],"signatures":[{"id":719,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Log`"},{"kind":"text","text":"](/api/core/class/Log/)\\n\\nNote that this method accepts [variable number of arguments](https://www.typescriptlang.org/docs/handbook/functions.html#rest-parameters),\\nso that you can easily log several values at the same time."}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":42,"character":11}],"parameters":[{"id":720,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"The items to be logged"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":739,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":740,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":773,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":772,"name":"Interaction.instantiationLocation"}},{"id":735,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":59,"character":10}],"signatures":[{"id":736,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":59,"character":10}],"parameters":[{"id":737,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":652,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":769,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":768,"name":"Interaction.performAs"}},{"id":741,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":742,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":743,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":744,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":745,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[745]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":775,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":774,"name":"Interaction.describedBy"}},{"id":751,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":752,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":785,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":784,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[718,739,735,741,751]}],"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":31,"character":13}],"extendedTypes":[{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/core/class/Log","previousId":712,"nextId":1016},{"id":786,"name":"ChainableSetter","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":787,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/ChainableSetter.ts","line":8,"character":4}],"signatures":[{"id":788,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/ChainableSetter.ts","line":8,"character":4}],"typeParameter":[{"id":789,"name":"K","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":790,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":789,"name":"K","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":791,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":789,"name":"K","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":792,"name":"T","package":"@serenity-js/core","qualifiedName":"ChainableSetter.T","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":786,"typeArguments":[{"type":"reference","target":792,"name":"T","package":"@serenity-js/core","qualifiedName":"ChainableSetter.T","refersToTypeParameter":true}],"name":"ChainableSetter","package":"@serenity-js/core"},{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}]}}]}],"groups":[{"title":"Methods","children":[787]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/ChainableSetter.ts","line":7,"character":17}],"typeParameters":[{"id":792,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"implementedBy":[{"type":"reference","target":838,"name":"NotepadAdapter"}],"permalink":"/api/core/interface/ChainableSetter","previousId":1224,"nextId":793},{"id":793,"name":"Notepad","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stores notes recorded by an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/).\\n\\nSee ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) and [notes](/api/core/function/notes) for more usage examples.\\n\\n## Sharing a notepad between actors\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Cast, Notepad, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  auth: {\\n    username: string;\\n    password: string;\\n  }\\n}\\n\\nexport class Actors implements Cast {\\n\\n  // initialise a shared notepad when the Actors class is initialised\\n  private readonly sharedNotepad = Notepad.with<MyNotes>({\\n    auth: {\\n      username: \'test-user\',\\n      password: \'SuperSecretP@ssword!\',\\n    }\\n  });\\n\\n  prepare(actor: Actor): Actor {\\n    switch (actor.name) {\\n      case \'Alice\':\\n      case \'Bob\':\\n        // Alice and Bob will share their notepad\\n        return actor.whoCan(TakeNotes.using(this.sharedNotepad));\\n      default:\\n        // other actors will get their own notepads\\n        return actor.whoCan(TakeNotes.using(Notepad.empty<AuthCredentials>()));\\n    }\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/)\\n- [notes](/api/core/function/notes)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)"}]},"children":[{"id":794,"name":"empty","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":61,"character":11}],"signatures":[{"id":795,"name":"empty","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new empty Notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":61,"character":11}],"typeParameter":[{"id":796,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":793,"typeArguments":[{"type":"reference","target":796,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}]},{"id":797,"name":"with","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":100,"character":11}],"signatures":[{"id":798,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new Notepad with an initial state.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  personalDetails: {\\n    firstName: string;\\n    lastName: string;\\n  }\\n}\\n\\nactorCalled(\'Leonard\')\\n  .whoCan(\\n    TakeNotes.using(\\n      Notepad.with<MyNotes>({\\n        personalDetails: {\\n          firstName: \'Leonard\',\\n          lastName: \'McLaud\',\\n        }\\n      })\\n    )\\n  )\\n  .attemptsTo(\\n    Ensure.that(\\n      notes<MyNotes>().get(\'personalDetails\').firstName,\\n      equals(\'Leonard\')\\n    ),\\n  )\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":100,"character":11}],"typeParameter":[{"id":799,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":800,"name":"notes","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":799,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":793,"typeArguments":[{"type":"reference","target":799,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}]},{"id":801,"name":"notes","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":113,"character":11}],"signatures":[{"id":802,"name":"notes","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that simplifies access to the notes\\nstored in this notepad. Allows the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to record, read, and remove notes.\\n\\n#### Learn more\\n- [notes](/api/core/function/notes)\\n- ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/)\\n- ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":113,"character":11}],"typeParameter":[{"id":803,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":838,"typeArguments":[{"type":"reference","target":803,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"NotepadAdapter","package":"@serenity-js/core"}}]},{"id":809,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":136,"character":4}],"signatures":[{"id":810,"name":"has","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" exists in the notepad."}],"blockTags":[{"tag":"@returns","content":[{"kind":"code","text":"`true`"},{"kind":"text","text":" if the note exists, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise"}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":136,"character":4}],"typeParameter":[{"id":811,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":812,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":811,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":813,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":153,"character":4}],"signatures":[{"id":814,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a note, identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":", from the notepad."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The value of the previously recorded note."}]},{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n Throws a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/) if the note with a given "},{"kind":"code","text":"`subject`"},{"kind":"text","text":"\\n has never been recorded."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":153,"character":4}],"typeParameter":[{"id":815,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":816,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":815,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","target":815,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":837,"name":"Notes","package":"@serenity-js/core","qualifiedName":"Notepad.Notes","refersToTypeParameter":true}}}]},{"id":817,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":170,"character":4}],"signatures":[{"id":818,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stores a given "},{"kind":"code","text":"`value`"},{"kind":"text","text":" uniquely identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" in the notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":170,"character":4}],"typeParameter":[{"id":819,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":820,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":819,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":821,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to record."}]},"type":{"type":"indexedAccess","indexType":{"type":"reference","target":819,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":837,"name":"Notes","package":"@serenity-js/core","qualifiedName":"Notepad.Notes","refersToTypeParameter":true}}}],"type":{"type":"reference","target":793,"typeArguments":[{"type":"reference","target":837,"name":"Notes","package":"@serenity-js/core","qualifiedName":"Notepad.Notes","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}]},{"id":822,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":184,"character":4}],"signatures":[{"id":823,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Removes the note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" from the notepad."}],"blockTags":[{"tag":"@returns","content":[{"kind":"code","text":"`true`"},{"kind":"text","text":" if the item in the Notepad object existed and has been removed,\\n "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":184,"character":4}],"typeParameter":[{"id":824,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":825,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":824,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":826,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":194,"character":4}],"signatures":[{"id":827,"name":"clear","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deletes all the notes stored in this notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":194,"character":4}],"type":{"type":"intrinsic","name":"void"}}]},{"id":828,"name":"size","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":205,"character":4}],"signatures":[{"id":829,"name":"size","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of notes stored in the notepad."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":205,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":830,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":831,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":832,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":833,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":834,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":835,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":836,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Methods","children":[794,797,801,809,813,817,822,826,828,830,833,835]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":56,"character":13}],"typeParameters":[{"id":837,"name":"Notes","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Notepad","previousId":786,"nextId":838},{"id":838,"name":"NotepadAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style adapter for the ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/),\\nthat makes it easier for the [actors](/api/core/class/Actor/) to access its APIs.\\n\\nSee ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/), ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/) and ["},{"kind":"code","text":"`notes`"},{"kind":"text","text":"](/api/core/function/notes/) for more examples."}]},"children":[{"id":839,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":840,"name":"new NotepadAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"typeParameter":[{"id":841,"name":"Notes","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":838,"typeArguments":[{"type":"reference","target":841,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}],"name":"NotepadAdapter","package":"@serenity-js/core"}}]},{"id":842,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":36,"character":4}],"signatures":[{"id":843,"name":"has","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" exists in the notepad.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.has`"},{"kind":"text","text":"](/api/core/class/Notepad/#has)}"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Question that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the note exists, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise"}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":36,"character":4}],"typeParameter":[{"id":844,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":845,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":844,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":846,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":58,"character":4}],"signatures":[{"id":847,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a note, identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":", from the notepad.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.get`"},{"kind":"text","text":"](/api/core/class/Notepad/#get)}"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The value of the previously recorded note."}]},{"tag":"@throws","content":[{"kind":"text","text":"Throws a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/) if the note with a given "},{"kind":"code","text":"`subject`"},{"kind":"text","text":"\\n has never been recorded."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":58,"character":4}],"typeParameter":[{"id":848,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":849,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":848,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":848,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":841,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":850,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":110,"character":4}],"signatures":[{"id":851,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves a given "},{"kind":"code","text":"`Answerable<value>`"},{"kind":"text","text":" and stores it in the notepad,\\nuniquely identified by its "},{"kind":"code","text":"`subject`"},{"kind":"text","text":".\\n\\n**Pro tip:** calls to "},{"kind":"code","text":"`set`"},{"kind":"text","text":" can be chained and result in an accumulation\\nof values to be recorded in the ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/).\\nThose values are resolved and recorded when the ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nreturned by this method is performed by an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/).\\n\\nIf a note identified by a given "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" is set multiple times,\\nthe last call wins.\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, notes, TakeNotes } from \'@serenity-js/core\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n interface MyNotes {\\n     stringNote: string;\\n     numberNote: number;\\n }\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad<MyNotes>());\\n  .attemptsTo(\\n\\n    notes<MyNotes>()\\n      .set(\'stringNote\', \'example\')\\n      .set(\'numberNote\', Promise.resolve(42))\\n      .set(\'stringNote\', \'another example\'),\\n\\n    Ensure.equal(notes().toJSON(), {\\n      firstNote: \'another example\',\\n      secondNote: 42,\\n    })\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.set`"},{"kind":"text","text":"](/api/core/class/Notepad/#set)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":110,"character":4}],"typeParameter":[{"id":852,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":853,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","target":852,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":854,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value to record"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","target":852,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true},"objectType":{"type":"reference","target":841,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":786,"typeArguments":[{"type":"reference","target":841,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}],"name":"ChainableSetter","package":"@serenity-js/core"},{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}]},"implementationOf":{"type":"reference","target":788,"name":"ChainableSetter.set"}}],"implementationOf":{"type":"reference","target":787,"name":"ChainableSetter.set"}},{"id":855,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":180,"character":4}],"signatures":[{"id":856,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Removes the note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" from the notepad.\\n\\n#### Using as an "},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check, Log, notes } from \'@serenity-js/core\'\\nimport { isPresent } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n\\n    notes<MyNotes>().delete(\'myNote\'),\\n\\n    Check.whether(notes<MyNotes>().get(\'myNote\'), isPresent())\\n      .andIfSo(\\n        Log.the(\'myNote is present\'),\\n      )\\n      .otherwise(\\n        Log.the(\'myNote was deleted\'),\\n      )\\n  )\\n  // logs: myNote was deleted\\n```"},{"kind":"text","text":"\\n\\n#### Using as a "},{"kind":"code","text":"`Question`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check, Log, notes } from \'@serenity-js/core\'\\nimport { isTrue } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n\\n    Check.whether(notes<MyNotes>().delete(\'myNote\'), isTrue())\\n      .andIfSo(\\n        Log.the(\'myNote was deleted\'),\\n      )\\n      .otherwise(\\n        Log.the(\'myNote could not be deleted because it was not set\'),\\n      )\\n  )\\n  // logs: myNote was deleted\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.delete`"},{"kind":"text","text":"](/api/core/class/Notepad/#delete)"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"When used as a "},{"kind":"code","text":"`Question`"},{"kind":"text","text":", resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the item in the Notepad object existed and has been removed,\\n "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":180,"character":4}],"typeParameter":[{"id":857,"name":"Subject","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":858,"name":"subject","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":857,"name":"Subject","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":859,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":210,"character":4}],"signatures":[{"id":860,"name":"clear","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deletes all the notes stored in this notepad.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, notes } from \'@serenity-js/core\'\\nimport { isTrue } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n    Log.the(notes<MyNotes>().size()),   // emits 1\\n    notes<MyNotes>().clear(),\\n    Log.the(notes<MyNotes>().size()),   // emits 0\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.clear`"},{"kind":"text","text":"](/api/core/class/Notepad/#clear)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":210,"character":4}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":861,"name":"size","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":239,"character":4}],"signatures":[{"id":862,"name":"size","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of notes stored in the notepad.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, notes } from \'@serenity-js/core\'\\nimport { isTrue } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    Log.the(notes<MyNotes>().size()),   // emits 0\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n    Log.the(notes<MyNotes>().size()),   // emits 1\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Notepad.size`"},{"kind":"text","text":"](/api/core/class/Notepad/#size)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":239,"character":4}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":863,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":276,"character":4}],"signatures":[{"id":864,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a "},{"kind":"code","text":"`JSONObject`"},{"kind":"text","text":"\\nrepresenting the resolved notes stored in the notepad.\\n\\nNote that serialisation to JSON will simplify some data types that might not be serialisable by default,\\nbut are commonly used in data structures representing actor\'s notes.\\nFor example a ["},{"kind":"code","text":"`Map`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) will be serialised as a regular JSON object, a ["},{"kind":"code","text":"`Set`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set) will be serialised as ["},{"kind":"code","text":"`Array`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array).\\n\\nAdditionally, notepad assumes that the data structure you use it with does not contain cyclic references.\\n\\nTo learn more about the serialisation mechanism used by the notepad, please refer to [TinyTypes documentation](https://jan-molak.github.io/tiny-types/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, notes } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.with({\\n    aSet: new Set([\'apples\', \'bananas\', \'cucumbers\']),\\n    aPromisedValue: Promise.resolve(42),\\n    aString: \'example\'\\n  })))\\n  .attemptsTo(\\n    Log.the(notes().toJSON()),\\n  )\\n  // emits: {\\n  //    aSet: [\'apples\', \'bananas\', \'cucumbers\']\\n  //    aPromisedValue: 42,\\n  //    aString: \'example\',\\n  // }\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":276,"character":4}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":865,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":285,"character":4}],"signatures":[{"id":866,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":285,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[839]},{"title":"Methods","children":[842,846,850,855,859,861,863,865]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":22,"character":13}],"typeParameters":[{"id":867,"name":"Notes","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"implementedTypes":[{"type":"reference","target":786,"typeArguments":[{"type":"reference","target":841,"name":"Notes","package":"@serenity-js/core","qualifiedName":"NotepadAdapter.Notes","refersToTypeParameter":true}],"name":"ChainableSetter","package":"@serenity-js/core"}],"permalink":"/api/core/class/NotepadAdapter","previousId":793,"nextId":871},{"id":871,"name":"TakeNotes","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to remember information\\nto be recalled during a test scenario.\\n\\nUnder the hood, ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) uses a ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/), which state\\ncan be populated both during initialisation or while the test scenario is executed.\\nPopulating the notepad when it\'s initialised can be useful to associate authentication credentials\\nor personal details with a given actor, while dynamic recording of notes during a test scenario\\ncan be useful when the data to be recorded is not known upfront - for example when we want\\nthe actor to remember a JWT stored in the browser and then use it when sending API requests.\\n\\n**Pro tip:** ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/), ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/) and ["},{"kind":"code","text":"`notes`"},{"kind":"text","text":"](/api/core/function/notes/) can be typed\\nusing [TypeScript generics](https://www.typescriptlang.org/docs/handbook/2/generics.html)\\nto help you avoid typos when specifying note names.\\n\\nSee [notes](/api/core/function/notes) and ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/) for more usage examples.\\n\\n## Remembering and retrieving a value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad())\\n  .attemptsTo(\\n    notes().set(\'my_note\', \'some value\'),\\n    Log.the(notes().get(\'my_note\')),\\n    // emits \'some value\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using generics\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\'\\n\\n interface MyNotes {\\n   personalDetails: {\\n     firstName: string;\\n     lastName: string;\\n   }\\n }\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad<MyNotes>())\\n  .attemptsTo(\\n    Log.the(notes<MyNotes>().has(\'personalDetails\')),\\n    // emits false\\n\\n    Log.the(notes<MyNotes>().get(\'personalDetails\').isPresent()),\\n    // emits false\\n\\n    notes<MyNotes>().set(\'personalDetails\', { firstName: \'Leonard\', lastName: \'McLaud\' }),\\n\\n    Log.the(notes<MyNotes>().has(\'personalDetails\')),\\n    // emits true\\n\\n    Log.the(notes<MyNotes>().get(\'personalDetails\').isPresent()),\\n    // emits true\\n\\n    Log.the(notes().get(\'personalDetails\').firstName),\\n    // emits \'Leonard\'\\n\\n    Log.the(notes().get(\'personalDetails\').firstName.toLocaleUpperCase()),\\n    // emits \'LEONARD\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Populating the notepad with initial state\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, Note, Notepad, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  firstName: string;\\n  lastName: string;\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    TakeNotes.using(Notepad.with<MyNotes>({\\n      firstName: \'Leonard\',\\n      lastName: \'McLaud\',\\n    }))\\n  )\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'lastName\', \'Shelby\'),\\n    Log.the(notes().get(\'firstName\')),\\n    // emits \'Leonard\'\\n\\n    Log.the(notes().get(\'lastName\')),\\n    // emits \'Shelby\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Recording a dynamic note\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { By, Text, PageElement } from \'@serenity-js/web\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio\'\\n\\ninterface OnlineShoppingNotes {\\n  promoCode: string;\\n}\\n\\nconst promoCodeBanner = () =>\\n  PageElement.located(By.css(\'[data-testid=\\"promo-code\\"]\'))\\n    .describedAs(\'promo code\');\\n\\nconst promoCodeInput = () =>\\n  PageElement.located(By.css(\'[data-testid=\\"promo-code-input\\"]\'))\\n    .describedAs(\'promo code field\');\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    BrowseTheWebWithWebdriverIO.using(browser),\\n    TakeNotes.using(Notepad.empty<OnlineShoppingNotes>())\\n  )\\n  .attemptsTo(\\n    notes<OnlineShoppingNotes>().set(\'promoCode\', Text.of(promoCode()),\\n    // ...\\n    Enter.theValue(notes<OnlineShoppingNotes>().get(\'promoCode\'))\\n      .into(promoCodeInput())\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Clearing a notepad before each test scenario (Mocha)\\n\\n"},{"kind":"code","text":"```ts\\nimport \'mocha\';\\n\\nbeforeEach(() =>\\n  actorCalled(\'Leonard\')\\n    .attemptsTo(\\n      notes().clear(),\\n    ))\\n```"},{"kind":"text","text":"\\n\\n## Clearing a notepad before each test scenario (Cucumber)\\n\\n"},{"kind":"code","text":"```ts\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(() =>\\n  actorCalled(\'Leonard\')\\n    .attemptsTo(\\n      notes().clear(),\\n    ));\\n```"},{"kind":"text","text":"\\n\\n## Importing notes from an API response\\n\\n"},{"kind":"code","text":"```ts\\n // given an example API:\\n //   GET /generate-test-user\\n // which returns:\\n //   { \\"first_name\\": \\"Leonard\\", \\"last_name\\": \\"Shelby\\" }\\n\\nimport { actorCalled, Log, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, Send } from \'@serenity-js/rest\'\\n\\ninterface PersonalDetails {\\n  first_name: string;\\n  last_name: string;\\n}\\n\\ninterface MyNotes {\\n  personalDetails?: PersonalDetails;\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    CallAnApi.at(\'https://api.example.org/\'),\\n    TakeNotes.using(Notepad.empty<MyNotes>())\\n  )\\n  .attemptsTo(\\n     Send.a(GetRequest.to(\'/generate-test-user\')),\\n     notes<MyNotes>().set(\'personalDetails\', LastResponse.body<PersonalDetails>()),\\n\\n     Log.the(notes<MyNotes>().get(\'personalDetails\').first_name),    // emits \'Leonard\'\\n     Log.the(notes<MyNotes>().get(\'personalDetails\').last_name),     // emits \'Shelby\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using the QuestionAdapter\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface AuthCredentials {\\n  username?: string;\\n  password?: string;\\n}\\n\\ninterface MyNotes {\\n  auth: AuthCredentials;\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    TakeNotes.using(\\n      Notepad.with<MyNotes>({     // typed initial state\\n        auth: {\\n          username: \'leonard@example.org\',\\n          password: \'SuperSecretP@ssword!\',\\n        }\\n      })\\n    )\\n  )\\n  .attemptsTo(\\n    Log.the(\\n      notes<MyNotes>()          // typed notes\\n        .get(\'auth\')            // returns QuestionAdapter<AuthCredentials>\\n        .password               // returns QuestionAdapter<string>\\n        .charAt(0)\\n        .toLocaleLowerCase(),   // emits \\"s\\"\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [notes](/api/core/function/notes)\\n- ["},{"kind":"code","text":"`Notepad`"},{"kind":"text","text":"](/api/core/class/Notepad/)"}]},"children":[{"id":872,"name":"usingAnEmptyNotepad","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":237,"character":11}],"signatures":[{"id":873,"name":"usingAnEmptyNotepad","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Initialises an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) with ["},{"kind":"code","text":"`Notepad.empty`"},{"kind":"text","text":"](/api/core/class/Notepad/#empty)."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":237,"character":11}],"typeParameter":[{"id":874,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":871,"typeArguments":[{"type":"reference","target":874,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"TakeNotes","package":"@serenity-js/core"}}]},{"id":875,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":247,"character":11}],"signatures":[{"id":876,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Initialises an ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes/) using\\na ["},{"kind":"code","text":"`Notepad.with`"},{"kind":"text","text":"](/api/core/class/Notepad/#with) some initial state."}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":247,"character":11}],"typeParameter":[{"id":877,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":878,"name":"notepad","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":793,"typeArguments":[{"type":"reference","target":877,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}],"type":{"type":"reference","target":871,"typeArguments":[{"type":"reference","target":877,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"TakeNotes","package":"@serenity-js/core"}}]},{"id":884,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":254,"character":4}],"signatures":[{"id":885,"name":"new TakeNotes","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":254,"character":4}],"typeParameter":[{"id":886,"name":"Notes_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":887,"name":"notepad","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":793,"typeArguments":[{"type":"reference","target":886,"name":"Notes_Type","package":"@serenity-js/core","qualifiedName":"TakeNotes.Notes_Type","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}],"type":{"type":"reference","target":871,"typeArguments":[{"type":"reference","target":886,"name":"Notes_Type","package":"@serenity-js/core","qualifiedName":"TakeNotes.Notes_Type","refersToTypeParameter":true}],"name":"TakeNotes","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":491,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":490,"name":"Ability.constructor"}},{"id":888,"name":"notepad","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":254,"character":32}],"type":{"type":"reference","target":793,"typeArguments":[{"type":"reference","target":886,"name":"Notes_Type","package":"@serenity-js/core","qualifiedName":"TakeNotes.Notes_Type","refersToTypeParameter":true}],"name":"Notepad","package":"@serenity-js/core"}}],"groups":[{"title":"Constructors","children":[884]},{"title":"Properties","children":[888]},{"title":"Methods","children":[872,875]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":232,"character":13}],"typeParameters":[{"id":889,"name":"Notes_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"extendedTypes":[{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/core/class/TakeNotes","previousId":838,"nextId":868},{"id":868,"name":"notes","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/notes.ts","line":118,"character":16}],"signatures":[{"id":869,"name":"notes","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Alias for ["},{"kind":"code","text":"`Notepad.notes`"},{"kind":"text","text":"](/api/core/class/Notepad/#notes).\\n\\n**Pro tip:** "},{"kind":"code","text":"`notes<T>().get(subject)`"},{"kind":"text","text":" returns a ["},{"kind":"code","text":"`NotepadAdapter`"},{"kind":"text","text":"](/api/core/class/NotepadAdapter/) to make accessing the APIs\\nof the underlying type easier. Check ["},{"kind":"code","text":"`NotepadAdapter`"},{"kind":"text","text":"](/api/core/class/NotepadAdapter/) for more examples.\\n\\n## Working with untyped notes\\n\\nYou can use "},{"kind":"code","text":"`notes<T>()`"},{"kind":"text","text":" without parameterising it with an [interface](https://www.typescriptlang.org/docs/handbook/interfaces.html)\\ndescribing the structure of your notes.\\n\\n**Note:** this approach _is not type-safe_ and the type-safe alternative presented below should be used in most cases.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\';\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad())\\n  .attemptsTo(\\n    notes().set(\'my_note\', \'some value\'),\\n\\n    Log.the(notes().get(\'my_note\')),\\n    // emits \\"some value\\"\\n\\n    Log.the(notes().get(\'my_note\').toLocaleUpperCase()),\\n    // emits \\"SOME VALUE\\"\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Working with typed notes\\n\\nThe **recommended** way to use "},{"kind":"code","text":"`notes<T>()`"},{"kind":"text","text":" is to parameterise it\\nwith an [interface](https://www.typescriptlang.org/docs/handbook/interfaces.html)\\ndescribing the structure of your notes.\\n\\n**Note:** this approach _is type-safe_.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\';\\n\\ninterface MyNotes {\\n  username: string;\\n  token?: string;     // optional value\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.using(Notepad.with<MyNotes>({\\n    username: \'Leonard.McLaud@example.org\',\\n  }))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'token\', \'my-auth-token\')\\n\\n    Log.the(notes<MyNotes>().get(\'token\').length),\\n    // emits 13\\n\\n    Log.the(notes<MyNotes>().get(\'username\').toLocaleLowerCase()),\\n    // emits \'leonard.mclaud@example.org\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Checking if a note is present\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { isPresent } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.using(Notepad.empty()))\\n  .attemptsTo(\\n    Check.whether(notes().get(\'token\'), isPresent())\\n     .andIfSo(\\n       Authenticate.using(notes().get(\'token\')),\\n     )\\n     .otherwise(\\n       SignIn.using(\'username\', \'password\'),\\n     )\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Working with complex data structures\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  recordedItems: string[];\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.using(Notepad.with<MyNotes>({\\n    recordedItems: [],\\n  }))\\n  .attemptsTo(\\n     // push 3 items\\n     notes().get(\'recordedItems\').push(\'apples\'),\\n     notes().get(\'recordedItems\').push(\'cucumbers\'),\\n     notes().get(\'recordedItems\').push(\'bananas\'),\\n\\n     // use QuestionAdapter to access Array.sort()\\n     notes().get(\'recordedItems\').sort(),\\n\\n     Log.the(notes().get(\'recordedItems\')),\\n     // emits \'apples\', \'bananas\', \'cucumbers\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`NotepadAdapter`"},{"kind":"text","text":"](/api/core/class/NotepadAdapter/)\\n- ["},{"kind":"code","text":"`Notepad.notes`"},{"kind":"text","text":"](/api/core/class/Notepad/#notes)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)"}]},"sources":[{"fileName":"packages/core/src/screenplay/notes/notes.ts","line":118,"character":16}],"typeParameter":[{"id":870,"name":"N","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":838,"typeArguments":[{"type":"reference","target":870,"name":"N","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"NotepadAdapter","package":"@serenity-js/core"}}],"permalink":"/api/core/function/notes","previousId":871,"nextId":57},{"id":1003,"name":"AnswersQuestions","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) who can answer a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) about the system under test.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":1004,"name":"answer","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/AnswersQuestions.ts","line":19,"character":4}],"signatures":[{"id":1005,"name":"answer","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) evaluate an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nand return the value it holds."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/AnswersQuestions.ts","line":19,"character":4}],"typeParameter":[{"id":1006,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1007,"name":"answerable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":1006,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1006,"name":"T","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[1004]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/AnswersQuestions.ts","line":13,"character":17}],"implementedBy":[{"type":"reference","target":594,"name":"Actor"}],"permalink":"/api/core/interface/AnswersQuestions","previousId":652,"nextId":126},{"id":1008,"name":"ChainableMetaQuestion","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A chainable meta-question is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be answered\\nin the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable),\\nand form a chain of transformations.\\n\\n[Meta-questions](/api/core/interface/MetaQuestion/) are typically used when filtering a ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"children":[{"id":1009,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/ChainableMetaQuestion.ts","line":29,"character":4}],"signatures":[{"id":1010,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Answers the given "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" in the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nand returns another "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" ready for further chaining.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/ChainableMetaQuestion.ts","line":29,"character":4}],"parameters":[{"id":1011,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":1014,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":1015,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true},{"type":"reference","target":1008,"typeArguments":[{"type":"reference","target":1014,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1015,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]},"overwrites":{"type":"reference","target":1499,"name":"MetaQuestion.of"}}],"overwrites":{"type":"reference","target":1498,"name":"MetaQuestion.of"}},{"id":1012,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"signatures":[{"id":1013,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of this ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/),\\ntypically involving the description of the subject.\\n\\nFor example, a description of a meta question obout \\"the text of an element\\"\\nwould be "},{"kind":"code","text":"`text of ${ element.toString() }`"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1502,"name":"MetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":1501,"name":"MetaQuestion.toString"}}],"groups":[{"title":"Methods","children":[1009,1012]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/ChainableMetaQuestion.ts","line":17,"character":17}],"typeParameters":[{"id":1014,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1015,"name":"Returned_Question_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":893,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Question","package":"@serenity-js/core"}}],"extendedTypes":[{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":1014,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":1015,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true},{"type":"reference","target":1008,"typeArguments":[{"type":"reference","target":1014,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1015,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"ChainableMetaQuestion.Returned_Question_Type","refersToTypeParameter":true}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}],"name":"MetaQuestion","package":"@serenity-js/core"}],"implementedBy":[{"type":"reference","target":1362,"name":"MetaList"}],"permalink":"/api/core/interface/ChainableMetaQuestion","previousId":1837,"nextId":1067},{"id":1016,"name":"Check","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A [flow control statement](https://en.wikipedia.org/wiki/Control_flow)\\nthat enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to decide between two alternate series of [activities](/api/core/class/Activity/).\\n\\nThink of it as a Screenplay Pattern equivalent of the traditional "},{"kind":"code","text":"`if`"},{"kind":"text","text":" statement.\\n\\n## Choose between two alternative sequences of activities\\n\\n"},{"kind":"code","text":"```ts\\nimport { equals } from \'@serenity-js/assertions\'\\nimport { actorCalled, Check } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Chuck\').attemptsTo(\\n  Check.whether(process.env.MODE, equals(\'prod\'))\\n    .andIfSo(\\n      LogInAsProdUser(),\\n    )\\n    .otherwise(\\n      LogInAsTestUser(),\\n    )\\n)\\n```"},{"kind":"text","text":"\\n\\n## Perform a sequence of activities when a condition is met\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check } from \'@serenity-js/core\'\\nimport { isVisible } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Chuck\').attemptsTo(\\n  Check.whether(CookieConsentBanner(), isVisible())\\n    .andIfSo(\\n        AcceptNecessaryCookies(),\\n    )\\n)\\n```"}]},"children":[{"id":1017,"name":"whether","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":11}],"signatures":[{"id":1018,"name":"whether","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":11}],"typeParameter":[{"id":1019,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1020,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":1019,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1021,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":1019,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1022,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1023,"name":"andIfSo","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":107}],"type":{"type":"reflection","declaration":{"id":1024,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":116}],"signatures":[{"id":1025,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":116}],"parameters":[{"id":1026,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":567,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1016,"typeArguments":[{"type":"reference","target":1019,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Check","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1023]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":105}]}}}]},{"id":1052,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":1053,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1555,"name":"Task.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":1554,"name":"Task.instantiationLocation"}},{"id":1045,"name":"otherwise","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":71,"character":4}],"signatures":[{"id":1046,"name":"otherwise","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":71,"character":4}],"parameters":[{"id":1047,"name":"alternativeActivities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of [activities](/api/core/class/Activity/) to perform when the ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) is not met."}]},"type":{"type":"array","elementType":{"type":"reference","target":567,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1538,"name":"Task","package":"@serenity-js/core"}}]},{"id":1048,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":78,"character":10}],"signatures":[{"id":1049,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/)."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":78,"character":10}],"parameters":[{"id":1050,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/)"}]},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":562,"name":"PerformsActivities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":1551,"name":"Task.performAs"}}],"overwrites":{"type":"reference","target":1550,"name":"Task.performAs"}},{"id":1054,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1055,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1056,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1057,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1058,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1058]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1557,"name":"Task.describedBy"}}],"inheritedFrom":{"type":"reference","target":1556,"name":"Task.describedBy"}},{"id":1064,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1065,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1567,"name":"Task.toString"}}],"inheritedFrom":{"type":"reference","target":1566,"name":"Task.toString"}}],"groups":[{"title":"Methods","children":[1017,1052,1045,1048,1054,1064]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":49,"character":13}],"typeParameters":[{"id":1066,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1538,"name":"Task","package":"@serenity-js/core"}],"permalink":"/api/core/class/Check","previousId":717,"nextId":478},{"id":1067,"name":"Describable","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"children":[{"id":1071,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1072,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1073,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1074,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1075,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1075]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1081,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1082,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[1071,1081]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":11,"character":22}],"extendedBy":[{"type":"reference","target":567,"name":"Activity"},{"type":"reference","target":893,"name":"Question"},{"type":"reference","target":1092,"name":"Expectation"}],"permalink":"/api/core/class/Describable","previousId":1008,"nextId":1084},{"id":1084,"name":"DescriptionFormattingOptions","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration options for ["},{"kind":"code","text":"`Question.formattedValue`"},{"kind":"text","text":"](/api/core/class/Question/#formattedValue) and\\nthe ["},{"kind":"code","text":"`the`"},{"kind":"text","text":"](/api/core/function/the/) function."}]},"children":[{"id":1085,"name":"maxLength","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The maximum length of the string representation of the value.\\nString representations longer than this value will be truncated and appended with an ellipsis."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/DescriptionFormattingOptions.ts","line":12,"character":4}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1085]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/DescriptionFormattingOptions.ts","line":7,"character":17}],"permalink":"/api/core/interface/DescriptionFormattingOptions","previousId":1067,"nextId":1242},{"id":1086,"name":"Predicate","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":14,"character":12}],"typeParameters":[{"id":1091,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reflection","declaration":{"id":1087,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":14,"character":32}],"signatures":[{"id":1088,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":1089,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}},{"id":1090,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":1091,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1224,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},{"type":"reference","target":1224,"name":"ExpectationOutcome","package":"@serenity-js/core"}]}}]}},"permalink":"/api/core#Predicate","previousId":428,"nextId":1092},{"id":1092,"name":"Expectation","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Defines an expectation to be used with ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until),\\n["},{"kind":"code","text":"`Check.whether`"},{"kind":"text","text":"](/api/core/class/Check/#whether),\\n["},{"kind":"code","text":"`Ensure.that`"},{"kind":"text","text":"](/api/assertions/class/Ensure/#that)\\nand as part of the Page Element Query Language with ["},{"kind":"code","text":"`PageElements.where`"},{"kind":"text","text":"](/api/web/class/PageElements/#where)\\nand ["},{"kind":"code","text":"`List.where`"},{"kind":"text","text":"](/api/core/class/List/#where)."}]},"children":[{"id":1093,"name":"define","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":115,"character":11}],"signatures":[{"id":1094,"name":"define","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A factory method to that makes defining custom [expectations](/api/core/class/Expectation/) easier\\n\\n#### Defining a custom expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { Expectation } from \'@serenity-js/core\'\\nimport { PageElement } from \'@serenity-js/web\'\\n\\nconst isEmpty = Expectation.define(\\n  \'isEmpty\',         // name of the expectation function to be used when producing an AssertionError\\n  \'become empty\',    // human-readable description of the relationship between expected and actual values\\n  async (actual: PageElement) => {\\n    const value = await actual.value();\\n    return value.length === 0;\\n  }\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in an assertion\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Clear, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Clear.the(nameField()),\\n  Ensure.that(nameField(), isEmpty())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in a control flow statement\\n\\n"},{"kind":"code","text":"```ts\\nimport { not } from \'@serenity-js/assertions\'\\nimport { actorCalled, Check, Duration, Wait } from \'@serenity-js/core\'\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Check.whether(nameField(), isEmpty())\\n    .andIfSo(\\n      Enter.theValue(actorInTheSpotlight().name).into(nameField()),\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in a synchronisation statement\\n\\n"},{"kind":"code","text":"```ts\\nimport { not } from \'@serenity-js/assertions\'\\nimport { actorCalled, Duration, Wait } from \'@serenity-js/core\'\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Enter.theValue(actorInTheSpotlight().name).into(nameField()),\\n\\n  Wait.upTo(Duration.ofSeconds(2))\\n    .until(nameField(), not(isEmpty())),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":115,"character":11}],"typeParameter":[{"id":1095,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1096,"name":"PredicateArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"parameters":[{"id":1097,"name":"functionName","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the expectation function to be used when producing an ["},{"kind":"code","text":"`AssertionError`"},{"kind":"text","text":"](/api/core/class/AssertionError/)"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1098,"name":"relationship","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the relationship between the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" values.\\n Used when reporting [activities](/api/core/class/Activity/) performed by an [actor](/api/core/class/Actor/)"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1099,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":117,"character":23}],"signatures":[{"id":1100,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":117,"character":23}],"parameters":[{"id":1101,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","target":1096,"name":"PredicateArguments","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AnswerableArguments","package":"@serenity-js/core"}}],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}]}},{"id":1102,"name":"predicate","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1103,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":118,"character":19}],"signatures":[{"id":1104,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":118,"character":19}],"parameters":[{"id":1105,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1095,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":1106,"name":"predicateArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":1096,"name":"PredicateArguments","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reflection","declaration":{"id":1107,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":119,"character":7}],"signatures":[{"id":1108,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":119,"character":7}],"parameters":[{"id":1109,"name":"answerableArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","target":1096,"name":"PredicateArguments","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"AnswerableArguments","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":1095,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}]}}}]},{"id":1110,"name":"thatActualShould","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":180,"character":11}],"signatures":[{"id":1111,"name":"thatActualShould","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to define a simple ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n\\n#### Simple parameterised expectation\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Expectation } from \'@serenity-js/core\'\\n import { Ensure } from \'@serenity-js/assertions\'\\n\\n function isDivisibleBy(expected: Answerable<number>): Expectation<number> {\\n     return Expectation.thatActualShould<number, number>(\'have value divisible by\', expected)\\n         .soThat((actualValue, expectedValue) => actualValue % expectedValue === 0);\\n }\\n\\n await actorCalled(\'Erica\').attemptsTo(\\n     Ensure.that(4, isDivisibleBy(2)),\\n )\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":180,"character":11}],"typeParameter":[{"id":1112,"name":"Expected_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1113,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1114,"name":"relationshipName","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the relationship between the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":". Use format "},{"kind":"code","text":"`have value <adjective>`"},{"kind":"text","text":"\\n so that the description works in both positive and negative contexts, e.g. "},{"kind":"code","text":"`Waited until 5 does have value greater than 2`"},{"kind":"text","text":",\\n "},{"kind":"code","text":"`Expected 5 to not have value greater than 2`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"id":1115,"name":"expectedValue","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":1112,"name":"Expected_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1116,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1117,"name":"soThat","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":8}],"type":{"type":"reflection","declaration":{"id":1118,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":16}],"signatures":[{"id":1119,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":16}],"parameters":[{"id":1120,"name":"simplifiedPredicate","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1121,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":38}],"signatures":[{"id":1122,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":181,"character":38}],"parameters":[{"id":1123,"name":"actualValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1113,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":1124,"name":"expectedValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1112,"name":"Expected_Type","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":1113,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1117]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":180,"character":126}]}}}]},{"id":1125,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":236,"character":11}],"signatures":[{"id":1126,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used to compose [expectations](/api/core/class/Expectation/).\\n\\n#### Composing [expectations](/api/core/class/Expectation/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation } from \'@serenity-js/core\'\\nimport { Ensure, and, or, isGreaterThan, isLessThan, equals  } from \'@serenity-js/assertions\'\\n\\nfunction isWithin(lowerBound: number, upperBound: number) {\\n  return Expectation\\n    .to(`have value within ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(\\n        or(isGreaterThan(lowerBound), equals(lowerBound)),\\n        or(isLessThan(upperBound), equals(upperBound)),\\n      )\\n    )\\n }\\n\\n await actorCalled(\'Erica\').attemptsTo(\\n     Ensure.that(5, isWithin(3, 6)),\\n )\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":236,"character":11}],"typeParameter":[{"id":1127,"name":"Actual_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1128,"name":"relationshipName","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the relationship between the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":". Use format "},{"kind":"code","text":"`have value <adjective>`"},{"kind":"text","text":"\\n so that the description works in both positive and negative contexts, e.g. "},{"kind":"code","text":"`Waited until 5 does have value greater than 2`"},{"kind":"text","text":",\\n "},{"kind":"code","text":"`Expected 5 to not have value greater than 2`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reflection","declaration":{"id":1129,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1130,"name":"soThatActual","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":237,"character":8}],"type":{"type":"reflection","declaration":{"id":1131,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":237,"character":22}],"signatures":[{"id":1132,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":237,"character":22}],"parameters":[{"id":1133,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":1127,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":1127,"name":"Actual_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1130]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":236,"character":54}]}}}]},{"id":1148,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1149,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1150,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1151,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1152,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1152]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1072,"name":"Describable.describedBy"}}],"inheritedFrom":{"type":"reference","target":1071,"name":"Describable.describedBy"}},{"id":1158,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1159,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1082,"name":"Describable.toString"}}],"inheritedFrom":{"type":"reference","target":1081,"name":"Describable.toString"}},{"id":1142,"name":"isMetFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":267,"character":4}],"signatures":[{"id":1143,"name":"isMetFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`ExpectationOutcome`"},{"kind":"text","text":"](/api/core/class/ExpectationOutcome/)\\nindicating that the [expectation was met](/api/core/class/ExpectationMet/)\\nor that the [expectation was not met](/api/core/class/ExpectationNotMet/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":267,"character":4}],"parameters":[{"id":1144,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":1160,"name":"Actual","package":"@serenity-js/core","qualifiedName":"Expectation.Actual","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":1224,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1145,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":274,"character":4}],"signatures":[{"id":1146,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":274,"character":4}],"parameters":[{"id":1147,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"this"}}]}],"groups":[{"title":"Methods","children":[1093,1110,1125,1148,1158,1142,1145]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":28,"character":13}],"typeParameters":[{"id":1160,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1067,"name":"Describable","package":"@serenity-js/core"}],"permalink":"/api/core/class/Expectation","previousId":1086,"nextId":1161},{"id":1242,"name":"List","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style wrapper around ["},{"kind":"code","text":"`Array`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array)\\nand array-like structures - see ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)."}]},"children":[{"id":1243,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":22,"character":11},{"fileName":"packages/core/src/screenplay/questions/List.ts","line":23,"character":11},{"fileName":"packages/core/src/screenplay/questions/List.ts","line":24,"character":11}],"signatures":[{"id":1244,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":22,"character":11}],"typeParameter":[{"id":1245,"name":"IT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1246,"name":"CT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1247,"name":"RQT","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1245,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":893,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1245,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Question","package":"@serenity-js/core"}]}}],"parameters":[{"id":1248,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":648,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1245,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1008,"typeArguments":[{"type":"reference","target":1246,"name":"CT","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":1247,"name":"RQT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1362,"typeArguments":[{"type":"reference","target":1246,"name":"CT","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":1245,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"}},{"id":1249,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":23,"character":11}],"typeParameter":[{"id":1250,"name":"IT","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1251,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1250,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1242,"typeArguments":[{"type":"reference","target":1250,"name":"IT","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}}]},{"id":1339,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"signatures":[{"id":1340,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"parameters":[{"id":1341,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1303,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":961,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":960,"name":"Question.describedAs"}},{"id":1342,"name":"as","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"signatures":[{"id":1343,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"typeParameter":[{"id":1344,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1345,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1346,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"signatures":[{"id":1347,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"parameters":[{"id":1348,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1303,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"reference","target":965,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":965,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":965,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":964,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":963,"name":"Question.as"}},{"id":1349,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1350,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1351,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1352,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1353,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1353]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":971,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":970,"name":"Question.describedBy"}},{"id":1359,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1360,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":981,"name":"Question.toString"}}],"inheritedFrom":{"type":"reference","target":980,"name":"Question.toString"}},{"id":1301,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":32,"character":4}],"signatures":[{"id":1302,"name":"new List","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":32,"character":4}],"typeParameter":[{"id":1303,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1304,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1303,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1242,"typeArguments":[{"type":"reference","target":1303,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<Item_Type>>>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<Item_Type>>>.constructor"}},{"id":1307,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"signatures":[{"id":1308,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"parameters":[{"id":1309,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1310,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"signatures":[{"id":1311,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"parameters":[{"id":1312,"name":"current","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1487,"typeArguments":[{"type":"reference","target":1303,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"CurrentItem","package":"@serenity-js/core"}},{"id":1313,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":1314,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1303,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1538,"name":"Task","package":"@serenity-js/core"}}]},{"id":1315,"name":"eachMappedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":40,"character":13}],"signatures":[{"id":1316,"name":"eachMappedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":40,"character":13}],"typeParameter":[{"id":1317,"name":"Mapped_Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1318,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":1303,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true},{"type":"reference","target":893,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1317,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1317,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1242,"typeArguments":[{"type":"reference","target":1317,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}}]},{"id":1319,"name":"where","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":44,"character":13}],"signatures":[{"id":1320,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":44,"character":13}],"typeParameter":[{"id":1321,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1322,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":1303,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true},{"type":"reference","target":893,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1321,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1321,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}},{"id":1323,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":1321,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1242,"typeArguments":[{"type":"reference","target":1303,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}}]},{"id":1324,"name":"count","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":49,"character":13}],"signatures":[{"id":1325,"name":"count","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":49,"character":13}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1326,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":51,"character":13}],"signatures":[{"id":1327,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":51,"character":13}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":1303,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1328,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":53,"character":13}],"signatures":[{"id":1329,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":53,"character":13}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":1303,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1330,"name":"nth","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":55,"character":13}],"signatures":[{"id":1331,"name":"nth","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":55,"character":13}],"parameters":[{"id":1332,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":1303,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1333,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"signatures":[{"id":1334,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to use their [abilities](/api/core/class/Ability/)\\nto answer this question."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"parameters":[{"id":1335,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1303,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":958,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":957,"name":"Question.answeredBy"}}],"groups":[{"title":"Constructors","children":[1301]},{"title":"Methods","children":[1243,1339,1342,1349,1359,1307,1315,1319,1324,1326,1328,1330,1333]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":19,"character":22}],"typeParameters":[{"id":1361,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1303,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"List.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":1362,"name":"MetaList"}],"permalink":"/api/core/class/List","previousId":1084,"nextId":1362},{"id":1362,"name":"MetaList","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style wrapper around\\na ["},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":"](/api/core/interface/ChainableMetaQuestion/) representing a collection\\nthat can be resolved in "},{"kind":"code","text":"`Supported_Context_Type`"},{"kind":"text","text":" of another ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/).\\n\\nFor example, ["},{"kind":"code","text":"`PageElements.located`"},{"kind":"text","text":"](/api/web/class/PageElements/#located) returns "},{"kind":"code","text":"`MetaList<PageElement>`"},{"kind":"text","text":",\\nwhich allows for the collection of page elements to be resolved in the context\\nof dynamically-provided root element.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { By, PageElements, PageElement } from \'@serenity-js/web\'\\n\\nconst firstLabel = () =>\\n  PageElements.located(By.css(\'label\'))\\n     .first()\\n     .describedAs(\'first label\')\\n\\nconst exampleForm = () =>\\n  PageElement.located(By.css(\'form#example1\'))\\n     .describedAs(\'example form\')\\n\\nconst anotherExampleForm = () =>\\n  PageElement.located(By.css(\'form#example2\'))\\n     .describedAs(\'another example form\')\\n\\n// Next, you can compose the above questions dynamically with various \\"contexts\\":\\n//   firstLabel().of(exampleForm())\\n//   firstLabel().of(anotherExampleForm())\\n```"}]},"children":[{"id":1463,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"signatures":[{"id":1464,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":494,"character":4}],"parameters":[{"id":1465,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":1340,"name":"List.describedAs"}}],"inheritedFrom":{"type":"reference","target":1339,"name":"List.describedAs"}},{"id":1466,"name":"as","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"signatures":[{"id":1467,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":11}],"typeParameter":[{"id":1468,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1469,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1470,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"signatures":[{"id":1471,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":514,"character":26}],"parameters":[{"id":1472,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"reference","target":965,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":965,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":965,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1343,"name":"List.as"}}],"inheritedFrom":{"type":"reference","target":1342,"name":"List.as"}},{"id":1473,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1474,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1475,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1476,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1477,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1477]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1350,"name":"List.describedBy"}}],"inheritedFrom":{"type":"reference","target":1349,"name":"List.describedBy"}},{"id":1483,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1484,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1360,"name":"List.toString"},"implementationOf":{"type":"reference","target":1013,"name":"ChainableMetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":1359,"name":"List.toString"},"implementationOf":{"type":"reference","target":1012,"name":"ChainableMetaQuestion.toString"}},{"id":1449,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"signatures":[{"id":1450,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4}],"parameters":[{"id":1451,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1452,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"signatures":[{"id":1453,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22}],"parameters":[{"id":1454,"name":"current","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1487,"typeArguments":[{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"CurrentItem","package":"@serenity-js/core"}},{"id":1455,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":1456,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1538,"name":"Task","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1308,"name":"List.forEach"}}],"inheritedFrom":{"type":"reference","target":1307,"name":"List.forEach"}},{"id":1457,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"signatures":[{"id":1458,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to use their [abilities](/api/core/class/Ability/)\\nto answer this question."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10}],"parameters":[{"id":1459,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":1334,"name":"List.answeredBy"}}],"inheritedFrom":{"type":"reference","target":1333,"name":"List.answeredBy"}},{"id":1421,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":190,"character":4}],"signatures":[{"id":1422,"name":"new MetaList","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":190,"character":4}],"typeParameter":[{"id":1423,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1424,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1425,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":648,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1008,"typeArguments":[{"type":"reference","target":1423,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"union","types":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":893,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}}],"name":"Question","package":"@serenity-js/core"}]}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1362,"typeArguments":[{"type":"reference","target":1423,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1302,"name":"List.constructor"}}],"overwrites":{"type":"reference","target":1301,"name":"List.constructor"}},{"id":1427,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":196,"character":4}],"signatures":[{"id":1428,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Answers the given "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" in the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\nand returns another "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" ready for further chaining.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":196,"character":4}],"parameters":[{"id":1429,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":1423,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1362,"typeArguments":[{"type":"reference","target":1423,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":1010,"name":"ChainableMetaQuestion.of"}}],"implementationOf":{"type":"reference","target":1009,"name":"ChainableMetaQuestion.of"}},{"id":1430,"name":"eachMappedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":202,"character":13}],"signatures":[{"id":1431,"name":"eachMappedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":202,"character":13}],"typeParameter":[{"id":1432,"name":"Mapped_Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1433,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true},{"type":"reference","target":893,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1432,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1432,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1362,"typeArguments":[{"type":"reference","target":1423,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1432,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1316,"name":"List.eachMappedTo"}}],"overwrites":{"type":"reference","target":1315,"name":"List.eachMappedTo"}},{"id":1434,"name":"where","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":210,"character":13}],"signatures":[{"id":1435,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":210,"character":13}],"typeParameter":[{"id":1436,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1437,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true},{"type":"reference","target":893,"typeArguments":[{"type":"union","types":[{"type":"reference","target":1436,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1436,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}},{"id":1438,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":1436,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1362,"typeArguments":[{"type":"reference","target":1423,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1320,"name":"List.where"}}],"overwrites":{"type":"reference","target":1319,"name":"List.where"}},{"id":1439,"name":"count","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":219,"character":13}],"signatures":[{"id":1440,"name":"count","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":219,"character":13}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":1423,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"number"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1325,"name":"List.count"}}],"overwrites":{"type":"reference","target":1324,"name":"List.count"}},{"id":1441,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":229,"character":13}],"signatures":[{"id":1442,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":229,"character":13}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":1423,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1327,"name":"List.first"}}],"overwrites":{"type":"reference","target":1326,"name":"List.first"}},{"id":1443,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":244,"character":13}],"signatures":[{"id":1444,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":244,"character":13}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":1423,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1329,"name":"List.last"}}],"overwrites":{"type":"reference","target":1328,"name":"List.last"}},{"id":1445,"name":"nth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":259,"character":13}],"signatures":[{"id":1446,"name":"nth","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":259,"character":13}],"parameters":[{"id":1447,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":1423,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":1331,"name":"List.nth"}}],"overwrites":{"type":"reference","target":1330,"name":"List.nth"}}],"groups":[{"title":"Constructors","children":[1421]},{"title":"Methods","children":[1463,1466,1473,1483,1449,1457,1427,1430,1434,1439,1441,1443,1445]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":186,"character":13}],"typeParameters":[{"id":1485,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1486,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":1242,"typeArguments":[{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"List","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1008,"typeArguments":[{"type":"reference","target":1423,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1362,"typeArguments":[{"type":"reference","target":1423,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Supported_Context_Type","refersToTypeParameter":true},{"type":"reference","target":1424,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"MetaList.Item_Type","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}],"permalink":"/api/core/class/MetaList","previousId":1242,"nextId":1487},{"id":1487,"name":"CurrentItem","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":1488,"name":"item","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":400,"character":4}],"type":{"type":"reference","target":1490,"name":"Item_Type","package":"@serenity-js/core","qualifiedName":"CurrentItem.Item_Type","refersToTypeParameter":true}},{"id":1489,"name":"actor","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":401,"character":4}],"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[1488,1489]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":399,"character":17}],"typeParameters":[{"id":1490,"name":"Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/core/interface/CurrentItem","previousId":1362,"nextId":1491},{"id":1491,"name":"Masked","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This question masks sensitive data handled by the actors and prevents\\nit from being shown in Serenity/JS reports and console logs.\\nYou should use it to wrap passwords, secret tokens, phone numbers,\\ncredit card numbers, or any other personally identifiable information (PII).\\nHowever, even though the wrapped value is masked in the output,\\nyou can still retrieve the unmasked value by making the actor answer\\nthe question in your custom interactions."}]},"children":[{"id":1492,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Masked.ts","line":37,"character":11}],"signatures":[{"id":1493,"name":"valueOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the value of a sensitive parameter and mask it in any report.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Masked } from \'@serenity-js/core\';\\nimport { Ensure, equals } from \'@serenity-js/assertions\';\\n\\nawait actorCalled(\'John\')\\n  .attemptsTo(\\n    Enter.theValue(Masked.valueOf(\'your little secret\')).into(Form.exampleInput())\\n  );\\n```"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) representing the masked value."}]}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Masked.ts","line":37,"character":11}],"parameters":[{"id":1494,"name":"parameter","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) representing the masked value."}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":1495,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1496,"name":"new Masked","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1491,"name":"Masked","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1495]},{"title":"Methods","children":[1492]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Masked.ts","line":15,"character":13}],"permalink":"/api/core/class/Masked","previousId":1487,"nextId":1497},{"id":1497,"name":"MetaQuestion","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A meta-question is a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that can be answered\\nin the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable),\\ntypically to transform its value.\\n\\nFor example, the question ["},{"kind":"code","text":"`Text.of`"},{"kind":"text","text":"](/api/web/class/Text/#of) can be answered in the context\\nof a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) to return its text content.\\n\\n[Meta-questions](/api/core/interface/MetaQuestion/) are typically used when filtering a ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"children":[{"id":1498,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":27,"character":4}],"signatures":[{"id":1499,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Answers the given "},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":" in the context of another ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":27,"character":4}],"parameters":[{"id":1500,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":1503,"name":"Supported_Context_Type","package":"@serenity-js/core","qualifiedName":"MetaQuestion.Supported_Context_Type","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1504,"name":"Returned_Question_Type","package":"@serenity-js/core","qualifiedName":"MetaQuestion.Returned_Question_Type","refersToTypeParameter":true}}]},{"id":1501,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"signatures":[{"id":1502,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of this ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/),\\ntypically involving the description of the subject.\\n\\nFor example, a description of a meta question obout \\"the text of an element\\"\\nwould be "},{"kind":"code","text":"`text of ${ element.toString() }`"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[1498,1501]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":19,"character":17}],"typeParameters":[{"id":1503,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":1504,"name":"Returned_Question_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":893,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Question","package":"@serenity-js/core"}}],"extendedBy":[{"type":"reference","target":1008,"name":"ChainableMetaQuestion"}],"permalink":"/api/core/interface/MetaQuestion","previousId":1491,"nextId":1521},{"id":1521,"name":"Unanswered","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A placeholder value signifying that a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\nhas not been answered by an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) when producing an ["},{"kind":"code","text":"`ExpectationOutcome`"},{"kind":"text","text":"](/api/core/class/ExpectationOutcome/).\\nThis happens when Serenity/JS decides that answering a given question\\nwon\'t affect the outcome.\\n\\nFor example, making the actor answer questions about the expected value\\nand the actual value of each list item is unnecessary if we already know that the list itself is empty."}]},"children":[{"id":1522,"name":"isUnanswered","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":17,"character":11}],"signatures":[{"id":1523,"name":"isUnanswered","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":17,"character":11}],"parameters":[{"id":1524,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","target":1521,"name":"Unanswered","package":"@serenity-js/core"}}}]},{"id":1525,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1526,"name":"new Unanswered","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1521,"name":"Unanswered","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1531,"name":"[custom]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":21,"character":4}],"signatures":[{"id":1532,"name":"[custom]","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":21,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":1527,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":25,"character":4}],"signatures":[{"id":1528,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":25,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1529,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":29,"character":4}],"signatures":[{"id":1530,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":29,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1533,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1534,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1535,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Constructors","children":[1525]},{"title":"Methods","children":[1522,1531,1527,1529,1533]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Unanswered","previousId":1497,"nextId":1505},{"id":1161,"name":"ExpectationDetails","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Used with ["},{"kind":"code","text":"`ExpectationOutcome`"},{"kind":"text","text":"](/api/core/class/ExpectationOutcome/) to describe an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) and the arguments it\'s been executed with."}]},"children":[{"id":1162,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":15,"character":11}],"signatures":[{"id":1163,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":15,"character":11}],"parameters":[{"id":1164,"name":"functionName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1165,"name":"functionArguments","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},{"type":"reference","target":1161,"name":"ExpectationDetails","package":"@serenity-js/core"},{"type":"reference","target":1521,"name":"Unanswered","package":"@serenity-js/core"}]}}}],"type":{"type":"reference","target":1161,"name":"ExpectationDetails","package":"@serenity-js/core"}}]},{"id":1166,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":19,"character":11}],"signatures":[{"id":1167,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":19,"character":11}],"parameters":[{"id":1168,"name":"o","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","target":1161,"name":"ExpectationDetails","package":"@serenity-js/core"}}]},{"id":1173,"name":"name","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":36,"character":24}],"type":{"type":"reference","name":"Name","package":"@serenity-js/core"}},{"id":1174,"name":"args","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":37,"character":24}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},{"type":"reference","target":1161,"name":"ExpectationDetails","package":"@serenity-js/core"},{"type":"reference","target":1521,"name":"Unanswered","package":"@serenity-js/core"}]}}},{"id":1175,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":44,"character":4}],"signatures":[{"id":1176,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":44,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1177,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":4}],"signatures":[{"id":1178,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":4}],"type":{"type":"reflection","declaration":{"id":1179,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1180,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":16}],"type":{"type":"intrinsic","name":"string"}},{"id":1181,"name":"args","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":30}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":1182,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1183,"name":"type","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":44}],"type":{"type":"intrinsic","name":"string"}},{"id":1184,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":58}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"}}],"groups":[{"title":"Properties","children":[1183,1184]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":42}]}}}}],"groups":[{"title":"Properties","children":[1180,1181]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":14}]}},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1185,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1186,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1187,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Properties","children":[1173,1174]},{"title":"Methods","children":[1162,1166,1175,1177,1185]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/ExpectationDetails","previousId":1092,"nextId":1188},{"id":1188,"name":"ExpectationMet","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Indicates that an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) was met."}]},"children":[{"id":1189,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"signatures":[{"id":1190,"name":"new ExpectationMet","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"parameters":[{"id":1191,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1192,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1161,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1193,"name":"expected","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":1194,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1188,"name":"ExpectationMet","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1226,"name":"ExpectationOutcome.constructor"}}],"inheritedFrom":{"type":"reference","target":1225,"name":"ExpectationOutcome.constructor"}},{"id":1195,"name":"message","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":13,"character":24}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1231,"name":"ExpectationOutcome.message"}},{"id":1196,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":14,"character":24}],"type":{"type":"reference","target":1161,"name":"ExpectationDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1232,"name":"ExpectationOutcome.expectation"}},{"id":1197,"name":"expected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":15,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1233,"name":"ExpectationOutcome.expected"}},{"id":1198,"name":"actual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":16,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1234,"name":"ExpectationOutcome.actual"}},{"id":1199,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1200,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1201,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1236,"name":"ExpectationOutcome.equals"}}],"inheritedFrom":{"type":"reference","target":1235,"name":"ExpectationOutcome.equals"}},{"id":1202,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1203,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1239,"name":"ExpectationOutcome.toString"}}],"inheritedFrom":{"type":"reference","target":1238,"name":"ExpectationOutcome.toString"}},{"id":1204,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1205,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":1241,"name":"ExpectationOutcome.toJSON"}}],"inheritedFrom":{"type":"reference","target":1240,"name":"ExpectationOutcome.toJSON"}}],"groups":[{"title":"Constructors","children":[1189]},{"title":"Properties","children":[1195,1196,1197,1198]},{"title":"Methods","children":[1199,1202,1204]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationMet.ts","line":8,"character":13}],"extendedTypes":[{"type":"reference","target":1224,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"permalink":"/api/core/class/ExpectationMet","previousId":1161,"nextId":1206},{"id":1206,"name":"ExpectationNotMet","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Indicates that an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) was not met."}]},"children":[{"id":1207,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"signatures":[{"id":1208,"name":"new ExpectationNotMet","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"parameters":[{"id":1209,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1210,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1161,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1211,"name":"expected","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":1212,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1206,"name":"ExpectationNotMet","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1226,"name":"ExpectationOutcome.constructor"}}],"inheritedFrom":{"type":"reference","target":1225,"name":"ExpectationOutcome.constructor"}},{"id":1213,"name":"message","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":13,"character":24}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1231,"name":"ExpectationOutcome.message"}},{"id":1214,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":14,"character":24}],"type":{"type":"reference","target":1161,"name":"ExpectationDetails","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":1232,"name":"ExpectationOutcome.expectation"}},{"id":1215,"name":"expected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":15,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1233,"name":"ExpectationOutcome.expected"}},{"id":1216,"name":"actual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":16,"character":24}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","target":1234,"name":"ExpectationOutcome.actual"}},{"id":1217,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1218,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1219,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":1236,"name":"ExpectationOutcome.equals"}}],"inheritedFrom":{"type":"reference","target":1235,"name":"ExpectationOutcome.equals"}},{"id":1220,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1221,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":1239,"name":"ExpectationOutcome.toString"}}],"inheritedFrom":{"type":"reference","target":1238,"name":"ExpectationOutcome.toString"}},{"id":1222,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1223,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":1241,"name":"ExpectationOutcome.toJSON"}}],"inheritedFrom":{"type":"reference","target":1240,"name":"ExpectationOutcome.toJSON"}}],"groups":[{"title":"Constructors","children":[1207]},{"title":"Properties","children":[1213,1214,1215,1216]},{"title":"Methods","children":[1217,1220,1222]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationNotMet.ts","line":8,"character":13}],"extendedTypes":[{"type":"reference","target":1224,"name":"ExpectationOutcome","package":"@serenity-js/core"}],"permalink":"/api/core/class/ExpectationNotMet","previousId":1188,"nextId":1224},{"id":1224,"name":"ExpectationOutcome","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An outcome of an ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/),\\nwhich could be either [met](/api/core/class/ExpectationMet/) or [not met](/api/core/class/ExpectationNotMet/)."}]},"children":[{"id":1225,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"signatures":[{"id":1226,"name":"new ExpectationOutcome","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4}],"parameters":[{"id":1227,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":1228,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1161,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1229,"name":"expected","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":1230,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":1224,"name":"ExpectationOutcome","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1231,"name":"message","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":13,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":1232,"name":"expectation","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":14,"character":24}],"type":{"type":"reference","target":1161,"name":"ExpectationDetails","package":"@serenity-js/core"}},{"id":1233,"name":"expected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":15,"character":24}],"type":{"type":"intrinsic","name":"unknown"}},{"id":1234,"name":"actual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":16,"character":24}],"type":{"type":"intrinsic","name":"unknown"}},{"id":1235,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1236,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1237,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":1238,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1239,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1240,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1241,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Constructors","children":[1225]},{"title":"Properties","children":[1231,1232,1233,1234]},{"title":"Methods","children":[1235,1238,1240]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"extendedBy":[{"type":"reference","target":1188,"name":"ExpectationMet"},{"type":"reference","target":1206,"name":"ExpectationNotMet"}],"permalink":"/api/core/class/ExpectationOutcome","previousId":1206,"nextId":786},{"id":1505,"name":"the","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":171,"character":16},{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":172,"character":16},{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":173,"character":16}],"signatures":[{"id":1506,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a single-line description of an ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) by transforming\\na [template literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates),\\nparameterised with [primitive data types](https://developer.mozilla.org/en-US/docs/Glossary/Primitive),\\n[complex data structures](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#objects),\\nor any other [answerables](/api/core/#Answerable),\\ninto a ["},{"kind":"code","text":"`QuestionAdapter<string>`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\nthat can be used with ["},{"kind":"code","text":"`Task.where`"},{"kind":"text","text":"](/api/core/class/Task/#where) and ["},{"kind":"code","text":"`Interaction.where`"},{"kind":"text","text":"](/api/core/class/Interaction/#where) methods.\\n\\n"},{"kind":"code","text":"```ts\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(the `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(\'(555) 123-4567\'),\\n  // reported as: Alice dials \\"(555) 123-4567\\"\\n)\\n```"},{"kind":"text","text":"\\n\\n## Trimming the output\\n\\nUse ["},{"kind":"code","text":"`DescriptionFormattingOptions`"},{"kind":"text","text":"](http://serenity-js.org/api/core/interface/DescriptionFormattingOptions/)\\nto trim the descriptions of template parameters.\\nBy default, the output is displayed in full.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Task, the } from \'@serenity-js/core\'\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(dial({ maxLength: 10 }) `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(\'(555) 123-4567\'),\\n  // reported as: Alice dials \\"(555) 123-...\'\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with Questions\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with [questions](/api/core/class/Question/),\\nit retrieves their description by calling ["},{"kind":"code","text":"`Question.describedBy`"},{"kind":"text","text":"](/api/core/class/Question/#describedBy)\\nin the context of the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) performing the ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question, Task, the } from \'@serenity-js/core\'\\n\\nconst phoneNumber = (areaCode: string, centralOfficeCode: string, lineNumber: string) =>\\n Question.about(\'phone number\', actor => {\\n    return `(${ this.areaCode }) ${ this.centralOfficeCode }-${ this.lineNumber }`\\n  })\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(dial({ maxLength: 10 }) `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(phoneNumber(\'555\', \'123\', \'4567\'),\\n  // reported as: Alice dials phone number\\n)\\n```"},{"kind":"text","text":"\\n\\nIf you\'d like the question to be described using its formatted value instead of its description, use ["},{"kind":"code","text":"`Question.formattedValue`"},{"kind":"text","text":"](/api/core/class/Question/#formattedValue).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question, Task, the } from \'@serenity-js/core\'\\n\\nconst phoneNumber = (areaCode: string, centralOfficeCode: string, lineNumber: string) =>\\n  Question.about(\'phone number\', actor => {\\n    return `(${ this.areaCode }) ${ this.centralOfficeCode }-${ this.lineNumber }`\\n  }).describedAs(Question.formattedValue())\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(dial({ maxLength: 10 }) `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(phoneNumber(\'555\', \'123\', \'4567\'),\\n  // reported as: Alice dials \\"(555) 123-4567\\"\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with objects with a custom "},{"kind":"code","text":"`toString`"},{"kind":"text","text":" method\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with objects that have\\na custom ["},{"kind":"code","text":"`toString()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString) method,\\nor [answerables](/api/core/#Answerable) resolving to such objects, the "},{"kind":"code","text":"`toString()`"},{"kind":"text","text":" method is called to produce the resulting description.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, description, Task } from \'@serenity-js/core\'\\n\\nclass PhoneNumber {\\n  constructor(\\n    private readonly areaCode: string,\\n    private readonly centralOfficeCode: string,\\n    private readonly lineNumber: string,\\n  ) {}\\n\\n  toString() {\\n    return `(${ this.areaCode }) ${ this.centralOfficeCode }-${ this.lineNumber }`\\n  }\\n}\\n\\nconst dial = (phoneNumber: Answerable<PhoneNumber>) =>\\n Task.where(description `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(new PhoneNumber(\'555\', \'123\', \'4567\')),\\n  // reported as: Alice dials (555) 123-4567\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with objects without a custom "},{"kind":"code","text":"`toString`"},{"kind":"text","text":" method\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with complex objects that don\'t have a custom "},{"kind":"code","text":"`toString()`"},{"kind":"text","text":" method,\\nor ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)s resolving to such objects,\\nthe resulting description will contain a JSON-like string representation of the object.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, description, Task } from \'@serenity-js/core\'\\n\\ninterface PhoneNumber {\\n  areaCode: string;\\n  centralOfficeCode: string;\\n  lineNumber: string;\\n}\\n\\nconst dial = (phoneNumber: Answerable<PhoneNumber>) =>\\n Task.where(the `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial({ areaCode: \'555\', centralOfficeCode: \'123\', lineNumber: \'4567\' }),\\n  // reported as: Alice dials { areaCode: \\"555\\", centralOfficeCode: \\"123\\", lineNumber: \\"4567\\" }\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using with masked values\\n\\nWhen "},{"kind":"code","text":"`the`"},{"kind":"text","text":" is parameterised with [masked values](/api/core/class/Masked/),\\nthe resulting description will contain a masked representation of the values.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, description, Task } from \'@serenity-js/core\'\\n\\nconst dial = (phoneNumber: Answerable<string>) =>\\n Task.where(description `#actor dials ${ phoneNumber }`, /* */)\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  dial(Masked.valueOf(\'(555) 123-4567\')),\\n  // reported as: Alice dials [a masked value]\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n- ["},{"kind":"code","text":"`Question.describedAs`"},{"kind":"text","text":"](/api/core/class/Question/#describedAs)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Masked`"},{"kind":"text","text":"](/api/core/class/Masked/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":171,"character":16}],"parameters":[{"id":1507,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1084,"name":"DescriptionFormattingOptions","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1508,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":171,"character":60}],"signatures":[{"id":1509,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"typeParameter":[{"id":1512,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1510,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":1511,"name":"placeholders","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":1512,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"MetaQuestion","package":"@serenity-js/core"},{"type":"intrinsic","name":"any"}]}}}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":1512,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]}}},{"id":1513,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":172,"character":16}],"typeParameter":[{"id":1514,"name":"Supported_Context_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1515,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":1516,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":1514,"name":"Supported_Context_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}],"permalink":"/api/core/function/the","previousId":1521,"nextId":1517},{"id":1517,"name":"q","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":246,"character":16}],"signatures":[{"id":1518,"name":"q","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A Serenity/JS Screenplay Pattern-flavour\\nof a [tagged template literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates),\\n"},{"kind":"code","text":"`q`"},{"kind":"text","text":" is a tag function capable of resolving any "},{"kind":"code","text":"`Answerable<string>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Answerable<number>`"},{"kind":"text","text":"\\nyou parametrise it with, and returning a "},{"kind":"code","text":"`QuestionAdapter<string>`"},{"kind":"text","text":".\\n\\nUse "},{"kind":"code","text":"`q`"},{"kind":"text","text":" to concatenate "},{"kind":"code","text":"`string`"},{"kind":"text","text":" and "},{"kind":"code","text":"`number`"},{"kind":"text","text":" values returned from synchronous an asynchronous sources.\\n\\n## Interpolating questions\\n\\n"},{"kind":"code","text":"```ts\\nimport { q, actorCalled } from \'@serenity-js/core\'\\nimport { Send, DeleteRequest } from \'@serenity-js/rest\'\\nimport { Text } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Send.a(DeleteRequest.to(\\n    q `/articles/${ Text.of(Article.id()) }`\\n  ))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using a custom description\\n\\n"},{"kind":"code","text":"```ts\\nimport { q, actorCalled } from \'@serenity-js/core\'\\nimport { Send, DeleteRequest } from \'@serenity-js/rest\'\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Send.a(DeleteRequest.to(\\n    q `/articles/${ Text.of(Article.id()) }`.describedAs(\'/articles/:id\')\\n  ))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Transforming the interpolated string\\n\\nThe mechanism presented below relies on ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter).\\n\\n"},{"kind":"code","text":"```ts\\nimport { q, actorCalled } from \'@serenity-js/core\'\\nimport { Send, DeleteRequest } from \'@serenity-js/rest\'\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Send.a(DeleteRequest.to(\\n    q `/articles/${ Text.of(Article.id()) }`.toLocaleLowerCase()\\n  ))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)\\n- ["},{"kind":"code","text":"`Question.describedAs`"},{"kind":"text","text":"](/api/core/class/Question/#describedAs)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)"}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/tag-functions.ts","line":246,"character":16}],"parameters":[{"id":1519,"name":"templates","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"TemplateStringsArray"},"name":"TemplateStringsArray","package":"typescript"}},{"id":1520,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}],"permalink":"/api/core/function/q","previousId":1505,"nextId":567},{"id":1834,"name":"TellsTime","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) or a supporting class capable of telling\\nthe current wall clock time.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`Serenity`"},{"kind":"text","text":"](/api/core/class/Serenity/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"children":[{"id":1835,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"signatures":[{"id":1836,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[1835]}],"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":14,"character":17}],"extendedBy":[{"type":"reference","target":2418,"name":"EmitsDomainEvents"}],"implementedBy":[{"type":"reference","target":594,"name":"Actor"},{"type":"reference","target":2135,"name":"StageManager"}],"permalink":"/api/core/interface/TellsTime","previousId":2002,"nextId":1568},{"id":1568,"name":"ScheduleWork","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to schedule a callback function\\nto be executed with a delay, or until some condition is met.\\n\\nUsed internally by the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)."}],"modifierTags":["@experimental"]},"children":[{"id":1574,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":20,"character":4}],"signatures":[{"id":1575,"name":"new ScheduleWork","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":20,"character":4}],"parameters":[{"id":1576,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1657,"name":"Clock","package":"@serenity-js/core"}},{"id":1577,"name":"interactionTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1568,"name":"ScheduleWork","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":491,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":490,"name":"Ability.constructor"}},{"id":1579,"name":"repeatUntil","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":29,"character":4}],"signatures":[{"id":1580,"name":"repeatUntil","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":29,"character":4}],"typeParameter":[{"id":1581,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1582,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1678,"typeArguments":[{"type":"reference","target":1581,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"DelayedCallback","package":"@serenity-js/core"}},{"id":1583,"name":"limits","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1742,"typeArguments":[{"type":"reference","target":1581,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"RepeatUntilLimits","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1581,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1584,"name":"waitFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":36,"character":4}],"signatures":[{"id":1585,"name":"waitFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":36,"character":4}],"parameters":[{"id":1586,"name":"delay","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1587,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":40,"character":4}],"signatures":[{"id":1588,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Discards the resources associated with this ability."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":40,"character":4}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":522,"name":"Discardable.discard"}}],"implementationOf":{"type":"reference","target":521,"name":"Discardable.discard"}}],"groups":[{"title":"Constructors","children":[1574]},{"title":"Methods","children":[1579,1584,1587]}],"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":520,"name":"Discardable","package":"@serenity-js/core"}],"permalink":"/api/core/class/ScheduleWork","previousId":1834,"nextId":1589},{"id":1589,"name":"Wait","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`Wait`"},{"kind":"text","text":" is a synchronisation statement that instructs the [actor](/api/core/class/Actor/)\\nto wait before proceeding with their next [activity](/api/core/class/Activity/),\\neither for a set [duration](/api/core/class/Duration/), or until a given [expectation](/api/core/class/Expectation/) is met.\\n\\nYou can configure the timeout of the interaction to ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until):\\n- globally, using ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)\\n- locally, on a per-interaction basis using ["},{"kind":"code","text":"`Wait.upTo`"},{"kind":"text","text":"](/api/core/class/Wait/#upTo)\\n\\n:::tip Portable waiting\\nSerenity/JS implements "},{"kind":"code","text":"`Wait`"},{"kind":"text","text":" from scratch, so that the behaviour is consistent no matter the integration tool you use (Playwright, WebdriverIO, Selenium, etc.)\\nor the type of testing you do (Web, REST API, component testing, etc.)\\n:::\\n\\n## Wait with Web-based tests\\n\\n### Example widget\\n\\n"},{"kind":"code","text":"```html\\n\x3c!--\\n    After about 1 second, the text will change from \'Loading...\' to \'Ready!\'\\n--\x3e\\n<h1 id=\\"status\\">Loading...</h1>\\n<script>\\n    (function () {\\n        setTimeout(function () {\\n            document.getElementById(\'status\').textContent = \'Ready!\'\\n        }, 1000);\\n    })();\\n<\/script>\\n```"},{"kind":"text","text":"\\n\\n### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement, Text } from \'@serenity-js/web\'\\n\\nclass App {\\n  static status = () =>\\n     Text.of(PageElement.located(By.id(\'status\'))\\n         .describedAs(\'status widget\'))\\n }\\n```"},{"kind":"text","text":"\\n\\n### Waiting for a set duration\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Duration, Wait } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\n\\nawait actorCalled(\'In\xeas\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n      Wait.for(Duration.ofMilliseconds(1_500)),\\n      Ensure.that(App.status(), equals(\'Ready!\')),\\n  );\\n```"},{"kind":"text","text":"\\n\\n**Please note** that while the above implementation works,\\nthis approach is inefficient because at best\\nthe actor might wait too long and at worst the test\\nmight become \\"flaky\\" if any external interference\\n(like network glitches, animations taking a bit too long etc.)\\nmakes the actor wait not long enough.\\n\\n### Waiting until a condition is met\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Wait } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\n\\nawait actorCalled(\'Wendy\')\\n    .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n    .attemptsTo(\\n        Wait.until(App.status(), equals(\'Ready!\')),\\n        // app is ready, proceed with the scenario\\n    );\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":" makes the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nkeep asking the ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/),\\nin this case "},{"kind":"code","text":"`Text.of(App.status)`"},{"kind":"text","text":", until the answer meets\\nthe expectation, or a timeout expires (default: 5s).\\n\\n**Please note** that both Ensure and Wait can be used with\\nthe same expectations, like "},{"kind":"code","text":"`equals`"},{"kind":"text","text":" or "},{"kind":"code","text":"`includes`"},{"kind":"text","text":".\\n\\n### Changing the default timeout\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Duration, Wait } from \'@serenity-js/core\';\\n import { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\';\\n import { equals } from \'@serenity-js/assertions\';\\n import { Browser, chromium } from \'playwright\';\\n\\n const browser: Browser = await chromium.launch({ headless: true });\\n\\n await actorCalled(\'Polly\')\\n     .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n     .attemptsTo(\\n         Wait.upTo(Duration.ofSeconds(3))\\n             .until(App.status(), equals(\'Ready!\')),\\n         // app is ready, proceed with the scenario\\n     );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)\\n- ["},{"kind":"code","text":"`Duration`"},{"kind":"text","text":"](/api/core/class/Duration/)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)"}]},"children":[{"id":1590,"name":"minimumTimeout","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum timeout that can be used with ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until),\\ndefaults to 250 milliseconds,"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":141,"character":20}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1591,"name":"defaultPollingInterval","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The amount of time ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until) should wait between condition checks,\\ndefaults to 500ms.\\n\\nUse ["},{"kind":"code","text":"`WaitUntil.pollingEvery`"},{"kind":"text","text":"](/api/core/class/WaitUntil/#pollingEvery) to override it for a given interaction."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":151,"character":20}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1592,"name":"minimumPollingInterval","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum polling interval of 50ms between condition checks, used with ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":156,"character":20}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"},"defaultValue":"..."},{"id":1593,"name":"for","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":165,"character":11}],"signatures":[{"id":1594,"name":"for","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nconfigured to wait for a set duration."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":165,"character":11}],"parameters":[{"id":1595,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A set duration the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) should wait for before proceeding."}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":1596,"name":"upTo","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":11}],"signatures":[{"id":1597,"name":"upTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nconfigured to wait until the answer to the question "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" meets the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":",\\nor the "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":" expires."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":11}],"parameters":[{"id":1598,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Custom timeout to override ["},{"kind":"code","text":"`SerenityConfig.interactionTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#interactionTimeout)"}]},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":1599,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1600,"name":"until","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":38}],"type":{"type":"reflection","declaration":{"id":1601,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":45}],"signatures":[{"id":1602,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":45}],"typeParameter":[{"id":1603,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1604,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":1603,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1605,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":1603,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1613,"typeArguments":[{"type":"reference","target":1603,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WaitUntil","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[1600]}],"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":177,"character":36}]}}}]},{"id":1606,"name":"until","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":197,"character":11}],"signatures":[{"id":1607,"name":"until","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) configured to\\npoll every ["},{"kind":"code","text":"`Wait.defaultPollingInterval`"},{"kind":"text","text":"](/api/core/class/Wait/#defaultPollingInterval) for the result of the provided\\nquestion ("},{"kind":"code","text":"`actual`"},{"kind":"text","text":") until it meets the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":",\\nor the timeout expires."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":197,"character":11}],"typeParameter":[{"id":1608,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1609,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) that the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) will keep answering\\n until the answer meets the ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) provided, or the timeout expires."}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":1608,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1610,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) to be met before proceeding"}]},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":1608,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1613,"typeArguments":[{"type":"reference","target":1608,"name":"Actual","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"WaitUntil","package":"@serenity-js/core"}}]},{"id":1611,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1612,"name":"new Wait","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1589,"name":"Wait","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1611]},{"title":"Properties","children":[1590,1591,1592]},{"title":"Methods","children":[1593,1596,1606]}],"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":135,"character":13}],"permalink":"/api/core/class/Wait","previousId":1568,"nextId":1613},{"id":1613,"name":"WaitUntil","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Synchronisation statement that instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to wait before proceeding until a given ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) is met.\\n\\n:::tip\\nTo instantiate the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`WaitUntil`"},{"kind":"text","text":"](/api/core/class/WaitUntil/),\\nuse the factory method ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until).\\n:::\\n\\n## Learn more\\n* ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)"}]},"children":[{"id":1642,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"signatures":[{"id":1643,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":38,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":773,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":772,"name":"Interaction.instantiationLocation"}},{"id":1644,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"signatures":[{"id":1645,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":10}],"parameters":[{"id":1646,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1647,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1648,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":66}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1648]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":24,"character":64}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":775,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":774,"name":"Interaction.describedBy"}},{"id":1654,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"signatures":[{"id":1655,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/src/screenplay/questions/Describable.ts","line":41,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":785,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":784,"name":"Interaction.toString"}},{"id":1624,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":231,"character":4}],"signatures":[{"id":1625,"name":"new WaitUntil","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":231,"character":4}],"typeParameter":[{"id":1626,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1627,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":1626,"name":"Actual","package":"@serenity-js/core","qualifiedName":"WaitUntil.Actual","refersToTypeParameter":true}],"name":"Answerable","package":"@serenity-js/core"}},{"id":1628,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":1626,"name":"Actual","package":"@serenity-js/core","qualifiedName":"WaitUntil.Actual","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}},{"id":1629,"name":"pollingInterval","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}},{"id":1630,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1613,"typeArguments":[{"type":"reference","target":1626,"name":"Actual","package":"@serenity-js/core","qualifiedName":"WaitUntil.Actual","refersToTypeParameter":true}],"name":"WaitUntil","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":765,"name":"Interaction.constructor"}}],"overwrites":{"type":"reference","target":764,"name":"Interaction.constructor"}},{"id":1635,"name":"pollingEvery","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":256,"character":4}],"signatures":[{"id":1636,"name":"pollingEvery","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configure how frequently the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) should check if the answer meets the expectation.\\n\\nNote that the polling interval defines the delay between subsequent attempts\\nto evaluate the expected value, and doesn\'t include the amount of time\\nit take the actor to evaluate the value itself."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":256,"character":4}],"parameters":[{"id":1637,"name":"interval","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":1638,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":263,"character":10}],"signatures":[{"id":1639,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":263,"character":10}],"parameters":[{"id":1640,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":769,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":768,"name":"Interaction.performAs"}}],"groups":[{"title":"Constructors","children":[1624]},{"title":"Methods","children":[1642,1644,1654,1635,1638]}],"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":230,"character":13}],"typeParameters":[{"id":1656,"name":"Actual","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/core/class/WaitUntil","previousId":1589,"nextId":1657},{"id":1657,"name":"Clock","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`Clock`"},{"kind":"text","text":"](/api/core/class/Clock/) tells the time. This abstraction allows Serenity/JS to have a single place\\nin the framework responsible for telling the time, and one that can be easily mocked for internal testing.\\n\\n"},{"kind":"code","text":"```ts\\nconst now: Timestamp = new Clock().now()\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)\\n- ["},{"kind":"code","text":"`Duration`"},{"kind":"text","text":"](/api/core/class/Duration/)"}]},"children":[{"id":1659,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":4}],"signatures":[{"id":1660,"name":"new Clock","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":4}],"parameters":[{"id":1661,"name":"checkTime","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1662,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":44}],"signatures":[{"id":1663,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":44}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"}}]}},"defaultValue":"..."}],"type":{"type":"reference","target":1657,"name":"Clock","package":"@serenity-js/core"}}]},{"id":1668,"name":"setAhead","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":35,"character":4}],"signatures":[{"id":1669,"name":"setAhead","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets the clock ahead to force early resolution of promises\\nreturned by ["},{"kind":"code","text":"`Clock.waitFor`"},{"kind":"text","text":"](/api/core/class/Clock/#waitFor).\\n\\nUseful for test purposes to avoid unnecessary delays."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":35,"character":4}],"parameters":[{"id":1670,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1671,"name":"tick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":44,"character":10}],"signatures":[{"id":1672,"name":"tick","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that resolves after one tick of the clock.\\n\\nUseful for test purposes to avoid unnecessary delays."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":44,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1673,"name":"now","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":51,"character":4}],"signatures":[{"id":1674,"name":"now","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current time"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":51,"character":4}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1675,"name":"waitFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":60,"character":10}],"signatures":[{"id":1676,"name":"waitFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that will be resolved after the given duration"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":60,"character":10}],"parameters":[{"id":1677,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[1659]},{"title":"Methods","children":[1668,1671,1673,1675]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":20,"character":13}],"permalink":"/api/core/class/Clock","previousId":1613,"nextId":1678},{"id":1678,"name":"DelayedCallback","variant":"declaration","kind":256,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":6,"character":17}],"typeParameters":[{"id":1679,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"signatures":[{"id":1680,"name":"DelayedCallback","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":4}],"parameters":[{"id":1681,"name":"stats","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1682,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1683,"name":"currentTime","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":14}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}},{"id":1684,"name":"i","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":38}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1683,1684]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":12}]}}}],"type":{"type":"union","types":[{"type":"reference","target":1679,"name":"Result","package":"@serenity-js/core","qualifiedName":"DelayedCallback.Result","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1679,"name":"Result","package":"@serenity-js/core","qualifiedName":"DelayedCallback.Result","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}],"permalink":"/api/core/interface/DelayedCallback","previousId":1657,"nextId":1685},{"id":1685,"name":"Duration","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents a duration in milliseconds between two [timestamps](/api/core/class/Timestamp/)."}]},"children":[{"id":1691,"name":"ofMilliseconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":17,"character":11}],"signatures":[{"id":1692,"name":"ofMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":17,"character":30}],"parameters":[{"id":1693,"name":"milliseconds","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1694,"name":"ofSeconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":18,"character":11}],"signatures":[{"id":1695,"name":"ofSeconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":18,"character":30}],"parameters":[{"id":1696,"name":"seconds","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1697,"name":"ofMinutes","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":19,"character":11}],"signatures":[{"id":1698,"name":"ofMinutes","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":19,"character":30}],"parameters":[{"id":1699,"name":"minutes","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1700,"name":"ofHours","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":20,"character":11}],"signatures":[{"id":1701,"name":"ofHours","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":20,"character":30}],"parameters":[{"id":1702,"name":"hours","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1703,"name":"ofDays","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":21,"character":11}],"signatures":[{"id":1704,"name":"ofDays","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":21,"character":30}],"parameters":[{"id":1705,"name":"days","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1706,"name":"ofYears","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":22,"character":11}],"signatures":[{"id":1707,"name":"ofYears","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":22,"character":30}],"parameters":[{"id":1708,"name":"years","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1709,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":11}],"signatures":[{"id":1710,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":11}],"parameters":[{"id":1711,"name":"__namedParameters","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1712,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1713,"name":"milliseconds","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":40}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1713]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":38}]}}}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1714,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":28,"character":4}],"signatures":[{"id":1715,"name":"new Duration","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":28,"character":4}],"parameters":[{"id":1716,"name":"milliseconds","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1718,"name":"isLessThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":33,"character":4}],"signatures":[{"id":1719,"name":"isLessThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":33,"character":4}],"parameters":[{"id":1720,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1721,"name":"isLessThanOrEqualTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":37,"character":4}],"signatures":[{"id":1722,"name":"isLessThanOrEqualTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":37,"character":4}],"parameters":[{"id":1723,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1724,"name":"isGreaterThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":41,"character":4}],"signatures":[{"id":1725,"name":"isGreaterThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":41,"character":4}],"parameters":[{"id":1726,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1727,"name":"isGreaterThanOrEqualTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":45,"character":4}],"signatures":[{"id":1728,"name":"isGreaterThanOrEqualTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":45,"character":4}],"parameters":[{"id":1729,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1730,"name":"plus","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":49,"character":4}],"signatures":[{"id":1731,"name":"plus","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":49,"character":4}],"parameters":[{"id":1732,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1733,"name":"inMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":53,"character":4}],"signatures":[{"id":1734,"name":"inMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":53,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":1735,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":57,"character":4}],"signatures":[{"id":1736,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":57,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1737,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":75,"character":4}],"signatures":[{"id":1738,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":75,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONObject"},"name":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1739,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1740,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1741,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Constructors","children":[1714]},{"title":"Methods","children":[1691,1694,1697,1700,1703,1706,1709,1718,1721,1724,1727,1730,1733,1735,1737,1739]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":9,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Duration","previousId":1678,"nextId":1742},{"id":1742,"name":"RepeatUntilLimits","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":1743,"name":"exitCondition","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":7,"character":4}],"type":{"type":"reflection","declaration":{"id":1744,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":7,"character":20}],"signatures":[{"id":1745,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":7,"character":20}],"parameters":[{"id":1746,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1758,"name":"Result","package":"@serenity-js/core","qualifiedName":"RepeatUntilLimits.Result","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":1747,"name":"maxInvocations","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":8,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":1748,"name":"delayBetweenInvocations","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":9,"character":4}],"type":{"type":"reflection","declaration":{"id":1749,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":9,"character":30}],"signatures":[{"id":1750,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":9,"character":30}],"parameters":[{"id":1751,"name":"i","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}]}}},{"id":1752,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":10,"character":4}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}},{"id":1753,"name":"errorHandler","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":11,"character":4}],"type":{"type":"reflection","declaration":{"id":1754,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":11,"character":19}],"signatures":[{"id":1755,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":11,"character":19}],"parameters":[{"id":1756,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}},{"id":1757,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":1758,"name":"Result","package":"@serenity-js/core","qualifiedName":"RepeatUntilLimits.Result","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[1743,1747,1748,1752,1753]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":6,"character":17}],"typeParameters":[{"id":1758,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/core/interface/RepeatUntilLimits","previousId":1685,"nextId":1759},{"id":1759,"name":"Scheduler","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":1760,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":20,"character":4}],"signatures":[{"id":1761,"name":"new Scheduler","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":20,"character":4}],"parameters":[{"id":1762,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1657,"name":"Clock","package":"@serenity-js/core"}},{"id":1763,"name":"interactionTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The maximum amount of time to give to a callback to complete before throwing an error"}]},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1759,"name":"Scheduler","package":"@serenity-js/core"}}]},{"id":1767,"name":"after","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":32,"character":4}],"signatures":[{"id":1768,"name":"after","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a callback function to be invoked after a delay"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":32,"character":4}],"typeParameter":[{"id":1769,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1770,"name":"delay","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}},{"id":1771,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1678,"typeArguments":[{"type":"reference","target":1769,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"DelayedCallback","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1769,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1772,"name":"waitFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":48,"character":4}],"signatures":[{"id":1773,"name":"waitFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" to be resolved after a "},{"kind":"code","text":"`delay`"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":48,"character":4}],"parameters":[{"id":1774,"name":"delay","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1775,"name":"repeatUntil","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":67,"character":10}],"signatures":[{"id":1776,"name":"repeatUntil","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a callback function to be repeated, according to configured limits."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":67,"character":10}],"typeParameter":[{"id":1777,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1778,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1678,"typeArguments":[{"type":"reference","target":1777,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"DelayedCallback","package":"@serenity-js/core"}},{"id":1779,"name":"limits","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1742,"typeArguments":[{"type":"reference","target":1777,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"RepeatUntilLimits","package":"@serenity-js/core"},"defaultValue":"{}"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1777,"name":"Result","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":1780,"name":"stop","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":96,"character":4}],"signatures":[{"id":1781,"name":"stop","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":96,"character":4}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","children":[1760]},{"title":"Methods","children":[1767,1772,1775,1780]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":11,"character":13}],"permalink":"/api/core/class/Scheduler","previousId":1742,"nextId":1782},{"id":1782,"name":"Timestamp","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents a point in time.\\n\\n"},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":" makes it easier for you to work with information related to time, like [Serenity/JS domain events](/api/core-events/class/DomainEvent/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Duration`"},{"kind":"text","text":"](/api/core/class/Duration/)\\n- [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)"}]},"children":[{"id":1783,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":18,"character":11}],"signatures":[{"id":1784,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":18,"character":11}],"parameters":[{"id":1785,"name":"v","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1786,"name":"fromTimestampInSeconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":22,"character":11}],"signatures":[{"id":1787,"name":"fromTimestampInSeconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":22,"character":11}],"parameters":[{"id":1788,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1789,"name":"fromTimestampInMilliseconds","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":26,"character":11}],"signatures":[{"id":1790,"name":"fromTimestampInMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":26,"character":11}],"parameters":[{"id":1791,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1792,"name":"now","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":30,"character":11}],"signatures":[{"id":1793,"name":"now","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":30,"character":11}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1794,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":34,"character":4}],"signatures":[{"id":1795,"name":"new Timestamp","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":34,"character":4}],"parameters":[{"id":1796,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},"defaultValue":"..."}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":1797,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":34,"character":32}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Date"},"name":"Date","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date"},"defaultValue":"..."},{"id":1798,"name":"diff","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":39,"character":4}],"signatures":[{"id":1799,"name":"diff","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":39,"character":4}],"parameters":[{"id":1800,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}]},{"id":1801,"name":"plus","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":44,"character":4}],"signatures":[{"id":1802,"name":"plus","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":44,"character":4}],"parameters":[{"id":1803,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1804,"name":"less","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":49,"character":4}],"signatures":[{"id":1805,"name":"less","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":49,"character":4}],"parameters":[{"id":1806,"name":"duration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}]},{"id":1807,"name":"isBefore","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":54,"character":4}],"signatures":[{"id":1808,"name":"isBefore","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":54,"character":4}],"parameters":[{"id":1809,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1810,"name":"isBeforeOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":59,"character":4}],"signatures":[{"id":1811,"name":"isBeforeOrEqual","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":59,"character":4}],"parameters":[{"id":1812,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1813,"name":"isAfter","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":64,"character":4}],"signatures":[{"id":1814,"name":"isAfter","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":64,"character":4}],"parameters":[{"id":1815,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1816,"name":"isAfterOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":69,"character":4}],"signatures":[{"id":1817,"name":"isAfterOrEqual","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":69,"character":4}],"parameters":[{"id":1818,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1819,"name":"toMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":74,"character":4}],"signatures":[{"id":1820,"name":"toMilliseconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":74,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":1821,"name":"toSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":78,"character":4}],"signatures":[{"id":1822,"name":"toSeconds","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"number"}}]},{"id":1823,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":82,"character":4}],"signatures":[{"id":1824,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":82,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toJSON"}},{"id":1825,"name":"toISOString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":86,"character":4}],"signatures":[{"id":1826,"name":"toISOString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":86,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":1827,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":90,"character":4}],"signatures":[{"id":1828,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":90,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":1829,"name":"[custom]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":94,"character":4}],"signatures":[{"id":1830,"name":"[custom]","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":94,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":1831,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":1832,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":1833,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"groups":[{"title":"Constructors","children":[1794]},{"title":"Properties","children":[1797]},{"title":"Methods","children":[1783,1786,1789,1792,1798,1801,1804,1807,1810,1813,1816,1819,1821,1823,1825,1827,1829,1831]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Timestamp","previousId":1759},{"id":1888,"name":"Cast","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS uses the concept of a _**cast of actors**_ to centralise the process of configuring the [actors](/api/core/class/Actor/) and assigning their [abilities](/api/core/class/Ability/).\\n\\nWhen you invoke ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/) for the first time in a test scenario,\\nSerenity/JS [instantiates a new actor](/api/core/class/Actor/)\\nand passes it through the ["},{"kind":"code","text":"`Cast.prepare`"},{"kind":"text","text":"](/api/core/class/Cast/#prepare) method.\\nSpecifying a **custom cast** gives you an opportunity to configure the actor with the abilities\\nthey need before it\'s returned to the caller,\\nor configure the actors differently **depending on their name**.\\nIt also helps you to avoid having to configure abilities individually in every test scenario.\\n\\n:::tip Remember\\nA **cast** is responsible for assigning **abilities** to **actors** in a central location.\\n:::\\n\\n## Configuring a cast of actors for the entire test suite\\n\\nWhen working with relatively **simple scenarios** where all the actors should always receive the same set of abilities,\\nyou can ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) Serenity/JS to use a generic ["},{"kind":"code","text":"`Cast.where`"},{"kind":"text","text":"](/api/core/class/Cast/#where):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Cast, configure } from \'@serenity-js/core\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\nconfigure({\\n  actors: Cast.where(actor => actor.whoCan(\\n    CallAnApi.at(\'http://api.example.org\'),\\n    // other abilities\\n  ))\\n})\\n```"},{"kind":"text","text":"\\n\\nIf you\'re using Serenity/JS with one of the [supported test runners](/handbook/test-runners/),\\nyou might prefer to use your test runner\'s native configuration mechanism\\ninstead of invoking ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) explicitly.\\n\\n:::tip configure vs engage\\nCalling ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/) resets the entire Serenity/JS configuration\\nand should be done exactly once in your entire test suite.\\nIf you want to retain the configuration but reset the cast, use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) instead.\\n:::\\n\\nLearn more about configuring Serenity/JS with:\\n- [Cucumber.js](/handbook/test-runners/cucumber)\\n- [Jasmine](/handbook/test-runners/jasmine)\\n- [Mocha](/handbook/test-runners/mocha)\\n- [Playwright Test](/handbook/test-runners/playwright-test)\\n- [Protractor](/handbook/test-runners/protractor)\\n- [WebdriverIO](/handbook/test-runners/webdriverio)\\n\\n## Engaging a cast of actors for the specific scenario\\n\\nIf you want to retain Serenity/JS configuration, but set a different [cast](/api/core/class/Cast/)\\nfor the given test scenario you should use ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/) instead of ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/).\\n\\nThis approach is useful for example when your entire test suite is dedicated to interacting with the system\\nunder test via its REST APIs, and you have a handful of scenarios that need a web browser.\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, beforeEach } from \'mocha\'\\nimport { engage, Cast } from \'@serenity-js/core\';\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Browser, chromium } from \'playwright\'\\n\\ndescribe(\'My UI feature\', () => {\\n  beforeEach(async () => {\\n    const browser = await chromium.launch({ headless: true })\\n    engage(Cast.where(actor => actor.whoCan(BrowseTheWebWithPlaywright.using(browser))))\\n  })\\n\\n  // test scenarios\\n})\\n```"},{"kind":"text","text":"\\n\\n## Writing custom casts for complex scenarios\\n\\nIn **complex scenarios** that involve multiple **actors with different abilities**,\\nyou should create a custom implementation of the [cast](/api/core/class/Cast/).\\n\\nExamples of such scenarios include those where actors use separate browser instances, interact with different REST APIs,\\nor start with different data in their [notepads](/api/core/class/Notepad/).\\n\\n### Defining a custom cast of actors interacting with a Web UI\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { engage, Actor, Cast } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright, PlaywrightOptions } from \'@serenity-js/playwright\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nexport class UIActors implements Cast {\\n  constructor(\\n    private readonly browser: Browser,\\n    private readonly options?: PlaywrightOptions,\\n  ) {\\n  }\\n\\n  prepare(actor: Actor): Actor {\\n    return actor.whoCan(\\n      BrowseTheWebWithPlaywright.using(this.browser, this.options),\\n    )\\n  }\\n}\\n\\nbeforeEach(async () => {\\n  const browser = await chromium.launch({ headless: true })\\n  engage(new UIActors(browser));\\n});\\n```"},{"kind":"text","text":"\\n\\n### Preparing actors differently based on their name\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { actorCalled, engage, Cast } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nclass Actors implements Cast {\\n  constructor(\\n    private readonly browser: Browser,\\n    private readonly options: PlaywrightOptions,\\n  ) {\\n  }\\n\\n  prepare(actor: Actor) {\\n    switch (actor.name) {\\n      case \'James\':\\n        return actor.whoCan(BrowseTheWebWithPlaywright.using(this.browser, this.options));\\n      default:\\n        return actor.whoCan(CallAnApi.at(this.options.baseURL));\\n    }\\n  }\\n}\\n\\nbeforeEach(async () => {\\n  const browser = await chromium.launch({ headless: true })\\n  engage(new Actors(browser, { baseURL: \'https://example.org\' }));\\n});\\n\\nactorCalled(\'James\') // returns an actor using a browser\\nactorCalled(\'Alice\') // returns an actor interacting with an API\\n```"}]},"children":[{"id":1889,"name":"where","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":158,"character":11}],"signatures":[{"id":1890,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a generic "},{"kind":"code","text":"`Cast`"},{"kind":"text","text":" implementation, where new actors receive the abilities\\nconfigured by the "},{"kind":"code","text":"`prepareFunction`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":158,"character":11}],"parameters":[{"id":1891,"name":"prepareFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1892,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":158,"character":34}],"signatures":[{"id":1893,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":158,"character":34}],"parameters":[{"id":1894,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}}],"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}}]}}}],"type":{"type":"reference","target":1888,"name":"Cast","package":"@serenity-js/core"}}]},{"id":1895,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":1896,"name":"new Cast","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":1888,"name":"Cast","package":"@serenity-js/core"}}]},{"id":1897,"name":"prepare","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":174,"character":13}],"signatures":[{"id":1898,"name":"prepare","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) instantiated when ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor) is invoked."}]},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":174,"character":13}],"parameters":[{"id":1899,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)"}]},"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}}],"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[1895]},{"title":"Methods","children":[1889,1897]}],"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":150,"character":22}],"permalink":"/api/core/class/Cast","previousId":475,"nextId":1962},{"id":1962,"name":"ListensToDomainEvents","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) that can listen and react to [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"children":[{"id":1963,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"signatures":[{"id":1964,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\nthat this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) is assigned to."}]},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"parameters":[{"id":1965,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[1963]}],"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":15,"character":17}],"extendedBy":[{"type":"reference","target":2119,"name":"StageCrewMember"}],"permalink":"/api/core/interface/ListensToDomainEvents","previousId":1888,"nextId":2044},{"id":2044,"name":"Stage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stage is the place where [actors](/api/core/class/Actor/) perform.\\n\\nIn more technical terms, the Stage is the main event bus propagating [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nto [actors](/api/core/class/Actor/) it instantiates and [stage crew members](/api/core/interface/StageCrewMember/) that have been registered with it.\\n\\nIt is unlikely that you\'ll ever need to interact with the "},{"kind":"code","text":"`Stage`"},{"kind":"text","text":" directly in your tests. Instead, you\'ll use functions like\\n["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/) and ["},{"kind":"code","text":"`actorInTheSpotlight`"},{"kind":"text","text":"](/api/core/function/actorInTheSpotlight/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)\\n- ["},{"kind":"code","text":"`engage`"},{"kind":"text","text":"](/api/core/function/engage/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},"children":[{"id":2046,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":74,"character":4}],"signatures":[{"id":2047,"name":"new Stage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":74,"character":4}],"parameters":[{"id":2048,"name":"cast","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1888,"name":"Cast","package":"@serenity-js/core"}},{"id":2049,"name":"manager","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2135,"name":"StageManager","package":"@serenity-js/core"}},{"id":2050,"name":"errors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":126,"name":"ErrorFactory","package":"@serenity-js/core"}},{"id":2051,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1657,"name":"Clock","package":"@serenity-js/core"}},{"id":2052,"name":"interactionTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}]},{"id":2067,"name":"theActorCalled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":93,"character":4}],"signatures":[{"id":2068,"name":"theActorCalled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An alias for ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":93,"character":4}],"parameters":[{"id":2069,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}}]},{"id":2070,"name":"actor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":104,"character":4}],"signatures":[{"id":2071,"name":"actor","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) or fetches an existing one\\nidentified by their name if they\'ve already been instantiated."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":104,"character":4}],"parameters":[{"id":2072,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Case-sensitive name of the Actor, e.g. "},{"kind":"code","text":"`Alice`"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}}]},{"id":2073,"name":"theActorInTheSpotlight","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":141,"character":4}],"signatures":[{"id":2074,"name":"theActorInTheSpotlight","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the last ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) instantiated via ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor).\\nUseful when you don\'t can\'t or choose not to reference the actor by their name."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If no ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) has been activated yet"}]}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":141,"character":4}],"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}}]},{"id":2075,"name":"theShowHasStarted","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":152,"character":4}],"signatures":[{"id":2076,"name":"theShowHasStarted","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if there is an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the spotlight, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":152,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":2077,"name":"engage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":162,"character":4}],"signatures":[{"id":2078,"name":"engage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the Stage to prepare [actors](/api/core/class/Actor/)\\ninstantiated via ["},{"kind":"code","text":"`Stage.actor`"},{"kind":"text","text":"](/api/core/class/Stage/#actor) using the provided [cast](/api/core/class/Cast/)."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":162,"character":4}],"parameters":[{"id":2079,"name":"actors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1888,"name":"Cast","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2080,"name":"assign","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":174,"character":4}],"signatures":[{"id":2081,"name":"assign","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns listeners to be notified of [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nemitted via ["},{"kind":"code","text":"`Stage.announce`"},{"kind":"text","text":"](/api/core/class/Stage/#announce).s"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":174,"character":4}],"parameters":[{"id":2082,"name":"listeners","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":1962,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2083,"name":"announce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":184,"character":4}],"signatures":[{"id":2084,"name":"announce","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Notifies all the assigned listeners of the events,\\nemitting them one by one."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":184,"character":4}],"parameters":[{"id":2085,"name":"events","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2425,"name":"EmitsDomainEvents.announce"}}],"implementationOf":{"type":"reference","target":2424,"name":"EmitsDomainEvents.announce"}},{"id":2089,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":212,"character":4}],"signatures":[{"id":2090,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current time. This method should be used whenever\\n["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects are instantiated by you programmatically."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":212,"character":4}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2430,"name":"EmitsDomainEvents.currentTime"}}],"implementationOf":{"type":"reference","target":2429,"name":"EmitsDomainEvents.currentTime"}},{"id":2091,"name":"assignNewSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":226,"character":4}],"signatures":[{"id":2092,"name":"assignNewSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates and remembers a "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":"\\nfor the current scene.\\n\\nThis method should be used in custom test runner adapters\\nwhen instantiating a [SceneStarts](/api/core-events/class/SceneStarts/) event.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.currentSceneId`"},{"kind":"text","text":"](/api/core/class/Stage/#currentSceneId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":226,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2093,"name":"currentSceneId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":239,"character":4}],"signatures":[{"id":2094,"name":"currentSceneId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":" for the current scene.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.assignNewSceneId`"},{"kind":"text","text":"](/api/core/class/Stage/#assignNewSceneId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":239,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2420,"name":"EmitsDomainEvents.currentSceneId"}}],"implementationOf":{"type":"reference","target":2419,"name":"EmitsDomainEvents.currentSceneId"}},{"id":2095,"name":"assignNewActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":253,"character":4}],"signatures":[{"id":2096,"name":"assignNewActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Generates and remembers a "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":"\\nfor the current ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\nThis method should be used in custom test runner adapters\\nwhen instantiating the [ActivityStarts](/api/core-events/class/ActivityStarts/) event.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.currentActivityId`"},{"kind":"text","text":"](/api/core/class/Stage/#currentActivityId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":253,"character":4}],"parameters":[{"id":2097,"name":"activityDetails","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ActivityDetails","package":"@serenity-js/core"}}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2422,"name":"EmitsDomainEvents.assignNewActivityId"}}],"implementationOf":{"type":"reference","target":2421,"name":"EmitsDomainEvents.assignNewActivityId"}},{"id":2098,"name":"currentActivityId","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":268,"character":4}],"signatures":[{"id":2099,"name":"currentActivityId","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"code","text":"`CorrelationId`"},{"kind":"text","text":" for the current ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Stage.assignNewSceneId`"},{"kind":"text","text":"](/api/core/class/Stage/#assignNewSceneId)"}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":268,"character":4}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}]},{"id":2100,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":284,"character":4}],"signatures":[{"id":2101,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that will be resolved when any asynchronous\\npost-processing activities performed by Serenity/JS are completed.\\n\\nInvoked in Serenity/JS test runner adapters to inform the test runner when\\nthe scenario has finished and when it\'s safe for the test runner to proceed\\nwith the next test, or finish execution."}]},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":284,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":2428,"name":"EmitsDomainEvents.waitForNextCue"}}],"implementationOf":{"type":"reference","target":2427,"name":"EmitsDomainEvents.waitForNextCue"}},{"id":2102,"name":"createError","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":288,"character":4}],"signatures":[{"id":2103,"name":"createError","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":288,"character":4}],"typeParameter":[{"id":2104,"name":"RE","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}}],"parameters":[{"id":2105,"name":"errorType","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2106,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":288,"character":52}],"signatures":[{"id":2107,"name":"new errorType","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":288,"character":52}],"parameters":[{"id":2108,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":2104,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":2109,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":148,"name":"ErrorOptions","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2104,"name":"RE","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[2046]},{"title":"Methods","children":[2067,2070,2073,2075,2077,2080,2083,2089,2091,2093,2095,2098,2100,2102]}],"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":40,"character":13}],"implementedTypes":[{"type":"reference","target":2418,"name":"EmitsDomainEvents","package":"@serenity-js/core"}],"permalink":"/api/core/class/Stage","previousId":1962,"nextId":2119},{"id":2119,"name":"StageCrewMember","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"You can think of the ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) as an in-memory microservice that reacts to [Serenity/JS domain events](/api/core-events/class/DomainEvent/),\\npublished by the ["},{"kind":"code","text":"`StageManager`"},{"kind":"text","text":"](/api/core/class/StageManager/), and originally emitted by [actors](/api/core/class/Actor/) performing activities and Serenity/JS\\ntest runner adapters notifying the framework about test scenario-specific events like [SceneStarts](/api/core-events/class/SceneStarts/) or [SceneFinishes](/api/core-events/class/SceneFinishes/).\\n\\nEvery [stage crew member](/api/core/interface/StageCrewMember/) receives a reference to the [stage](/api/core/class/Stage/),\\nand therefore the [stage manager](/api/core/class/StageManager/), which enables them to emit [domain events](/api/core-events/class/DomainEvent/) back.\\n\\nThis interface is useful when you\'re interested in implementing custom Serenity/JS reporters or supporting services.\\n\\n## Implementing a custom StageCrewMember\\n\\n"},{"kind":"code","text":"```ts\\nimport { Stage, StageCrewMember } from \'@serenity-js/core\'\\nimport * as events from \'@serenity-js/core/lib/events\'\\nimport { ArbitraryTag } from \'@serenity-js/core/lib/model\'\\n\\nexport class TestRunnerTagger implements StageCrewMember {\\n\\n  static using(tagName: string) {\\n    return new TestRunnerTagger(tagName);\\n  }\\n\\n  protected constructor(\\n    private readonly tagName: string,\\n    private stage?: Stage,\\n  ) {\\n  }\\n\\n  assignedTo(stage: Stage): StageCrewMember {\\n    this.stage = stage;\\n    return this;\\n  }\\n\\n  notifyOf(event: events.DomainEvent): void {\\n    if (event instanceof events.TestRunnerDetected) {\\n      this.stage.announce(\\n        new events.SceneTagged(\\n          this.stage.currentSceneId(),\\n          new ArbitraryTag(this.tagName),\\n          this.stage.currentTime()\\n        )\\n      )\\n    }\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using the custom StageCrewMember\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    TestRunnerTagger.using(`Node:${ process.version }`),\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)\\n- ["},{"kind":"code","text":"`ListensToDomainEvents`"},{"kind":"text","text":"](/api/core/interface/ListensToDomainEvents/)\\n- ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/)"}]},"children":[{"id":2123,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"signatures":[{"id":2124,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\nthat this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) is assigned to."}]},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4}],"parameters":[{"id":2125,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":1964,"name":"ListensToDomainEvents.notifyOf"}}],"inheritedFrom":{"type":"reference","target":1963,"name":"ListensToDomainEvents.notifyOf"}},{"id":2120,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMember.ts","line":78,"character":4}],"signatures":[{"id":2121,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) to this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},"sources":[{"fileName":"packages/core/src/stage/StageCrewMember.ts","line":78,"character":4}],"parameters":[{"id":2122,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"}}]}],"groups":[{"title":"Methods","children":[2123,2120]}],"sources":[{"fileName":"packages/core/src/stage/StageCrewMember.ts","line":73,"character":17}],"extendedTypes":[{"type":"reference","target":1962,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"implementedBy":[{"type":"reference","target":1900,"name":"ArtifactArchiver"},{"type":"reference","target":1943,"name":"StreamReporter"}],"permalink":"/api/core/interface/StageCrewMember","previousId":2044,"nextId":2126},{"id":2126,"name":"StageCrewMemberBuilder","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Use a ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/) to configure complex ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) objects.\\n\\nUseful when you\'re interested in implementing custom reporters with multiple configuration options.\\nSee ["},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":"](/api/console-reporter/class/ConsoleReporter/) for an example.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`StageCrewMemberBuilderDependencies`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilderDependencies/)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"children":[{"id":2127,"name":"build","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilder.ts","line":23,"character":4}],"signatures":[{"id":2128,"name":"build","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/), giving it access to shared dependencies\\nsuch as ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) or ["},{"kind":"code","text":"`OutputStream`"},{"kind":"text","text":"](/api/core-adapter/interface/OutputStream/)"}]},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilder.ts","line":23,"character":4}],"parameters":[{"id":2129,"name":"dependencies","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2131,"name":"StageCrewMemberBuilderDependencies","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2130,"name":"T","package":"@serenity-js/core","qualifiedName":"StageCrewMemberBuilder.T","refersToTypeParameter":true}}]}],"groups":[{"title":"Methods","children":[2127]}],"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilder.ts","line":17,"character":17}],"typeParameters":[{"id":2130,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":1962,"name":"ListensToDomainEvents","package":"@serenity-js/core"},"default":{"type":"reference","target":1962,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}],"permalink":"/api/core/interface/StageCrewMemberBuilder","previousId":2119,"nextId":2131},{"id":2131,"name":"StageCrewMemberBuilderDependencies","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Dependencies injected by ["},{"kind":"code","text":"`Serenity.configure`"},{"kind":"text","text":"](/api/core/class/Serenity/#configure) into ["},{"kind":"code","text":"`StageCrewMemberBuilder.build`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/#build)\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMemberBuilder/)"}]},"children":[{"id":2132,"name":"stage","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":14,"character":4}],"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}},{"id":2133,"name":"fileSystem","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":15,"character":4}],"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}},{"id":2134,"name":"outputStream","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":16,"character":4}],"type":{"type":"reference","target":2159,"name":"OutputStream","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2132,2133,2134]}],"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":13,"character":17}],"permalink":"/api/core/interface/StageCrewMemberBuilderDependencies","previousId":2126,"nextId":2135},{"id":2135,"name":"StageManager","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2136,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":14,"character":4}],"signatures":[{"id":2137,"name":"new StageManager","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":14,"character":4}],"parameters":[{"id":2138,"name":"cueTimeout","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}},{"id":2139,"name":"clock","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1657,"name":"Clock","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2135,"name":"StageManager","package":"@serenity-js/core"}}]},{"id":2144,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":18,"character":4}],"signatures":[{"id":2145,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":18,"character":4}],"parameters":[{"id":2146,"name":"subscribers","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":1962,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2147,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":22,"character":4}],"signatures":[{"id":2148,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":22,"character":4}],"parameters":[{"id":2149,"name":"subscriber","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1962,"name":"ListensToDomainEvents","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2150,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":26,"character":4}],"signatures":[{"id":2151,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":26,"character":4}],"parameters":[{"id":2152,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2153,"name":"waitForAsyncOperationsToComplete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":32,"character":4}],"signatures":[{"id":2154,"name":"waitForAsyncOperationsToComplete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":32,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2155,"name":"waitForNextCue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":52,"character":10}],"signatures":[{"id":2156,"name":"waitForNextCue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":52,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":2157,"name":"currentTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":69,"character":4}],"signatures":[{"id":2158,"name":"currentTime","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":69,"character":4}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":1836,"name":"TellsTime.currentTime"}}],"implementationOf":{"type":"reference","target":1835,"name":"TellsTime.currentTime"}}],"groups":[{"title":"Constructors","children":[2136]},{"title":"Methods","children":[2144,2147,2150,2153,2155,2157]}],"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":10,"character":13}],"implementedTypes":[{"type":"reference","target":1834,"name":"TellsTime","package":"@serenity-js/core"}],"permalink":"/api/core/class/StageManager","previousId":2131,"nextId":1900},{"id":1900,"name":"ArtifactArchiver","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stores any artifacts emitted via ["},{"kind":"code","text":"`ArtifactGenerated`"},{"kind":"text","text":"](/api/core-events/class/ArtifactGenerated/) events on the file system.\\n\\n## Registering Artifact Archiver programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { ArtifactArchiver, configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    ArtifactArchiver.storingArtifactsAt(`/target/site/serenity`),\\n  ]\\n  // other Serenity/JS config\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Artifact Archiver with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n  testDir: \'./spec\',\\n\\n  reporter: [\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        \'@serenity-js/serenity-bdd\',\\n        [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n      ]\\n      // other Serenity/JS config\\n    }]\\n  ],\\n  // other Playwright Test config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Artifact Archiver with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n     \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ]\\n    // other Serenity/JS config\\n  },\\n  // other WebdriverIO config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Artifact Archiver with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ],\\n    // other Serenity/JS config\\n  },\\n  // other Protractor config\\n}\\n```"}]},"children":[{"id":1901,"name":"storingArtifactsAt","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":110,"character":11}],"signatures":[{"id":1902,"name":"storingArtifactsAt","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":" storing artifacts in a given "},{"kind":"code","text":"`destination`"},{"kind":"text","text":".\\nThe "},{"kind":"code","text":"`destination`"},{"kind":"text","text":" directory will be created automatically and recursively if it doesn\'t exist."}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":110,"character":11}],"parameters":[{"id":1903,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":1904,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":11}],"signatures":[{"id":1905,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":" storing artifacts in a given "},{"kind":"code","text":"`outputDirectory`"},{"kind":"text","text":".\\nThe "},{"kind":"code","text":"`outputDirectory`"},{"kind":"text","text":" will be created automatically and recursively if it doesn\'t exist."}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":11}],"parameters":[{"id":1906,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1907,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1908,"name":"outputDirectory","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":30}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1908]}],"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":124,"character":28}]}}}],"type":{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":1909,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":135,"character":4}],"signatures":[{"id":1910,"name":"new ArtifactArchiver","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":135,"character":4}],"parameters":[{"id":1911,"name":"fileSystem","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}},{"id":1912,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The stage this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) should be assigned to"}]},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1900,"name":"ArtifactArchiver","package":"@serenity-js/core"}}]},{"id":1915,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":141,"character":4}],"signatures":[{"id":1916,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) to this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":141,"character":4}],"parameters":[{"id":1917,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2121,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":2120,"name":"StageCrewMember.assignedTo"}},{"id":1918,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":156,"character":4}],"signatures":[{"id":1919,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`StageManager`"},{"kind":"text","text":"](/api/core/class/StageManager/)."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]},{"tag":"@listens","content":[]},{"tag":"@emits","content":[]}]},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":156,"character":4}],"parameters":[{"id":1920,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2124,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":2123,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[1909]},{"title":"Methods","children":[1901,1904,1915,1918]}],"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":102,"character":13}],"implementedTypes":[{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/core/class/ArtifactArchiver","previousId":2135,"nextId":1943},{"id":1943,"name":"StreamReporter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serialises all the ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects it receives and streams\\nthem as [ndjson](http://ndjson.org/) to the output stream or file.\\n\\nUseful when debugging issues related to custom Serenity/JS test runner adapters.\\n\\n## Registering Stream Reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure, StreamReporter } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    new StreamReporter(process.stdout)\\n  ],\\n})\\n```"},{"kind":"text","text":"\\n\\n## Writing Domain Events to a file\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure, StreamReporter } from \'@serenity-js/core\'\\nimport fs = require(\'fs\')\\n\\nconfigure({\\n  crew: [\\n    new StreamReporter(fs.createWriteStream(\'./events.ndjson\'))\\n  ],\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Stream Reporter with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n\\n  reporter: [\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        [ \'@serenity-js/core:StreamReporter\', { outputFile: \'./events.ndjson\' } ]\\n      ]\\n      // other Serenity/JS config\\n    }]\\n  ],\\n  // other Playwright Test config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Stream Reporter with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:StreamReporter\', { outputFile: \'./events.ndjson\' }]\\n    ]\\n    // other Serenity/JS config\\n  },\\n  // other WebdriverIO config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Stream Reporter with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      [ \'@serenity-js/core:StreamReporter\', { outputFile: \'./events.ndjson\' }]\\n    ],\\n    // other Serenity/JS config\\n  },\\n  // other Protractor config\\n}\\n```"}]},"children":[{"id":1944,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":11}],"signatures":[{"id":1945,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`StreamReporter`"},{"kind":"text","text":" outputting a stream of [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nto an "},{"kind":"code","text":"`outputFile`"},{"kind":"text","text":" at the given location."}]},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":11}],"parameters":[{"id":1946,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1947,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1948,"name":"outputFile","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":30}],"type":{"type":"intrinsic","name":"string"}},{"id":1949,"name":"cwd","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":50}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1948,1949]}],"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":109,"character":28}]}}}],"type":{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":1950,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":125,"character":4}],"signatures":[{"id":1951,"name":"new StreamReporter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":125,"character":4}],"parameters":[{"id":1952,"name":"output","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A Writable stream that should receive the output"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/stream.d.ts","qualifiedName":"internal.Writable"},"name":"Writable","package":"@types/node","qualifiedName":"internal.Writable"},"defaultValue":"process.stdout"},{"id":1953,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The stage this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) should be assigned to"}]},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1943,"name":"StreamReporter","package":"@serenity-js/core"}}]},{"id":1956,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":140,"character":4}],"signatures":[{"id":1957,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a new instance of this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) and assigns it to a given ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A new instance of this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)"}]}]},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":140,"character":4}],"parameters":[{"id":1958,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance of a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) will be assigned to"}]},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":2121,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":2120,"name":"StageCrewMember.assignedTo"}},{"id":1959,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":151,"character":4}],"signatures":[{"id":1960,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`StageManager`"},{"kind":"text","text":"](/api/core/class/StageManager/)."}],"blockTags":[{"tag":"@listens","content":[]}]},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":151,"character":4}],"parameters":[{"id":1961,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":2124,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":2123,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[1950]},{"title":"Methods","children":[1944,1956,1959]}],"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":101,"character":13}],"implementedTypes":[{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/core/class/StreamReporter","previousId":1900,"nextId":1966},{"id":1966,"name":"DomainEventQueue","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":1967,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":4}],"signatures":[{"id":1968,"name":"new DomainEventQueue","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":4}],"parameters":[{"id":1969,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intersection","types":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1970,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1971,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":48}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[1971]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":46}]}}]}}}],"type":{"type":"reference","target":1966,"name":"DomainEventQueue","package":"@serenity-js/core"}}]},{"id":1975,"name":"sceneId","variant":"declaration","kind":262144,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":16,"character":8}],"getSignature":{"id":1976,"name":"sceneId","variant":"signature","kind":524288,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":16,"character":8}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}},{"id":1977,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":4}],"signatures":[{"id":1978,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1979,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1980,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":29}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[1980]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":27}]}}]}}]},{"id":1981,"name":"enqueue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":4}],"signatures":[{"id":1982,"name":"enqueue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":4}],"parameters":[{"id":1983,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1984,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1985,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":35}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[1985]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":33}]}}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1986,"name":"drain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":4}],"signatures":[{"id":1987,"name":"drain","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":4}],"type":{"type":"array","elementType":{"type":"intersection","types":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1988,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1989,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":35}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[1989]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":33}]}}]}}}]},{"id":1990,"name":"reduce","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":4}],"signatures":[{"id":1991,"name":"reduce","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":4}],"typeParameter":[{"id":1992,"name":"U","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":1993,"name":"fn","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":1994,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":18}],"signatures":[{"id":1995,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":18}],"parameters":[{"id":1996,"name":"previousValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1992,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}},{"id":1997,"name":"currentValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":1998,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":1999,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":67}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[1999]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":65}]}}]}},{"id":2000,"name":"currentIndex","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1992,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}}]}}},{"id":2001,"name":"initialValue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1992,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}}],"type":{"type":"reference","target":1992,"name":"U","package":"@serenity-js/core","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[1967]},{"title":"Accessors","children":[1975]},{"title":"Methods","children":[1977,1981,1986,1990]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":9,"character":13}],"permalink":"/api/core/class/DomainEventQueue","previousId":1943,"nextId":2002},{"id":2002,"name":"DomainEventQueues","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":2003,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":2004,"name":"new DomainEventQueues","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":2002,"name":"DomainEventQueues","package":"@serenity-js/core"}}]},{"id":2012,"name":"enqueue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":4}],"signatures":[{"id":2013,"name":"enqueue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":4}],"parameters":[{"id":2014,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2015,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2016,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":35}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2016]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":33}]}}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2017,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":4}],"signatures":[{"id":2018,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":4}],"parameters":[{"id":2019,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":2020,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":22}],"signatures":[{"id":2021,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":22}],"parameters":[{"id":2022,"name":"queue","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1966,"name":"DomainEventQueue","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2023,"name":"drainQueueFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":4}],"signatures":[{"id":2024,"name":"drainQueueFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":4}],"parameters":[{"id":2025,"name":"sceneId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"array","elementType":{"type":"intersection","types":[{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":2026,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":2027,"name":"sceneId","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":65}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[2027]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":63}]}}]}}}]}],"groups":[{"title":"Constructors","children":[2003]},{"title":"Methods","children":[2012,2017,2023]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":11,"character":13}],"permalink":"/api/core/class/DomainEventQueues","previousId":1966,"nextId":1834}],"groups":[{"title":"Abilities","children":[492,497,520,523,528]},{"title":"Activities","children":[657,712,717,1016]},{"title":"Actors","children":[478,481,515,557,562,652,1003]},{"title":"Errors","children":[126,148,76,120,454,157,171,181,193,219,245,271,297,323,349,376,402,428]},{"title":"Expectations","children":[1086,1092,1161,1188,1206,1224]},{"title":"Notes","children":[786,793,838,871,868]},{"title":"Questions","children":[57,53,49,648,650,890,983,995,1000,1536,1837,1008,1067,1084,1242,1362,1487,1491,1497,1521,1505,1517]},{"title":"Screenplay Pattern","children":[567,594,753,893,1538,484]},{"title":"Serenity","children":[1839,66,67,483,472,475]},{"title":"Stage","children":[1888,1962,2044,2119,2126,2131,2135,1900,1943,1966,2002]},{"title":"Time","children":[1834,1568,1589,1613,1657,1678,1685,1742,1759,1782]}],"sources":[{"fileName":"packages/core/src/index.ts","line":1,"character":0}],"permalink":"/api/core"},"urlSlug":"core"}],"packageName":"@serenity-js/core","packageVersion":"3.25.4"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":39,"name":"@serenity-js/cucumber/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22146,"name":"CucumberCLIAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for programmatic execution of Cucumber test scenarios.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/)"}]},"children":[{"id":22147,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":26,"character":4}],"signatures":[{"id":22148,"name":"new CucumberCLIAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":26,"character":4}],"parameters":[{"id":22149,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22211,"name":"CucumberConfig","package":"@serenity-js/cucumber"}},{"id":22150,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}},{"id":22151,"name":"fileSystem","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}},{"id":22152,"name":"output","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22246,"name":"SerenityFormatterOutput","package":"@serenity-js/cucumber"}}],"type":{"type":"reference","target":22146,"name":"CucumberCLIAdapter","package":"@serenity-js/cucumber"}}]},{"id":22157,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":4}],"signatures":[{"id":22158,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner, calculated based on ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22159,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22160,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22160]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":34}]}}]},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}},{"id":22161,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":50,"character":10}],"signatures":[{"id":22162,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads feature files."}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":50,"character":10}],"parameters":[{"id":22163,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Absolute or relative paths to feature files"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}},{"id":22164,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":68,"character":4}],"signatures":[{"id":22165,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":68,"character":4}],"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}},{"id":22166,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":83,"character":10}],"signatures":[{"id":22167,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs Cucumber to execute feature files located at "},{"kind":"code","text":"`pathsToScenarios`"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":83,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"groups":[{"title":"Constructors","children":[22147]},{"title":"Methods","children":[22157,22161,22164,22166]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":20,"character":13}],"implementedTypes":[{"type":"reference","target":2163,"name":"TestRunnerAdapter","package":"@serenity-js/core"}],"permalink":"/api/cucumber-adapter/class/CucumberCLIAdapter","previousId":22211,"nextId":22231},{"id":22211,"name":"CucumberConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration options to be passed to [Cucumber CLI](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md).\\nYou can specify the options using either camelCase (i.e. "},{"kind":"code","text":"`retryTagFilter`"},{"kind":"text","text":") or kebab-case (i.e. "},{"kind":"code","text":"`retry-tag-filter`"},{"kind":"text","text":")\\nas Serenity/JS will convert them to an appropriate format for you."}]},"children":[{"id":22212,"name":"paths","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Paths to where your feature files are. Note that you don\'t need to specify the paths when\\nusing Serenity/JS with WebdriverIO or Protractor, as their respective adapters will do it for you.\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":17,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22213,"name":"dryRun","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Prepare a test run but don\'t run it\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)\\n- [Cucumber docs: dry run mode](https://github.com/cucumber/cucumber-js/blob/main/docs/dry_run.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":28,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22214,"name":"failFast","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Stop running tests when a test fails\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)\\n- [Cucumber docs: fail fast](https://github.com/cucumber/cucumber-js/blob/main/docs/fail_fast.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":39,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22215,"name":"colors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable/disable colors in output. Cucumber 1.x only!\\nFor Cucumber 2.x and above use "},{"kind":"code","text":"`formatOptions: { colorsEnabled: false }`"},{"kind":"text","text":"\\n\\n**Note** For Cucumber 2.x and above use the ["},{"kind":"code","text":"`CucumberConfig.formatOptions`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/#formatOptions) instead.\\n\\n#### Disable colors in output in Cucumber 1.x\\n\\n"},{"kind":"code","text":"```ts\\ncolors: false\\n```"},{"kind":"text","text":"\\n\\n#### Disable colors in output in Cucumber 2.x and above\\n\\n "},{"kind":"code","text":"```ts\\n formatOptions: { colorsEnabled: false }\\n ```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber 1.x CLI options](https://github.com/cucumber/cucumber-js/blob/1.x/lib/cucumber/cli.js#L38)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"1.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":64,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22216,"name":"compiler","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Step definitions and support files can be written in languages that transpile to JavaScript.\\nTo do set the "},{"kind":"code","text":"`compiler`"},{"kind":"text","text":" option to "},{"kind":"code","text":"`<file_extension>:<module_name>`"},{"kind":"text","text":"\\n\\n**NoteL** For Cucumber 4.x and above use the ["},{"kind":"code","text":"`CucumberConfig.require`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/#require) option instead.\\n\\n#### Enable TypeScript support in Cucumber 1.x - 3.x\\n"},{"kind":"code","text":"```ts\\ncompiler: \'ts:ts-node/register\'\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber 3.x documentation](https://github.com/cucumber/cucumber-js/blob/3.x/docs/cli.md#transpilers)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"1.x - 3.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":82,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22217,"name":"format","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify additional output formats, optionally supply PATH to redirect formatter output\\n\\n#### Learn more\\n- [Cucumber output formats](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#formats)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":90,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"id":22218,"name":"formatOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Provide options for formatters\\n\\n#### Cucumber 1.x\\n"},{"kind":"code","text":"```ts\\nformatOptions: JSON.stringify({ option: \'value\' })\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber format options](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#format-options)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":103,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"object"}]}},{"id":22219,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only execute the scenarios with name matching the expression.\\n\\n#### Learn more\\n- [Cucumber docs: running specific features](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#running-specific-features)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":111,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22220,"name":"profile","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"In order to store and reuse commonly used CLI options,\\nyou can add a "},{"kind":"code","text":"`cucumber.js`"},{"kind":"text","text":" file to your project root directory.\\nThe file should export an object where the key is the profile name\\nand the value is a string of CLI options.\\n\\nThe profile can be applied with "},{"kind":"code","text":"`-p <NAME>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`--profile <NAME>`"},{"kind":"text","text":".\\nThis will prepend the profile\'s CLI options to the ones provided by the command line.\\nMultiple profiles can be specified at a time.\\n\\nIf no profile is specified and a profile named default exists,\\nit will be applied.\\n\\n#### Learn more\\n- [Cucumber profiles](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#profiles)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":129,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22221,"name":"retry","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The number of times to retry a failing scenario before marking it as failed.\\n\\n#### Cucumber 7.x\\n\\n"},{"kind":"code","text":"```ts\\nretry: 3\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber docs: retry failing tests](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#retry-failing-tests)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"7.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":145,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":22222,"name":"rerun","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Relative path to an output file produced by Cucumber.js ["},{"kind":"code","text":"`rerun`"},{"kind":"text","text":" formatter](https://github.com/cucumber/cucumber-js/blob/master/features/rerun_formatter.feature).\\n\\n**Note:** that the name of the output file *must* start with an "},{"kind":"code","text":"`@`"},{"kind":"text","text":" symbol.\\n\\n#### Saving details of failed scenarios to "},{"kind":"code","text":"`@rerun-output.txt`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nformat: [ \'rerun:@rerun-output.txt\' ]\\n```"},{"kind":"text","text":"\\n\\n#### Re-running scenarios saved to "},{"kind":"code","text":"`@rerun-output.txt`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\nrerun: \'@rerun-output.txt\'\\n```"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":163,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22223,"name":"retryTagFilter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only retry tests matching the given [tag expression](https://github.com/cucumber/cucumber/tree/master/tag-expressions).\\n\\n#### Cucumber 7.x\\n"},{"kind":"code","text":"```ts\\nretry: 3,\\nretryTagFilter: \'@flaky\',\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber docs: retry failing tests](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#retry-failing-tests)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"7.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":179,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22224,"name":"require","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Require files or node modules before executing features\\n\\n#### Enable TypeScript support in Cucumber 4.x and above\\n"},{"kind":"code","text":"```ts\\nrequire: \'ts:ts-node/register\'\\n```"},{"kind":"text","text":"\\n#### Learn more\\n- [Cucumber docs: requiring support files](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#requiring-support-files)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":191,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22225,"name":"import","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Paths to where your support code is.\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":201,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22226,"name":"requireModule","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Names of transpilation modules to load, loaded via require()\\n\\n#### Learn more\\n- [Cucumber docs: transpiling](https://github.com/cucumber/cucumber-js/blob/main/docs/transpiling.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":211,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22227,"name":"language","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default language for your feature files\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":221,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22228,"name":"tags","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only run scenarios that match the given tags.\\n\\n**Note**: Cucumber 1.x requires the "},{"kind":"code","text":"`tags`"},{"kind":"text","text":" option to be an array of Cucumber tags,\\nwhile Cucumber 2.x and above uses a "},{"kind":"code","text":"`string`"},{"kind":"text","text":"\\nwith a [tag expression](https://github.com/cucumber/cucumber/tree/master/tag-expressions).\\n\\n#### Cucumber 1.x\\n"},{"kind":"code","text":"```ts\\n// Run all scenarios tagged with `@smoketest`, but not with `@wip`:\\ntag: [ \'@smoketest\', \'~@wip\' ]\\n```"},{"kind":"text","text":"\\n\\n#### Cucumber >= 2.x\\n"},{"kind":"code","text":"```ts\\n// Run all scenarios tagged with `@smoketest`, but not with `@wip`:\\ntag: \'@smoketest and not @wip\'\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- [Cucumber 1.x docs: tags](https://github.com/cucumber/cucumber-js/blob/1.x/docs/cli.md#tags)\\n- [Cucumber 2.x docs: tags](https://github.com/cucumber/cucumber-js/blob/2.x/docs/cli.md#tags)\\n- [Cucumber docs: tag expressions](https://github.com/cucumber/cucumber/tree/master/tag-expressions)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":248,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"id":22229,"name":"strict","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Fail if there are any undefined or pending steps"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":253,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22230,"name":"worldParameters","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Provide parameters that will be passed to the world constructor\\n\\n#### Specifying "},{"kind":"code","text":"`worldParameters`"},{"kind":"text","text":" as "},{"kind":"code","text":"`string`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\nworldParameters: JSON.stringify({ isDev: process.env.NODE_ENV !== \'production\' })\\n```"},{"kind":"text","text":"\\n\\n#### Specifying "},{"kind":"code","text":"`worldParameters`"},{"kind":"text","text":" as "},{"kind":"code","text":"`object`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\nworldParameters: { isDev: process.env.NODE_ENV !== \'production\' }\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- [Cucumber docs: world parameters](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#world-parameters)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":272,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"object"}]}}],"groups":[{"title":"Properties","children":[22212,22213,22214,22215,22216,22217,22218,22219,22220,22221,22222,22223,22224,22225,22226,22227,22228,22229,22230]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":8,"character":17}],"permalink":"/api/cucumber-adapter/interface/CucumberConfig","nextId":22146},{"id":22231,"name":"CucumberFormat","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents a Cucumber.js formatter\\n\\n## Learn more\\n\\n- [Cucumber formatters](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#built-in-formatters)"}]},"children":[{"id":22238,"name":"formatter","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":13,"character":20}],"type":{"type":"intrinsic","name":"string"}},{"id":22239,"name":"output","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":14,"character":20}],"type":{"type":"intrinsic","name":"string"}},{"id":22235,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":20,"character":4}],"signatures":[{"id":22236,"name":"new CucumberFormat","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":20,"character":4}],"parameters":[{"id":22237,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Cucumber format expression, like "},{"kind":"code","text":"`pretty`"},{"kind":"text","text":" or "},{"kind":"code","text":"`json:out.json`"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":22231,"name":"CucumberFormat","package":"@serenity-js/cucumber"}}]},{"id":22240,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Cucumber format expression, like "},{"kind":"code","text":"`pretty`"},{"kind":"text","text":" or "},{"kind":"code","text":"`json:out.json`"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":20,"character":32}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Constructors","children":[22235]},{"title":"Properties","children":[22238,22239,22240]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":12,"character":13}],"permalink":"/api/cucumber-adapter/class/CucumberFormat","previousId":22146,"nextId":22241},{"id":22241,"name":"OutputDescriptor","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":22242,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":5,"character":4}],"signatures":[{"id":22243,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":5,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":22244,"name":"cleanUp","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":6,"character":4}],"signatures":[{"id":22245,"name":"cleanUp","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":6,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[22242,22244]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":4,"character":17}],"permalink":"/api/cucumber-adapter/interface/OutputDescriptor","previousId":22231,"nextId":22246},{"id":22246,"name":"SerenityFormatterOutput","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":22247,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts","line":7,"character":4}],"signatures":[{"id":22248,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts","line":7,"character":4}],"type":{"type":"reference","target":22241,"name":"OutputDescriptor","package":"@serenity-js/cucumber"}}]}],"groups":[{"title":"Methods","children":[22247]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts","line":6,"character":17}],"implementedBy":[{"type":"reference","target":22249,"name":"StandardOutput"},{"type":"reference","target":22254,"name":"TempFileOutput"}],"permalink":"/api/cucumber-adapter/interface/SerenityFormatterOutput","previousId":22241,"nextId":22249},{"id":22249,"name":"StandardOutput","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":22250,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":22251,"name":"new StandardOutput","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":22249,"name":"StandardOutput","package":"@serenity-js/cucumber"}}]},{"id":22252,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/StandardOutput.ts","line":9,"character":4}],"signatures":[{"id":22253,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/StandardOutput.ts","line":9,"character":4}],"type":{"type":"reference","target":22241,"name":"OutputDescriptor","package":"@serenity-js/cucumber"},"implementationOf":{"type":"reference","target":22248,"name":"SerenityFormatterOutput.get"}}],"implementationOf":{"type":"reference","target":22247,"name":"SerenityFormatterOutput.get"}}],"groups":[{"title":"Constructors","children":[22250]},{"title":"Methods","children":[22252]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/StandardOutput.ts","line":8,"character":13}],"implementedTypes":[{"type":"reference","target":22246,"name":"SerenityFormatterOutput","package":"@serenity-js/cucumber"}],"permalink":"/api/cucumber-adapter/class/StandardOutput","previousId":22246,"nextId":22254},{"id":22254,"name":"TempFileOutput","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":22255,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":12,"character":4}],"signatures":[{"id":22256,"name":"new TempFileOutput","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":12,"character":4}],"parameters":[{"id":22257,"name":"fs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"FileSystem","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22254,"name":"TempFileOutput","package":"@serenity-js/cucumber"}}]},{"id":22259,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":15,"character":4}],"signatures":[{"id":22260,"name":"get","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":15,"character":4}],"type":{"type":"reference","target":22241,"name":"OutputDescriptor","package":"@serenity-js/cucumber"},"implementationOf":{"type":"reference","target":22248,"name":"SerenityFormatterOutput.get"}}],"implementationOf":{"type":"reference","target":22247,"name":"SerenityFormatterOutput.get"}}],"groups":[{"title":"Constructors","children":[22255]},{"title":"Methods","children":[22259]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":11,"character":13}],"implementedTypes":[{"type":"reference","target":22246,"name":"SerenityFormatterOutput","package":"@serenity-js/cucumber"}],"permalink":"/api/cucumber-adapter/class/TempFileOutput","previousId":22249}],"groups":[{"title":"Configuration","children":[22211]},{"title":"Integration","children":[22146,22231,22241,22246,22249,22254]}],"sources":[{"fileName":"packages/cucumber/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/cucumber-adapter"},"urlSlug":"cucumber-adapter"},{"index":true,"label":"index","reflection":{"id":37,"name":"@serenity-js/cucumber","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":38,"name":"export=","variant":"declaration","kind":32,"flags":{"isExternal":true,"isConst":true},"comment":{"summary":[{"kind":"text","text":"Registers a Cucumber reporter that emits [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nand informs Serenity/JS when test scenarios and Cucumber steps start, finish, and with what result."}]},"sources":[{"fileName":"packages/cucumber/src/index.ts","line":16,"character":6}],"type":{"type":"intrinsic","name":"unknown"},"defaultValue":"...","permalink":"/api/cucumber#export="}],"groups":[{"title":"Variables","children":[38]}],"sources":[{"fileName":"packages/cucumber/src/index.ts","line":1,"character":0}],"permalink":"/api/cucumber"},"urlSlug":"cucumber"}],"packageName":"@serenity-js/cucumber","packageVersion":"3.25.4"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":41,"name":"@serenity-js/jasmine/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22265,"name":"JasmineAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for programmatic execution of Jasmine test scenarios,\\nusing ["},{"kind":"code","text":"`SerenityReporterForJasmine`"},{"kind":"text","text":"](/api/jasmine/function/default/) to report progress.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/)"}]},"children":[{"id":22271,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":45,"character":4}],"signatures":[{"id":22272,"name":"new JasmineAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":45,"character":4}],"parameters":[{"id":22273,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22300,"name":"JasmineConfig","package":"@serenity-js/jasmine"}},{"id":22274,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22265,"name":"JasmineAdapter","package":"@serenity-js/jasmine"}}]},{"id":22279,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":4}],"signatures":[{"id":22280,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22281,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22282,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22282]}],"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":54,"character":34}]}}]},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}},{"id":22283,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":63,"character":10}],"signatures":[{"id":22284,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads test scenarios."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":63,"character":10}],"parameters":[{"id":22285,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}},{"id":22293,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":133,"character":4}],"signatures":[{"id":22294,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":133,"character":4}],"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}},{"id":22298,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":151,"character":10}],"signatures":[{"id":22299,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Runs loaded test scenarios."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":151,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"groups":[{"title":"Constructors","children":[22271]},{"title":"Methods","children":[22279,22283,22293,22298]}],"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":21,"character":13}],"implementedTypes":[{"type":"reference","target":2163,"name":"TestRunnerAdapter","package":"@serenity-js/core"}],"permalink":"/api/jasmine-adapter/class/JasmineAdapter","previousId":22300},{"id":22300,"name":"JasmineConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration object that will be passed to the JasmineRunner.\\n\\n## Learn more\\n- [Jasmine configuration](https://jasmine.github.io/setup/nodejs.html)"}]},"children":[{"id":22301,"name":"specDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Spec dir is used as a prefix for all spec files and helpers"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":16,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22302,"name":"helpers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of paths to helper files that should be loaded and executed before the "},{"kind":"code","text":"`requires`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`specs`"},{"kind":"text","text":".\\nAccepts relative and absolute paths as well as glob expressions.\\n\\n#### Learn more\\n- [Jasmine tutorial](https://jasmine.github.io/tutorials/react_with_npm)"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":25,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22303,"name":"requires","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of paths to files that should be required after the "},{"kind":"code","text":"`helpers`"},{"kind":"text","text":", but before the "},{"kind":"code","text":"`specs`"},{"kind":"text","text":".\\nThe paths need to be compatible with Node "},{"kind":"code","text":"`require`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":31,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22304,"name":"random","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not the tests should be executed in a pseudo-random order."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":36,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22305,"name":"grep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Used to exclude any test scenarios which name doesn\'t match the pattern from the run."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":41,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}},{"id":22306,"name":"invertGrep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inverts \'grep\' matches, defaults to "},{"kind":"code","text":"`false`"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22307,"name":"specFilter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Receives the full name of a test scenario and returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nfor those that should be executed.\\n\\nTakes precedence over "},{"kind":"code","text":"`grep`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":54,"character":4}],"type":{"type":"reflection","declaration":{"id":22308,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":54,"character":17}],"signatures":[{"id":22309,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":54,"character":17}],"parameters":[{"id":22310,"name":"specName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22311,"name":"seed","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The randomisation seed that will be used to determine the pseudo-random order of execution,\\nif "},{"kind":"code","text":"`random`"},{"kind":"text","text":" is set to "},{"kind":"code","text":"`true`"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22312,"name":"defaultTimeoutInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Sets the global "},{"kind":"code","text":"`jasmine.DEFAULT_TIMEOUT_INTERVAL`"},{"kind":"text","text":",\\nwhich defines the default number of milliseconds Jasmine will wait for an asynchronous spec to complete.\\n\\n#### Learn more\\n- [Jasmine default timeout interval](https://jasmine.github.io/api/edge/jasmine#.DEFAULT_TIMEOUT_INTERVAL)"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":69,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":22313,"name":"reporters","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of Jasmine reporters to be added to the test runner.\\n\\nUseful for situations like configuring ReportPortal, because you cannot use "},{"kind":"code","text":"`jasmine.addReporter()`"},{"kind":"text","text":" in the Protractor config.\\n\\n**Note:** reporters must be instantiated before adding them to the configuration.\\n\\n#### Using ReportPortal with Protractor and Jasmine\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nconst AgentJasmine = require(\'@reportportal/agent-js-jasmine\')\\nconst agent = new AgentJasmine(require(\'./reportportalConf\'))\\n// ...\\njasmineNodeOpts: {\\n  // ...\\n  reporters: [ agent.getJasmineReporter() ],\\n}\\n\\nafterLaunch:() => {\\n  return agent.getExitPromise();\\n},\\n```"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":95,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"JasmineReporter","package":"@serenity-js/jasmine"}}}],"groups":[{"title":"Properties","children":[22301,22302,22303,22304,22305,22306,22307,22311,22312,22313]}],"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":11,"character":17}],"permalink":"/api/jasmine-adapter/interface/JasmineConfig","nextId":22265}],"groups":[{"title":"Configuration","children":[22300]},{"title":"Integration","children":[22265]}],"sources":[{"fileName":"packages/jasmine/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/jasmine-adapter"},"urlSlug":"jasmine-adapter"},{"index":true,"label":"index","reflection":{"id":40,"name":"@serenity-js/jasmine","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22261,"name":"default","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/jasmine/src/bootstrap.ts","line":29,"character":16}],"signatures":[{"id":22262,"name":"default","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Monkey-patches Jasmine\'s Suite and Spec so that they provide more accurate information,\\nand returns a bootstrapped instance of the ["},{"kind":"code","text":"`SerenityReporterForJasmine`"},{"kind":"text","text":"](/api/jasmine/function/default/) to be registered with Jasmine.\\n\\n## Registering the reporter from the command line\\n\\n"},{"kind":"code","text":"```terminal\\njasmine --reporter=@serenity-js/jasmine\\n```"},{"kind":"text","text":"\\n\\n## Registering the reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport serenityReporterForJasmine = require(\'@serenity-js/jasmine\');\\n\\njasmine.getEnv().addReporter(serenityReporterForJasmine);\\n```"}]},"sources":[{"fileName":"packages/jasmine/src/bootstrap.ts","line":29,"character":16}],"parameters":[{"id":22263,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"SerenityReporterForJasmineConfig","package":"@serenity-js/jasmine"},"defaultValue":"{}"},{"id":22264,"name":"jasmine","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"the global.jasmine instance"}]},"type":{"type":"intrinsic","name":"any"},"defaultValue":"..."}],"type":{"type":"reference","name":"SerenityReporterForJasmine","package":"@serenity-js/jasmine"}}],"permalink":"/api/jasmine/function/default"}],"groups":[{"title":"Functions","children":[22261]}],"sources":[{"fileName":"packages/jasmine/src/index.ts","line":1,"character":0}],"permalink":"/api/jasmine"},"urlSlug":"jasmine"}],"packageName":"@serenity-js/jasmine","packageVersion":"3.25.4"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":28,"name":"@serenity-js/local-server","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":21952,"name":"ManageALocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) that enables an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto manage a local [Node.js](https://nodejs.org/) server.\\n\\n## Managing a raw Node.js server\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, Send } from \'@serenity-js/rest\'\\nimport { ManageALocalServer, LocalTestServer, StartLocalTestServer, StopLocalTestServer } from \'@serenity-js/local-server\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nimport * as axios from \'axios\'\\nimport * as http from \'http\'\\n\\nconst server = http.createServer(function (request, response) {\\n  response.setHeader(\'Connection\', \'close\');\\n  response.end(\'Hello!\');\\n})\\n\\nawait actorCalled(\'Apisit\')\\n  .whoCan(\\n    ManageALocalServer.using(server),\\n    CallAnApi.using(axios.create()),\\n  )\\n  .attemptsTo(\\n    StartLocalTestServer.onRandomPort(),\\n    Send.a(GetRequest.to(LocalServer.url())),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.body<string>(), equals(\'Hello!\')),\\n    StopLocalTestServer.ifRunning(),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Anatomy of an HTTP transaction](https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/)\\n- [Node.js HTTP server](https://nodejs.org/api/http.html#http_class_http_server)"}]},"children":[{"id":21953,"name":"runningAHttpListener","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":57,"character":11}],"signatures":[{"id":21954,"name":"runningAHttpListener","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to manage a Node.js HTTP server using the provided "},{"kind":"code","text":"`requestListener`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":57,"character":11}],"parameters":[{"id":21955,"name":"listener","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":21983,"name":"RequestListener","package":"@serenity-js/local-server"},{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/net.d.ts","qualifiedName":"\\"net\\".Server"},"name":"Server","package":"@types/node","qualifiedName":"\\"net\\".Server"}]}}],"type":{"type":"reference","target":21952,"name":"ManageALocalServer","package":"@serenity-js/local-server"}}]},{"id":21956,"name":"runningAHttpsListener","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":74,"character":11}],"signatures":[{"id":21957,"name":"runningAHttpsListener","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/) to manage a Node.js HTTPS server using the provided server "},{"kind":"code","text":"`requestListener`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener"}]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":74,"character":11}],"parameters":[{"id":21958,"name":"listener","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":21983,"name":"RequestListener","package":"@serenity-js/local-server"},{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/https.d.ts","qualifiedName":"\\"https\\".Server"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".IncomingMessage"},"name":"IncomingMessage","package":"@types/node","qualifiedName":"\\"http\\".IncomingMessage","preferValues":true}},{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".ServerResponse"},"name":"ServerResponse","package":"@types/node","qualifiedName":"\\"http\\".ServerResponse","preferValues":true}}],"name":"Server","package":"@types/node","qualifiedName":"\\"https\\".Server"}]}},{"id":21959,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Accepts an options object from "},{"kind":"code","text":"`tls.createServer()`"},{"kind":"text","text":", "},{"kind":"code","text":"`tls.createSecureContext()`"},{"kind":"text","text":" and "},{"kind":"code","text":"`http.createServer()`"},{"kind":"text","text":"."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/https.d.ts","qualifiedName":"\\"https\\".ServerOptions"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".IncomingMessage"},"name":"IncomingMessage","package":"@types/node","qualifiedName":"\\"http\\".IncomingMessage","preferValues":true}},{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".ServerResponse"},"name":"ServerResponse","package":"@types/node","qualifiedName":"\\"http\\".ServerResponse","preferValues":true}}],"name":"ServerOptions","package":"@types/node","qualifiedName":"\\"https\\".ServerOptions"},"defaultValue":"{}"}],"type":{"type":"reference","target":21952,"name":"ManageALocalServer","package":"@serenity-js/local-server"}}]},{"id":21965,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":91,"character":4}],"signatures":[{"id":21966,"name":"new ManageALocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://www.npmjs.com/package/http-shutdown"}]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":91,"character":4}],"parameters":[{"id":21967,"name":"protocol","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protocol to be used when communicating with the running server; "},{"kind":"code","text":"`http`"},{"kind":"text","text":" or "},{"kind":"code","text":"`https`"}]},"type":{"type":"reference","target":22004,"name":"SupportedProtocols","package":"@serenity-js/local-server"}},{"id":21968,"name":"server","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A Node.js server requestListener, with support for [server shutdown](https://www.npmjs.com/package/http-shutdown)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/net.d.ts","qualifiedName":"\\"net\\".Server"},"name":"Server","package":"@types/node","qualifiedName":"\\"net\\".Server"}}],"type":{"type":"reference","target":21952,"name":"ManageALocalServer","package":"@serenity-js/local-server"},"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}},{"id":21971,"name":"listen","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":105,"character":4}],"signatures":[{"id":21972,"name":"listen","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Starts the server on the first free port between "},{"kind":"code","text":"`preferredPort`"},{"kind":"text","text":" and "},{"kind":"code","text":"`highestPort`"},{"kind":"text","text":", inclusive."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":105,"character":4}],"parameters":[{"id":21973,"name":"preferredPort","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Lower bound of the preferred port range"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"8000"},{"id":21974,"name":"highestPort","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"highestPort\\n Upper bound of the preferred port range"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"65535"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":21975,"name":"mapInstance","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":4}],"signatures":[{"id":21976,"name":"mapInstance","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Provides access to the server "},{"kind":"code","text":"`requestListener`"}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":4}],"typeParameter":[{"id":21977,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":21978,"name":"fn","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21979,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":23}],"signatures":[{"id":21980,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":23}],"parameters":[{"id":21981,"name":"server","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":21988,"name":"ServerWithShutdown","package":"@serenity-js/local-server"}},{"id":21982,"name":"protocol","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":22004,"name":"SupportedProtocols","package":"@serenity-js/local-server"}}],"type":{"type":"reference","target":21977,"name":"T","package":"@serenity-js/local-server","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":21977,"name":"T","package":"@serenity-js/local-server","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[21965]},{"title":"Methods","children":[21953,21956,21971,21975]}],"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":48,"character":13}],"extendedTypes":[{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/local-server/class/ManageALocalServer","nextId":22007},{"id":21983,"name":"RequestListener","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"code","text":"`requestListener`"},{"kind":"text","text":" function accepted by Node\'s\\n["},{"kind":"code","text":"`http.createServer`"},{"kind":"text","text":"](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener)\\nor ["},{"kind":"code","text":"`https.createServer`"},{"kind":"text","text":"](https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener)."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":141,"character":12}],"type":{"type":"reflection","declaration":{"id":21984,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":141,"character":30}],"signatures":[{"id":21985,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":21986,"name":"request","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".IncomingMessage"},"name":"http.IncomingMessage","package":"@types/node","qualifiedName":"\\"http\\".IncomingMessage"}},{"id":21987,"name":"response","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".ServerResponse"},"name":"http.ServerResponse","package":"@types/node","qualifiedName":"\\"http\\".ServerResponse"}}],"type":{"type":"intrinsic","name":"void"}}]}},"permalink":"/api/local-server#RequestListener","previousId":22054,"nextId":21988},{"id":21988,"name":"ServerWithShutdown","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`net.Server`"},{"kind":"text","text":"](https://nodejs.org/api/net.html#class-netserver) with an added shutdown method."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://www.npmjs.com/package/http-shutdown"}]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":148,"character":12}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/net.d.ts","qualifiedName":"\\"net\\".Server"},"name":"net.Server","package":"@types/node","qualifiedName":"\\"net\\".Server"},{"type":"reflection","declaration":{"id":21989,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21990,"name":"shutdown","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":149,"character":4}],"type":{"type":"reflection","declaration":{"id":21991,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":149,"character":14}],"signatures":[{"id":21992,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":21993,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21994,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":149,"character":25}],"signatures":[{"id":21995,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":21996,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":21997,"name":"forceShutdown","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":150,"character":4}],"type":{"type":"reflection","declaration":{"id":21998,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":150,"character":19}],"signatures":[{"id":21999,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":22000,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22001,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":150,"character":30}],"signatures":[{"id":22002,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":22003,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[21990,21997]}],"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":148,"character":46}]}}]},"permalink":"/api/local-server#ServerWithShutdown","previousId":21983},{"id":22004,"name":"SupportedProtocols","variant":"declaration","kind":8,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The protocol supported by the instance of the ["},{"kind":"code","text":"`ServerWithShutdown`"},{"kind":"text","text":"](/api/local-server/#ServerWithShutdown),\\nwrapped by the [ability](/api/core/class/Ability/)\\nto ["},{"kind":"code","text":"`ManageALocalServer`"},{"kind":"text","text":"](/api/local-server/class/ManageALocalServer/)."}]},"children":[{"id":22005,"name":"HTTP","variant":"declaration","kind":16,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":161,"character":4}],"type":{"type":"literal","value":"http"}},{"id":22006,"name":"HTTPS","variant":"declaration","kind":16,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":162,"character":4}],"type":{"type":"literal","value":"https"}}],"groups":[{"title":"Enumeration Members","children":[22005,22006]}],"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":160,"character":12}],"permalink":"/api/local-server/enum/SupportedProtocols","previousId":22019,"nextId":22054},{"id":22007,"name":"StartLocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Starts local server so that a test can interact with it."}]},"children":[{"id":22008,"name":"onRandomPort","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":16,"character":11}],"signatures":[{"id":22009,"name":"onRandomPort","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Starts local test server on a random available ports."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":16,"character":11}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":22010,"name":"onPort","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":26,"character":11}],"signatures":[{"id":22011,"name":"onPort","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to start a local test server on a "},{"kind":"code","text":"`preferredPort`"},{"kind":"text","text":",\\nor a random one if that\'s not available."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":26,"character":11}],"parameters":[{"id":22012,"name":"preferredPort","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":22013,"name":"onRandomPortBetween","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":40,"character":11}],"signatures":[{"id":22014,"name":"onRandomPortBetween","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to start a local test server on a random port\\nbetween "},{"kind":"code","text":"`lowestPort`"},{"kind":"text","text":" and "},{"kind":"code","text":"`highestPort`"},{"kind":"text","text":", inclusive."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":40,"character":11}],"parameters":[{"id":22015,"name":"lowestPort","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Lower bound of the preferred port range"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":22016,"name":"highestPort","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Upper bound of the preferred port range"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":22017,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":22018,"name":"new StartLocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":22007,"name":"StartLocalServer","package":"@serenity-js/local-server"}}]}],"groups":[{"title":"Constructors","children":[22017]},{"title":"Methods","children":[22008,22010,22013]}],"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":11,"character":13}],"permalink":"/api/local-server/class/StartLocalServer","previousId":21952,"nextId":22019},{"id":22019,"name":"StopLocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stops the local server. Should be used in "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" block to make sure that the server\\nis correctly shut down even when the test fails."}]},"children":[{"id":22020,"name":"ifRunning","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":17,"character":11}],"signatures":[{"id":22021,"name":"ifRunning","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Stops the server if it\'s running. If the server hasn\'t been started, this interaction does nothing."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":17,"character":11}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":22032,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":21,"character":4}],"signatures":[{"id":22033,"name":"new StopLocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":21,"character":4}],"parameters":[{"id":22034,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":22035,"name":"location","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22019,"name":"StopLocalServer","package":"@serenity-js/local-server"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.constructor"}},{"id":22040,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":22041,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":22042,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":22043,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":22044,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22045,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22046,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[22046]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":22052,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":22053,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":22036,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":24,"character":4}],"signatures":[{"id":22037,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":24,"character":4}],"parameters":[{"id":22038,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":652,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Constructors","children":[22032]},{"title":"Methods","children":[22020,22040,22042,22052,22036]}],"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/local-server/class/StopLocalServer","previousId":22007,"nextId":22004},{"id":22054,"name":"LocalServer","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":22055,"name":"url","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":17,"character":11}],"signatures":[{"id":22056,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the URL of the local server started\\nusing the ["},{"kind":"code","text":"`StartLocalServer`"},{"kind":"text","text":"](/api/local-server/class/StartLocalServer/) [interaction](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":17,"character":11}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":22057,"name":"port","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":45,"character":11}],"signatures":[{"id":22058,"name":"port","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the port number of the local server started\\nusing the ["},{"kind":"code","text":"`StartLocalServer`"},{"kind":"text","text":"](/api/local-server/class/StartLocalServer/) [interaction](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":45,"character":11}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":22059,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":22060,"name":"new LocalServer","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":22054,"name":"LocalServer","package":"@serenity-js/local-server"}}]}],"groups":[{"title":"Constructors","children":[22059]},{"title":"Methods","children":[22055,22057]}],"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":11,"character":13}],"permalink":"/api/local-server/class/LocalServer","previousId":22004,"nextId":21983}],"groups":[{"title":"Abilities","children":[21952]},{"title":"Activities","children":[22007,22019]},{"title":"Models","children":[22004]},{"title":"Questions","children":[22054]},{"title":"Type Aliases","children":[21983,21988]}],"sources":[{"fileName":"packages/local-server/src/index.ts","line":1,"character":0}],"permalink":"/api/local-server"},"urlSlug":"local-server"}],"packageName":"@serenity-js/local-server","packageVersion":"3.25.4"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":47,"name":"@serenity-js/mocha/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22314,"name":"MochaAdapter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for programmatic execution of Mocha test scenarios,\\nusing ["},{"kind":"code","text":"`SerenityReporterForMocha`"},{"kind":"text","text":"](/api/mocha/function/export=/) to report progress.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/)"}]},"children":[{"id":22315,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":26,"character":4}],"signatures":[{"id":22316,"name":"new MochaAdapter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":26,"character":4}],"parameters":[{"id":22317,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22337,"name":"MochaConfig","package":"@serenity-js/mocha"}},{"id":22318,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22314,"name":"MochaAdapter","package":"@serenity-js/mocha"}}]},{"id":22323,"name":"successThreshold","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":4}],"signatures":[{"id":22324,"name":"successThreshold","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":4}],"type":{"type":"union","types":[{"type":"reference","name":"Outcome","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":22325,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22326,"name":"Code","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":36}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22326]}],"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":34}]}}]},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.successThreshold"}},{"id":22327,"name":"load","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":46,"character":10}],"signatures":[{"id":22328,"name":"load","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads test scenarios."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":46,"character":10}],"parameters":[{"id":22329,"name":"pathsToScenarios","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.load"}},{"id":22330,"name":"scenarioCount","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":81,"character":4}],"signatures":[{"id":22331,"name":"scenarioCount","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":81,"character":4}],"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.scenarioCount"}},{"id":22332,"name":"run","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":95,"character":4}],"signatures":[{"id":22333,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Runs loaded test scenarios."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n If called before "},{"kind":"code","text":"`load`"}]}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":95,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"implementationOf":{"type":"reference","target":-1,"name":"TestRunnerAdapter.run"}}],"groups":[{"title":"Constructors","children":[22315]},{"title":"Methods","children":[22323,22327,22330,22332]}],"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":21,"character":13}],"implementedTypes":[{"type":"reference","target":2163,"name":"TestRunnerAdapter","package":"@serenity-js/core"}],"permalink":"/api/mocha-adapter/class/MochaAdapter","previousId":22337},{"id":22337,"name":"MochaConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration object for the Mocha test runner.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`.mocharc.yml`"},{"kind":"text","text":" example](https://github.com/mochajs/mocha/blob/v8.0.1/example/config/.mocharc.yml)"}]},"children":[{"id":22338,"name":"config","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to config file.\\n\\n#### Learn more\\n- [Mocha configuration examples](https://github.com/mochajs/mocha/tree/v8.0.1/example/config)"}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":18,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22339,"name":"allow-uncaught","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Allow uncaught errors to propagate."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22340,"name":"async-only","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Require all tests to use a callback (async) or return a Promise."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":28,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22341,"name":"bail","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Abort (\\"bail\\") after first test failure."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":33,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22342,"name":"check-leaks","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Check for global variable leaks."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":38,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22343,"name":"delay","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Delay initial execution of root suite."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":43,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22344,"name":"fgrep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only run tests containing this string.\\n\\n**Note:** ["},{"kind":"code","text":"`MochaConfig.fgrep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#fgrep) and ["},{"kind":"code","text":"`MochaConfig.grep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#grep) are mutually exclusive."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":50,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22345,"name":"file","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Files to be loaded prior to root suite execution."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":55,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22346,"name":"forbid-only","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Fail if exclusive test(s) encountered."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22347,"name":"forbid-pending","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Fail if pending test(s) encountered."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":65,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22348,"name":"global","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of allowed global variables."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":70,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22349,"name":"grep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only run tests matching this string or regexp.\\n\\n**Note:** ["},{"kind":"code","text":"`MochaConfig.grep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#grep) and ["},{"kind":"code","text":"`MochaConfig.fgrep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#fgrep) are mutually exclusive."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":77,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}},{"id":22350,"name":"growl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable Growl notifications."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":82,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22351,"name":"invert","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inverts ["},{"kind":"code","text":"`MochaConfig.grep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#grep) and ["},{"kind":"code","text":"`MochaConfig.fgrep`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/#fgrep) matches."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":87,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":22352,"name":"require","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Require module."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":92,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":22353,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Retry failed tests this many times."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":97,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":22354,"name":"slow","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify \\"slow\\" test threshold (in milliseconds)."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":102,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":22355,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify test timeout threshold (in milliseconds).\\n\\n**Note:** setting this property to 0 means \\"no timeout\\"."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":109,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":22356,"name":"ui","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify user interface. Defaults to "},{"kind":"code","text":"`bdd`"},{"kind":"text","text":".\\n\\n#### Learn more\\n\\n- [Mocha interfaces](https://mochajs.org/#interfaces)"}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":118,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22357,"name":"strict","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When set to "},{"kind":"code","text":"`true`"},{"kind":"text","text":", a skipped test is considered a failure."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":123,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[22338,22339,22340,22341,22342,22343,22344,22345,22346,22347,22348,22349,22350,22351,22352,22353,22354,22355,22356,22357]}],"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":10,"character":17}],"permalink":"/api/mocha-adapter/interface/MochaConfig","nextId":22314}],"groups":[{"title":"Configuration","children":[22337]},{"title":"Integration","children":[22314]}],"sources":[{"fileName":"packages/mocha/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/mocha-adapter"},"urlSlug":"mocha-adapter"},{"index":true,"label":"index","reflection":{"id":42,"name":"@serenity-js/mocha","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":43,"name":"export=","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/mocha/src/index.ts","line":11,"character":9}],"signatures":[{"id":44,"name":"export=","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers a Mocha reporter that emits [Serenity/JS domain events](/api/core-events/class/DomainEvent/)\\nand informs Serenity/JS when a test scenario starts, finishes, and with what result."}]},"sources":[{"fileName":"packages/mocha/src/index.ts","line":11,"character":9}],"parameters":[{"id":45,"name":"runner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"","qualifiedName":"Runner"},"name":"Runner"}},{"id":46,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"","qualifiedName":"MochaOptions"},"name":"MochaOptions"}}],"type":{"type":"reference","name":"SerenityReporterForMocha","package":"@serenity-js/mocha"}}],"permalink":"/api/mocha/function/export="}],"groups":[{"title":"Functions","children":[43]}],"sources":[{"fileName":"packages/mocha/src/index.ts","line":1,"character":0}],"permalink":"/api/mocha"},"urlSlug":"mocha"}],"packageName":"@serenity-js/mocha","packageVersion":"3.25.4"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":6,"name":"@serenity-js/playwright","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":4951,"name":"PlaywrightOptions","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific options used to configure the ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\n\\n## Learn more\\n- [Playwright "},{"kind":"code","text":"`Browser.newContext`"},{"kind":"text","text":" options](https://playwright.dev/docs/api/class-browser#browser-new-context)"}]},"children":[{"id":4952,"name":"defaultNavigationTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Changes the default maximum navigation time for the browser context used by ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\n\\n#### Learn more\\n- [Playwright "},{"kind":"code","text":"`browserContext.setDefaultNavigationTimeout(timeout)`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-navigation-timeout)"}]},"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":19,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":4953,"name":"defaultNavigationWaitUntil","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When to consider navigation operation succeeded, defaults to "},{"kind":"code","text":"`load`"},{"kind":"text","text":". Events can be either:\\n- "},{"kind":"code","text":"`\'domcontentloaded\'`"},{"kind":"text","text":" - consider operation to be finished when the "},{"kind":"code","text":"`DOMContentLoaded`"},{"kind":"text","text":" event is fired.\\n- "},{"kind":"code","text":"`\'load\'`"},{"kind":"text","text":" - consider operation to be finished when the "},{"kind":"code","text":"`load`"},{"kind":"text","text":" event is fired.\\n- "},{"kind":"code","text":"`\'networkidle\'`"},{"kind":"text","text":" - consider operation to be finished when there are no network connections for at least "},{"kind":"code","text":"`500`"},{"kind":"text","text":" ms.\\n- "},{"kind":"code","text":"`\'commit\'`"},{"kind":"text","text":" - consider operation to be finished when network response is received and the document started loading.\\n\\n#### Learn more\\n- [Playwright "},{"kind":"code","text":"`page.goto(url[, options])`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-page#page-goto-option-wait-until)"}]},"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":31,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"load"},{"type":"literal","value":"domcontentloaded"},{"type":"literal","value":"networkidle"},{"type":"literal","value":"commit"}]}},{"id":4954,"name":"defaultTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This setting will change the default maximum time for all Playwright methods accepting "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":" option.\\n\\n#### Learn more\\n- [Playwright "},{"kind":"code","text":"`page.setDefaultTimeout(timeout)`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-page#page-set-default-timeout)"}]},"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":39,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":4955,"name":"acceptDownloads","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to automatically download all the attachments. Defaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" where all the downloads are accepted."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.acceptDownloads"}},{"id":4956,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When using [page.goto(url[, options])](https://playwright.dev/docs/api/class-page#page-goto),\\n[page.route(url, handler[, options])](https://playwright.dev/docs/api/class-page#page-route),\\n[page.waitForURL(url[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-url),\\n[page.waitForRequest(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-request),\\nor\\n[page.waitForResponse(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-response)\\nit takes the base URL in consideration by using the\\n["},{"kind":"code","text":"`URL()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL) constructor for building the corresponding URL.\\nUnset by default. Examples:\\n- baseURL: "},{"kind":"code","text":"`http://localhost:3000`"},{"kind":"text","text":" and navigating to "},{"kind":"code","text":"`/bar.html`"},{"kind":"text","text":" results in "},{"kind":"code","text":"`http://localhost:3000/bar.html`"},{"kind":"text","text":"\\n- baseURL: "},{"kind":"code","text":"`http://localhost:3000/foo/`"},{"kind":"text","text":" and navigating to "},{"kind":"code","text":"`./bar.html`"},{"kind":"text","text":" results in\\n  "},{"kind":"code","text":"`http://localhost:3000/foo/bar.html`"},{"kind":"text","text":"\\n- baseURL: "},{"kind":"code","text":"`http://localhost:3000/foo`"},{"kind":"text","text":" (without trailing slash) and navigating to "},{"kind":"code","text":"`./bar.html`"},{"kind":"text","text":" results in\\n  "},{"kind":"code","text":"`http://localhost:3000/bar.html`"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.baseURL"}},{"id":4957,"name":"bypassCSP","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Toggles bypassing page\'s Content-Security-Policy. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.bypassCSP"}},{"id":4958,"name":"clientCertificates","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"TLS Client Authentication allows the server to request a client certificate and verify it.\\n\\n**Details**\\n\\nAn array of client certificates to be used. Each certificate object must have both "},{"kind":"code","text":"`certPath`"},{"kind":"text","text":" and "},{"kind":"code","text":"`keyPath`"},{"kind":"text","text":" or a\\nsingle "},{"kind":"code","text":"`pfxPath`"},{"kind":"text","text":" to load the client certificate. Optionally, "},{"kind":"code","text":"`passphrase`"},{"kind":"text","text":" property should be provided if the\\ncertficiate is encrypted. The "},{"kind":"code","text":"`origin`"},{"kind":"text","text":" property should be provided with an exact match to the request origin that\\nthe certificate is valid for.\\n\\n**NOTE** Using Client Certificates in combination with Proxy Servers is not supported.\\n\\n**NOTE** When using WebKit on macOS, accessing "},{"kind":"code","text":"`localhost`"},{"kind":"text","text":" will not pick up client certificates. You can make it\\nwork by replacing "},{"kind":"code","text":"`localhost`"},{"kind":"text","text":" with "},{"kind":"code","text":"`local.playwright`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":4959,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4960,"name":"origin","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Exact origin that the certificate is valid for. Origin includes "},{"kind":"code","text":"`https`"},{"kind":"text","text":" protocol, a hostname and optionally a port."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":4961,"name":"certPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to the file with the certificate in PEM format."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":4962,"name":"keyPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to the file with the private key in PEM format."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":4963,"name":"pfxPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to the PFX or PKCS12 encoded private key and certificate chain."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":4964,"name":"passphrase","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Passphrase for the private key (PEM or PFX)."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4960,4961,4962,4963,4964]}],"sources":[]}}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.clientCertificates"}},{"id":4965,"name":"colorScheme","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates "},{"kind":"code","text":"`\'prefers-colors-scheme\'`"},{"kind":"text","text":" media feature, supported values are "},{"kind":"code","text":"`\'light\'`"},{"kind":"text","text":", "},{"kind":"code","text":"`\'dark\'`"},{"kind":"text","text":", "},{"kind":"code","text":"`\'no-preference\'`"},{"kind":"text","text":". See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details.\\nPassing "},{"kind":"code","text":"`null`"},{"kind":"text","text":" resets emulation to system defaults. Defaults to "},{"kind":"code","text":"`\'light\'`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"no-preference"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.colorScheme"}},{"id":4966,"name":"deviceScaleFactor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify device scale factor (can be thought of as dpr). Defaults to "},{"kind":"code","text":"`1`"},{"kind":"text","text":". Learn more about\\n[emulating devices with device scale factor](https://playwright.dev/docs/emulation#devices)."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.deviceScaleFactor"}},{"id":4967,"name":"extraHTTPHeaders","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An object containing additional HTTP headers to be sent with every request. Defaults to none."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":4968,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"indexSignature":{"id":4969,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":4970,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.extraHTTPHeaders"}},{"id":4971,"name":"forcedColors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates "},{"kind":"code","text":"`\'forced-colors\'`"},{"kind":"text","text":" media feature, supported values are "},{"kind":"code","text":"`\'active\'`"},{"kind":"text","text":", "},{"kind":"code","text":"`\'none\'`"},{"kind":"text","text":". See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details.\\nPassing "},{"kind":"code","text":"`null`"},{"kind":"text","text":" resets emulation to system defaults. Defaults to "},{"kind":"code","text":"`\'none\'`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"active"},{"type":"literal","value":"none"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.forcedColors"}},{"id":4972,"name":"geolocation","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Geolocation"},"name":"Geolocation","package":"playwright-core"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.geolocation"}},{"id":4973,"name":"hasTouch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specifies if viewport supports touch events. Defaults to false. Learn more about\\n[mobile emulation](https://playwright.dev/docs/emulation#devices)."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.hasTouch"}},{"id":4974,"name":"httpCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Credentials for [HTTP authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication). If no\\norigin is specified, the username and password are sent to any servers upon unauthorized responses."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"HTTPCredentials"},"name":"HTTPCredentials","package":"playwright-core"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.httpCredentials"}},{"id":4975,"name":"ignoreHTTPSErrors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to ignore HTTPS errors when sending network requests. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.ignoreHTTPSErrors"}},{"id":4976,"name":"isMobile","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the "},{"kind":"code","text":"`meta viewport`"},{"kind":"text","text":" tag is taken into account and touch events are enabled. isMobile is a part of device,\\nso you don\'t actually need to set it manually. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" and is not supported in Firefox. Learn more\\nabout [mobile emulation](https://playwright.dev/docs/emulation#ismobile)."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.isMobile"}},{"id":4977,"name":"javaScriptEnabled","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not to enable JavaScript in the context. Defaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":". Learn more about\\n[disabling JavaScript](https://playwright.dev/docs/emulation#javascript-enabled)."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.javaScriptEnabled"}},{"id":4978,"name":"locale","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify user locale, for example "},{"kind":"code","text":"`en-GB`"},{"kind":"text","text":", "},{"kind":"code","text":"`de-DE`"},{"kind":"text","text":", etc. Locale will affect "},{"kind":"code","text":"`navigator.language`"},{"kind":"text","text":" value,\\n"},{"kind":"code","text":"`Accept-Language`"},{"kind":"text","text":" request header value as well as number and date formatting rules. Defaults to the system default\\nlocale. Learn more about emulation in our [emulation guide](https://playwright.dev/docs/emulation#locale--timezone)."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.locale"}},{"id":4979,"name":"logger","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Logger sink for Playwright logging."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Logger"},"name":"Logger","package":"playwright-core"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.logger"}},{"id":4980,"name":"offline","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to emulate network being offline. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":". Learn more about\\n[network emulation](https://playwright.dev/docs/emulation#offline)."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.offline"}},{"id":4981,"name":"permissions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of permissions to grant to all pages in this context. See\\n[browserContext.grantPermissions(permissions[, options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-grant-permissions)\\nfor more details. Defaults to none."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.permissions"}},{"id":4982,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Network proxy settings to use with this context. Defaults to none.\\n\\n**NOTE** For Chromium on Windows the browser needs to be launched with the global proxy for this option to work. If\\nall contexts override the proxy, global proxy will be never used and can be any string, for example "},{"kind":"code","text":"`launch({\\nproxy: { server: \'http://per-context\' } })`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":4983,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4984,"name":"server","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Proxy to be used for all requests. HTTP and SOCKS proxies are supported, for example "},{"kind":"code","text":"`http://myproxy.com:3128`"},{"kind":"text","text":" or\\n"},{"kind":"code","text":"`socks5://myproxy.com:3128`"},{"kind":"text","text":". Short form "},{"kind":"code","text":"`myproxy.com:3128`"},{"kind":"text","text":" is considered an HTTP proxy."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":4985,"name":"bypass","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional comma-separated domains to bypass proxy, for example "},{"kind":"code","text":"`\\".com, chromium.org, .domain.com\\"`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":4986,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional username to use if HTTP proxy requires authentication."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":4987,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional password to use if HTTP proxy requires authentication."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4984,4985,4986,4987]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.proxy"}},{"id":4988,"name":"recordHar","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enables [HAR](http://www.softwareishard.com/blog/har-12-spec) recording for all pages into "},{"kind":"code","text":"`recordHar.path`"},{"kind":"text","text":" file.\\nIf not specified, the HAR is not recorded. Make sure to await\\n[browserContext.close([options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for\\nthe HAR to be saved."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":4989,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4990,"name":"omitContent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional setting to control whether to omit request content from the HAR. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":". Deprecated, use\\n"},{"kind":"code","text":"`content`"},{"kind":"text","text":" policy instead."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":4991,"name":"content","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional setting to control resource content management. If "},{"kind":"code","text":"`omit`"},{"kind":"text","text":" is specified, content is not persisted. If\\n"},{"kind":"code","text":"`attach`"},{"kind":"text","text":" is specified, resources are persisted as separate files or entries in the ZIP archive. If "},{"kind":"code","text":"`embed`"},{"kind":"text","text":" is\\nspecified, content is stored inline the HAR file as per HAR specification. Defaults to "},{"kind":"code","text":"`attach`"},{"kind":"text","text":" for "},{"kind":"code","text":"`.zip`"},{"kind":"text","text":" output\\nfiles and to "},{"kind":"code","text":"`embed`"},{"kind":"text","text":" for all other file extensions."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"omit"},{"type":"literal","value":"embed"},{"type":"literal","value":"attach"}]}},{"id":4992,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Path on the filesystem to write the HAR file to. If the file name ends with "},{"kind":"code","text":"`.zip`"},{"kind":"text","text":", "},{"kind":"code","text":"`content: \'attach\'`"},{"kind":"text","text":" is used by\\ndefault."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":4993,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When set to "},{"kind":"code","text":"`minimal`"},{"kind":"text","text":", only record information necessary for routing from HAR. This omits sizes, timing, page,\\ncookies, security and other types of HAR information that are not used when replaying from HAR. Defaults to "},{"kind":"code","text":"`full`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"full"},{"type":"literal","value":"minimal"}]}},{"id":4994,"name":"urlFilter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A glob or regex pattern to filter requests that are stored in the HAR. When a "},{"kind":"code","text":"`baseURL`"},{"kind":"text","text":" via the context options was\\nprovided and the passed URL is a path, it gets merged via the\\n["},{"kind":"code","text":"`new URL()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL) constructor. Defaults to none."}]},"sources":[],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}}],"groups":[{"title":"Properties","children":[4990,4991,4992,4993,4994]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.recordHar"}},{"id":4995,"name":"recordVideo","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enables video recording for all pages into "},{"kind":"code","text":"`recordVideo.dir`"},{"kind":"text","text":" directory. If not specified videos are not recorded.\\nMake sure to await\\n[browserContext.close([options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for\\nvideos to be saved."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":4996,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4997,"name":"dir","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Path to the directory to put videos into."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":4998,"name":"size","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional dimensions of the recorded videos. If not specified the size will be equal to "},{"kind":"code","text":"`viewport`"},{"kind":"text","text":" scaled down to\\nfit into 800x800. If "},{"kind":"code","text":"`viewport`"},{"kind":"text","text":" is not configured explicitly the video size defaults to 800x450. Actual picture of\\neach page will be scaled down if necessary to fit the specified size."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":4999,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5000,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame width."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":5001,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame height."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5000,5001]}],"sources":[]}}}],"groups":[{"title":"Properties","children":[4997,4998]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.recordVideo"}},{"id":5002,"name":"reducedMotion","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates "},{"kind":"code","text":"`\'prefers-reduced-motion\'`"},{"kind":"text","text":" media feature, supported values are "},{"kind":"code","text":"`\'reduce\'`"},{"kind":"text","text":", "},{"kind":"code","text":"`\'no-preference\'`"},{"kind":"text","text":". See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details.\\nPassing "},{"kind":"code","text":"`null`"},{"kind":"text","text":" resets emulation to system defaults. Defaults to "},{"kind":"code","text":"`\'no-preference\'`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"reduce"},{"type":"literal","value":"no-preference"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.reducedMotion"}},{"id":5003,"name":"screen","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates consistent window screen size available inside web page via "},{"kind":"code","text":"`window.screen`"},{"kind":"text","text":". Is only used when the\\n"},{"kind":"code","text":"`viewport`"},{"kind":"text","text":" is set."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5004,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5005,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"page width in pixels."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":5006,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"page height in pixels."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5005,5006]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.screen"}},{"id":5007,"name":"serviceWorkers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to allow sites to register Service workers. Defaults to "},{"kind":"code","text":"`\'allow\'`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`\'allow\'`"},{"kind":"text","text":": [Service Workers](https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API) can be\\n  registered.\\n- "},{"kind":"code","text":"`\'block\'`"},{"kind":"text","text":": Playwright will block all registration of Service Workers."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"allow"},{"type":"literal","value":"block"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.serviceWorkers"}},{"id":5008,"name":"storageState","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Learn more about [storage state and auth](https://playwright.dev/docs/auth).\\n\\nPopulates context with given storage state. This option can be used to initialize context with logged-in\\ninformation obtained via\\n[browserContext.storageState([options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-storage-state)."}]},"sources":[],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5009,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5010,"name":"cookies","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Cookies to set for context"}]},"sources":[],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5011,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5012,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5013,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5014,"name":"domain","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Domain and path are required. For the cookie to apply to all subdomains as well, prefix domain with a dot, like\\nthis: \\".example.com\\""}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5015,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Domain and path are required"}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5016,"name":"expires","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Unix time in seconds."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":5017,"name":"httpOnly","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":5018,"name":"secure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":5019,"name":"sameSite","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"sameSite flag"}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"Lax"},{"type":"literal","value":"Strict"},{"type":"literal","value":"None"}]}}],"groups":[{"title":"Properties","children":[5012,5013,5014,5015,5016,5017,5018,5019]}],"sources":[]}}}},{"id":5020,"name":"origins","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"localStorage to set for context"}]},"sources":[],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5021,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5022,"name":"origin","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5023,"name":"localStorage","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":5024,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5025,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":5026,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[5025,5026]}],"sources":[]}}}}],"groups":[{"title":"Properties","children":[5022,5023]}],"sources":[]}}}}],"groups":[{"title":"Properties","children":[5010,5020]}],"sources":[]}}]},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.storageState"}},{"id":5027,"name":"strictSelectors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set to true, enables strict selectors mode for this context. In the strict selectors mode all operations on\\nselectors that imply single target DOM element will throw when more than one element matches the selector. This\\noption does not affect any Locator APIs (Locators are always strict). Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":". See "},{"kind":"inline-tag","tag":"@link","text":"Locator","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"tsLinkText":""},{"kind":"text","text":" to\\nlearn more about the strict mode."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.strictSelectors"}},{"id":5028,"name":"timezoneId","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Changes the timezone of the context. See\\n[ICU\'s metaZones.txt](https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt?rcl=faee8bc70570192d82d2978a71e2a615788597d1)\\nfor a list of supported timezone IDs. Defaults to the system timezone."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.timezoneId"}},{"id":5029,"name":"userAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specific user agent to use in this context."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.userAgent"}},{"id":5030,"name":"videoSize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`recordVideo`"},{"kind":"text","text":" instead."}]}]},"sources":[],"type":{"type":"reflection","declaration":{"id":5031,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5032,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame width."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":5033,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame height."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5032,5033]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.videoSize"}},{"id":5034,"name":"videosPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`recordVideo`"},{"kind":"text","text":" instead."}]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.videosPath"}},{"id":5035,"name":"viewport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates consistent viewport for each page. Defaults to an 1280x720 viewport. Use "},{"kind":"code","text":"`null`"},{"kind":"text","text":" to disable the consistent\\nviewport emulation. Learn more about [viewport emulation](https://playwright.dev/docs/emulation#viewport).\\n\\n**NOTE** The "},{"kind":"code","text":"`null`"},{"kind":"text","text":" value opts out from the default presets, makes viewport depend on the host window size defined\\nby the operating system. It makes the execution of the tests non-deterministic."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"ViewportSize"},"name":"ViewportSize","package":"playwright-core"},"inheritedFrom":{"type":"reference","target":-1,"name":"playwright.BrowserContextOptions.viewport"}}],"groups":[{"title":"Properties","children":[4952,4953,4954,4955,4956,4957,4958,4965,4966,4967,4971,4972,4973,4974,4975,4976,4977,4978,4979,4980,4981,4982,4988,4995,5002,5003,5007,5008,5027,5028,5029,5030,5034,5035]}],"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":11,"character":17}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"BrowserContextOptions"},"name":"BrowserContextOptions","package":"playwright-core"}],"permalink":"/api/playwright/interface/PlaywrightOptions","previousId":5036,"nextId":5187},{"id":5036,"name":"BrowseTheWebWithPlaywright","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This implementation of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nenables the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to interact with web front-ends using [Playwright](https://playwright.dev/).\\n\\n## Using Playwright to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\nIn the example below, we configure the ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/) with a Playwright\\n["},{"kind":"code","text":"`Browser`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser) so that Serenity/JS [actors](/api/core/class/Actor/)\\ncan create a new ["},{"kind":"code","text":"`BrowserContext`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browsercontext) and\\ninstantiate Playwright ["},{"kind":"code","text":"`page`"},{"kind":"text","text":"s](https://playwright.dev/docs/api/class-page) as and when needed.\\n\\nThis configuration allows Serenity/JS to control the process of launching and shutting down browser instances\\nand is useful when your test runner, e.g. [Cucumber.js](/api/cucumber), doesn\'t offer this functionality.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\nconst browser = await chromium.launch({ headless: true });\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" with an existing Playwright "},{"kind":"code","text":"`page`"},{"kind":"text","text":"\\n\\nTest runners like [Playwright Test](/api/playwright-test/) manage Playwright browsers for you\\nand offer a ["},{"kind":"code","text":"`page`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-page) instance you can\\ninject into the ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/).\\n\\nNote that [Serenity/JS Playwright Test module](/api/playwright-test/)\\nautomatically configures all your [actors](/api/core/class/Actor/)\\nwith an ability to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/),\\nso you don\'t need to do it by hand unless you want to override the [default configuration](/api/playwright-test/interface/SerenityOptions/).\\n\\nThe example below demonstrates how to use the ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright.usingPage`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/#usingPage) API and\\noverride the default [cast](/api/core/class/Cast/) of actors.\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, test } from \'@playwright/playwright-test\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\ndescribe(\'Serenity/JS with Playwright\', () => {\\n\\n  test.use({\\n    actors: async ({ page, contextOptions }, use) => {\\n      await use(\\n        Cast.where((actorName: string) => {\\n          return actor.whoCan(\\n            BrowseTheWebWithPlaywright.usingPage(page),\\n            // ... add any other abilities\\n          )\\n        })\\n      )\\n    }\\n  })\\n\\n  it(\'lets you reuse an existing page\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      Navigate.to(`https://serenity-js.org`),\\n      Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Configuring Playwright\\n\\nIf you\'re using Serenity/JS with [Playwright Test](/handbook/test-runners/playwright-test/),\\nSerenity/JS will automatically pick up your configuration from the ["},{"kind":"code","text":"`playwright.config.ts`"},{"kind":"text","text":"](https://playwright.dev/docs/test-configuration) file.\\n\\nWith other [test runners](/handbook/test-runners/), you can configure Playwright by:\\n- providing the browser-level configuration when calling ["},{"kind":"code","text":"`BrowserType.launch`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browsertype#browser-type-launch),\\n- providing the browser context-level ["},{"kind":"code","text":"`PlaywrightOptions`"},{"kind":"text","text":"](/api/playwright/interface/PlaywrightOptions/)\\nwhen initialising the ability to "},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":".\\n\\nThe code snippet below demonstrates how to configure the browser and some popular browser context options,\\nsuch as\\n["},{"kind":"code","text":"`viewport`"},{"kind":"text","text":" size](https://playwright.dev/docs/api/class-browser#browser-new-context-option-viewport),\\n["},{"kind":"code","text":"`geolocation`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-page-option-geolocation),\\nand ["},{"kind":"code","text":"`permissions`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-page-option-permissions),\\nbut you can use it to configure any other option available in Playwright, like\\n["},{"kind":"code","text":"`userAgent`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context-option-user-agent)\\nor ["},{"kind":"code","text":"`storageState`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context-option-storage-state).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Navigate } from \'@serenity-js/web\'\\nimport { Browser, chromium } from \'playwright\'\\n\\n// specify browser launch options\\nconst browser = await chromium.launch({\\n  headless: true\\n});\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser, {\\n     // specify browser context options\\n     viewport:    { width: 1600, height: 1200 },\\n     geolocation: { longitude: 51.50084271042897, latitude: -0.12462540129500639 },\\n     permissions: [ \'geolocation\' ],\\n\\n     defaultNavigationTimeout: 30_000,\\n     defaultTimeout: 10_000\\n\\n     // ... and so on\\n  }))\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    // ...\\n  )\\n```"},{"kind":"text","text":"\\n\\nNote that in addition to all the standard Playwright BrowserContextOptions, you can also provide several others defined in Serenity/JS ["},{"kind":"code","text":"`PlaywrightOptions`"},{"kind":"text","text":"](/api/playwright/interface/PlaywrightOptions/), such as:\\n- "},{"kind":"code","text":"`defaultNavigationTimeout`"},{"kind":"text","text":", which changes the default maximum navigation timeout for the browser context,\\n- "},{"kind":"code","text":"`defaultTimeout`"},{"kind":"text","text":", which changes the default maximum time for all Playwright methods accepting the "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":" option.\\n\\n## Learn more\\n- [Full list of Playwright "},{"kind":"code","text":"`BrowserContextOptions`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser#browser-new-context)\\n- [Playwright website](https://playwright.dev/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":5037,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":159,"character":11}],"signatures":[{"id":5038,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":159,"character":11}],"parameters":[{"id":5039,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Browser"},"name":"Browser","package":"playwright-core"}},{"id":5040,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":4951,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":5036,"name":"BrowseTheWebWithPlaywright","package":"@serenity-js/playwright"}}]},{"id":5041,"name":"usingPage","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":163,"character":11}],"signatures":[{"id":5042,"name":"usingPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":163,"character":11}],"parameters":[{"id":5043,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}},{"id":5044,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":4951,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":5036,"name":"BrowseTheWebWithPlaywright","package":"@serenity-js/playwright"}}]},{"id":5053,"name":"discard","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":174,"character":10}],"signatures":[{"id":5054,"name":"discard","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Automatically closes any open [pages](/api/web/class/Page/) when the [SceneFinishes](/api/core-events/class/SceneFinishes/)\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`PlaywrightBrowsingSession.closeAllPages`"},{"kind":"text","text":"](/api/playwright/class/PlaywrightBrowsingSession/#closeAllPages)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)"}]},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":174,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}}],"implementationOf":{"type":"reference","target":-1,"name":"Discardable.discard"}},{"id":5050,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"signatures":[{"id":5051,"name":"new BrowseTheWebWithPlaywright","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"parameters":[{"id":5052,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3702,"typeArguments":[{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}}],"type":{"type":"reference","target":5036,"name":"BrowseTheWebWithPlaywright","package":"@serenity-js/playwright"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<playwright.Locator>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<playwright.Locator>.constructor"}},{"id":5056,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"signatures":[{"id":5057,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}},{"id":5058,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"signatures":[{"id":5059,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}},{"id":5060,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"signatures":[{"id":5061,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3698,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[5050]},{"title":"Methods","children":[5037,5041,5053,5056,5058,5060]}],"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":157,"character":13}],"extendedTypes":[{"type":"reference","target":3092,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"BrowseTheWeb","package":"@serenity-js/web"}],"implementedTypes":[{"type":"reference","target":520,"name":"Discardable","package":"@serenity-js/core"}],"permalink":"/api/playwright/class/BrowseTheWebWithPlaywright","nextId":4951},{"id":5187,"name":"PlaywrightBrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"children":[{"id":5196,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":34,"character":20}],"signatures":[{"id":5197,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability.\\n\\n**Please note** that since Playwright does not expose information about the operating system\\nthe tests are running on, **Serenity/JS assumes that the tests are running locally**\\nand therefore returns the value of Node.js "},{"kind":"code","text":"`process.platform`"},{"kind":"text","text":" for "},{"kind":"code","text":"`platformName`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":34,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3698,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}},{"id":5198,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"signatures":[{"id":5199,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"parameters":[{"id":5200,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3733,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5201,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"signatures":[{"id":5202,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"parameters":[{"id":5203,"name":"cookie","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3839,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5204,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"signatures":[{"id":5205,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5213,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5214,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5215,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}},{"id":5218,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"signatures":[{"id":5219,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}},{"id":5220,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5221,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5222,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}},{"id":5223,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5224,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5225,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}},{"id":5226,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"signatures":[{"id":5227,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}},{"id":5228,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5229,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}},{"id":5230,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"signatures":[{"id":5231,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"parameters":[{"id":5232,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}},{"id":5233,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"signatures":[{"id":5234,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"groups":[{"title":"Methods","children":[5196,5198,5201,5204,5213,5218,5220,5223,5226,5228,5230,5233]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":15,"character":22}],"extendedTypes":[{"type":"reference","target":3702,"typeArguments":[{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"BrowsingSession","package":"@serenity-js/web"}],"extendedBy":[{"type":"reference","target":5235,"name":"PlaywrightBrowsingSessionWithBrowser"},{"type":"reference","target":5284,"name":"PlaywrightBrowsingSessionWithPage"}],"permalink":"/api/playwright/class/PlaywrightBrowsingSession","previousId":4951,"nextId":5235},{"id":5235,"name":"PlaywrightBrowsingSessionWithBrowser","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":5254,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"signatures":[{"id":5255,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"parameters":[{"id":5256,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3733,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5199,"name":"PlaywrightBrowsingSession.cookie"}}],"inheritedFrom":{"type":"reference","target":5198,"name":"PlaywrightBrowsingSession.cookie"}},{"id":5257,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"signatures":[{"id":5258,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"parameters":[{"id":5259,"name":"cookie","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3839,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5202,"name":"PlaywrightBrowsingSession.setCookie"}}],"inheritedFrom":{"type":"reference","target":5201,"name":"PlaywrightBrowsingSession.setCookie"}},{"id":5260,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"signatures":[{"id":5261,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5205,"name":"PlaywrightBrowsingSession.deleteAllCookies"}}],"inheritedFrom":{"type":"reference","target":5204,"name":"PlaywrightBrowsingSession.deleteAllCookies"}},{"id":5236,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":13,"character":4}],"signatures":[{"id":5237,"name":"new PlaywrightBrowsingSessionWithBrowser","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":13,"character":4}],"parameters":[{"id":5238,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Browser"},"name":"Browser","package":"playwright-core"}},{"id":5239,"name":"browserContextOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4951,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}},{"id":5240,"name":"selectors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Selectors"},"name":"Selectors","package":"playwright-core"}}],"type":{"type":"reference","target":5235,"name":"PlaywrightBrowsingSessionWithBrowser","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}},{"id":5247,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":39,"character":19}],"signatures":[{"id":5248,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":39,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5234,"name":"PlaywrightBrowsingSession.closeAllPages"}}],"overwrites":{"type":"reference","target":5233,"name":"PlaywrightBrowsingSession.closeAllPages"}},{"id":5249,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":46,"character":19}],"signatures":[{"id":5250,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability.\\n\\n**Please note** that since Playwright does not expose information about the operating system\\nthe tests are running on, **Serenity/JS assumes that the tests are running locally**\\nand therefore returns the value of Node.js "},{"kind":"code","text":"`process.platform`"},{"kind":"text","text":" for "},{"kind":"code","text":"`platformName`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":46,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3698,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5197,"name":"PlaywrightBrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":5196,"name":"PlaywrightBrowsingSession.browserCapabilities"}},{"id":5266,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5267,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5268,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5214,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":5213,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}},{"id":5269,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"signatures":[{"id":5270,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5219,"name":"PlaywrightBrowsingSession.currentPage"}}],"inheritedFrom":{"type":"reference","target":5218,"name":"PlaywrightBrowsingSession.currentPage"}},{"id":5271,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5272,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5273,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5221,"name":"PlaywrightBrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":5220,"name":"PlaywrightBrowsingSession.register"}},{"id":5274,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5275,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5276,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5224,"name":"PlaywrightBrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":5223,"name":"PlaywrightBrowsingSession.deregister"}},{"id":5277,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"signatures":[{"id":5278,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5227,"name":"PlaywrightBrowsingSession.allPages"}}],"inheritedFrom":{"type":"reference","target":5226,"name":"PlaywrightBrowsingSession.allPages"}},{"id":5279,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5280,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":5229,"name":"PlaywrightBrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":5228,"name":"PlaywrightBrowsingSession.registeredPageIds"}},{"id":5281,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"signatures":[{"id":5282,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"parameters":[{"id":5283,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5231,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"inheritedFrom":{"type":"reference","target":5230,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"groups":[{"title":"Constructors","children":[5236]},{"title":"Methods","children":[5254,5257,5260,5247,5249,5266,5269,5271,5274,5277,5279,5281]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":5187,"name":"PlaywrightBrowsingSession","package":"@serenity-js/playwright"}],"permalink":"/api/playwright/class/PlaywrightBrowsingSessionWithBrowser","previousId":5187,"nextId":5284},{"id":5284,"name":"PlaywrightBrowsingSessionWithPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":5304,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"signatures":[{"id":5305,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10}],"parameters":[{"id":5306,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3733,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5199,"name":"PlaywrightBrowsingSession.cookie"}}],"inheritedFrom":{"type":"reference","target":5198,"name":"PlaywrightBrowsingSession.cookie"}},{"id":5307,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"signatures":[{"id":5308,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":41,"character":10}],"parameters":[{"id":5309,"name":"cookie","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3839,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5202,"name":"PlaywrightBrowsingSession.setCookie"}}],"inheritedFrom":{"type":"reference","target":5201,"name":"PlaywrightBrowsingSession.setCookie"}},{"id":5310,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"signatures":[{"id":5311,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5205,"name":"PlaywrightBrowsingSession.deleteAllCookies"}}],"inheritedFrom":{"type":"reference","target":5204,"name":"PlaywrightBrowsingSession.deleteAllCookies"}},{"id":5285,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":15,"character":4}],"signatures":[{"id":5286,"name":"new PlaywrightBrowsingSessionWithPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":15,"character":4}],"parameters":[{"id":5287,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}},{"id":5288,"name":"browserContextOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4951,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}},{"id":5289,"name":"selectors","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Selectors"},"name":"Selectors","package":"playwright-core"}}],"type":{"type":"reference","target":5284,"name":"PlaywrightBrowsingSessionWithPage","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"PlaywrightBrowsingSession.constructor"}},{"id":5297,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":40,"character":10}],"signatures":[{"id":5298,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes any newly opened pages, leaving only the original one managed by Playwright Test."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":40,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5234,"name":"PlaywrightBrowsingSession.closeAllPages"}}],"overwrites":{"type":"reference","target":5233,"name":"PlaywrightBrowsingSession.closeAllPages"}},{"id":5299,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":51,"character":19}],"signatures":[{"id":5300,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability.\\n\\n**Please note** that since Playwright does not expose information about the operating system\\nthe tests are running on, **Serenity/JS assumes that the tests are running locally**\\nand therefore returns the value of Node.js "},{"kind":"code","text":"`process.platform`"},{"kind":"text","text":" for "},{"kind":"code","text":"`platformName`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":51,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3698,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":5197,"name":"PlaywrightBrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":5196,"name":"PlaywrightBrowsingSession.browserCapabilities"}},{"id":5316,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5317,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5318,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5214,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":5213,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}},{"id":5319,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"signatures":[{"id":5320,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":27,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5219,"name":"PlaywrightBrowsingSession.currentPage"}}],"inheritedFrom":{"type":"reference","target":5218,"name":"PlaywrightBrowsingSession.currentPage"}},{"id":5321,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5322,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5323,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5221,"name":"PlaywrightBrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":5220,"name":"PlaywrightBrowsingSession.register"}},{"id":5324,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5325,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5326,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":5224,"name":"PlaywrightBrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":5223,"name":"PlaywrightBrowsingSession.deregister"}},{"id":5327,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"signatures":[{"id":5328,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":45,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5227,"name":"PlaywrightBrowsingSession.allPages"}}],"inheritedFrom":{"type":"reference","target":5226,"name":"PlaywrightBrowsingSession.allPages"}},{"id":5329,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5330,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":5229,"name":"PlaywrightBrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":5228,"name":"PlaywrightBrowsingSession.registeredPageIds"}},{"id":5331,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"signatures":[{"id":5332,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":68,"character":4}],"parameters":[{"id":5333,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":5231,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"inheritedFrom":{"type":"reference","target":5230,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"groups":[{"title":"Constructors","children":[5285]},{"title":"Methods","children":[5304,5307,5310,5297,5299,5316,5319,5321,5324,5327,5329,5331]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":5187,"name":"PlaywrightBrowsingSession","package":"@serenity-js/playwright"}],"permalink":"/api/playwright/class/PlaywrightBrowsingSessionWithPage","previousId":5235,"nextId":5334},{"id":5334,"name":"PlaywrightCookie","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)."}]},"children":[{"id":5413,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":14,"character":4}],"signatures":[{"id":5414,"name":"new PlaywrightCookie","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":14,"character":4}],"parameters":[{"id":5415,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"BrowserContext"},"name":"BrowserContext","package":"playwright-core"}},{"id":5416,"name":"cookieName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":5334,"name":"PlaywrightCookie","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}},{"id":5418,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":22,"character":10}],"signatures":[{"id":5419,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":22,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}},{"id":5423,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"signatures":[{"id":5424,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}},{"id":5425,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"signatures":[{"id":5426,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}},{"id":5427,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"signatures":[{"id":5428,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}},{"id":5429,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"signatures":[{"id":5430,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}},{"id":5431,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"signatures":[{"id":5432,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}},{"id":5433,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"signatures":[{"id":5434,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}},{"id":5435,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"signatures":[{"id":5436,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}},{"id":5437,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"signatures":[{"id":5438,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"groups":[{"title":"Constructors","children":[5413]},{"title":"Methods","children":[5418,5423,5425,5427,5429,5431,5433,5435,5437]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":12,"character":13}],"extendedTypes":[{"type":"reference","target":3733,"name":"Cookie","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightCookie","previousId":5284,"nextId":5439},{"id":5439,"name":"PlaywrightPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"children":[{"id":5440,"name":"current","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":35,"character":20}],"signatures":[{"id":5441,"name":"current","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":35,"character":20}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"}],"name":"QuestionAdapter","package":"@serenity-js/core"},"overwrites":{"type":"reference","target":-1,"name":"Page.current"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.current"}},{"id":5451,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":39,"character":4}],"signatures":[{"id":5452,"name":"new PlaywrightPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":39,"character":4}],"parameters":[{"id":5453,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5187,"name":"PlaywrightBrowsingSession","package":"@serenity-js/playwright"}},{"id":5454,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}},{"id":5455,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4951,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}},{"id":5456,"name":"pageId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":5439,"name":"PlaywrightPage","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"Page<playwright.Locator>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Page<playwright.Locator>.constructor"}},{"id":5461,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":53,"character":4}],"signatures":[{"id":5462,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":53,"character":4}],"parameters":[{"id":5463,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}},{"id":5464,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":63,"character":4}],"signatures":[{"id":5465,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":63,"character":4}],"parameters":[{"id":5466,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}},{"id":5467,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":72,"character":4}],"signatures":[{"id":5468,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":72,"character":4}],"parameters":[{"id":5469,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4264,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElements","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}},{"id":5470,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":83,"character":10}],"signatures":[{"id":5471,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":83,"character":10}],"parameters":[{"id":5472,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}},{"id":5473,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":88,"character":10}],"signatures":[{"id":5474,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":88,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}},{"id":5475,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":93,"character":10}],"signatures":[{"id":5476,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":93,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}},{"id":5477,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":98,"character":10}],"signatures":[{"id":5478,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":98,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}},{"id":5479,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":103,"character":10}],"signatures":[{"id":5480,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":103,"character":10}],"parameters":[{"id":5481,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}},{"id":5482,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":117,"character":10}],"signatures":[{"id":5483,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":117,"character":10}],"typeParameter":[{"id":5484,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":5485,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":5486,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5487,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":118,"character":26}],"signatures":[{"id":5488,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":118,"character":26}],"parameters":[{"id":5489,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":5485,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":5484,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}}]}}]}},{"id":5490,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":5485,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5484,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}},{"id":5491,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":10}],"signatures":[{"id":5492,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":10}],"typeParameter":[{"id":5493,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":5494,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":5495,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5496,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":85}],"signatures":[{"id":5497,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":85}],"parameters":[{"id":5498,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":5494,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":5499,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":137}],"signatures":[{"id":5500,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":145,"character":137}],"parameters":[{"id":5501,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5493,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":5502,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":5494,"name":"InnerArguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5493,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}},{"id":5503,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":177,"character":4}],"signatures":[{"id":5504,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":177,"character":4}],"typeParameter":[{"id":5505,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":5505,"name":"Result","package":"@serenity-js/playwright","refersToTypeParameter":true},"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}},{"id":5506,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":185,"character":10}],"signatures":[{"id":5507,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":185,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}},{"id":5508,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":204,"character":10}],"signatures":[{"id":5509,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":204,"character":10}],"parameters":[{"id":5510,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3733,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}},{"id":5511,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":208,"character":10}],"signatures":[{"id":5512,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":208,"character":10}],"parameters":[{"id":5513,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3839,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}},{"id":5514,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":230,"character":10}],"signatures":[{"id":5515,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":230,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}},{"id":5516,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":234,"character":10}],"signatures":[{"id":5517,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":234,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.title"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.title"}},{"id":5518,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":239,"character":10}],"signatures":[{"id":5519,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":239,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.name"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.name"}},{"id":5520,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":246,"character":10}],"signatures":[{"id":5521,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":246,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.url"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.url"}},{"id":5522,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":10}],"signatures":[{"id":5523,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":5524,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5525,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":36}],"type":{"type":"intrinsic","name":"number"}},{"id":5526,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":51}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5525,5526]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":34}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}},{"id":5527,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":10}],"signatures":[{"id":5528,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":10}],"parameters":[{"id":5529,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":5530,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5531,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":34}],"type":{"type":"intrinsic","name":"number"}},{"id":5532,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":49}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5531,5532]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":255,"character":32}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}},{"id":5533,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":259,"character":10}],"signatures":[{"id":5534,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":259,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.close"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.close"}},{"id":5535,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":265,"character":10}],"signatures":[{"id":5536,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":265,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}},{"id":5537,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":269,"character":4}],"signatures":[{"id":5538,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":269,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}},{"id":5539,"name":"nativePage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":273,"character":10}],"signatures":[{"id":5540,"name":"nativePage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":273,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5548,"name":"id","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":132,"character":13}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.id"}},{"id":5549,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"signatures":[{"id":5550,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4636,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}},{"id":5551,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"signatures":[{"id":5552,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"type":{"type":"reference","target":3940,"name":"ModalDialogHandler","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}},{"id":5553,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"signatures":[{"id":5554,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"groups":[{"title":"Constructors","children":[5451]},{"title":"Properties","children":[5548]},{"title":"Methods","children":[5440,5461,5464,5467,5470,5473,5475,5477,5479,5482,5491,5503,5506,5508,5511,5514,5516,5518,5520,5522,5527,5533,5535,5537,5539,5549,5551,5553]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":21,"character":13}],"extendedTypes":[{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"Page","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightPage","previousId":5334,"nextId":5555},{"id":5555,"name":"PlaywrightPageElement","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"children":[{"id":5575,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":16,"character":4}],"signatures":[{"id":5576,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":16,"character":4}],"parameters":[{"id":5577,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}},{"id":5578,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":20,"character":4}],"signatures":[{"id":5579,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":20,"character":4}],"parameters":[{"id":5580,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}},{"id":5581,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":24,"character":10}],"signatures":[{"id":5582,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":24,"character":10}],"parameters":[{"id":5583,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}},{"id":5584,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":31,"character":10}],"signatures":[{"id":5585,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":31,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}},{"id":5586,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":41,"character":10}],"signatures":[{"id":5587,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":41,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}},{"id":5588,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":46,"character":10}],"signatures":[{"id":5589,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":46,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}},{"id":5590,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":51,"character":10}],"signatures":[{"id":5591,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":51,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}},{"id":5592,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":56,"character":10}],"signatures":[{"id":5593,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":56,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}},{"id":5594,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":61,"character":10}],"signatures":[{"id":5595,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":61,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}},{"id":5596,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":66,"character":10}],"signatures":[{"id":5597,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":66,"character":10}],"parameters":[{"id":5598,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4503,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}},{"id":5599,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":79,"character":10}],"signatures":[{"id":5600,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":79,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4503,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}},{"id":5601,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":101,"character":10}],"signatures":[{"id":5602,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":101,"character":10}],"parameters":[{"id":5603,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}},{"id":5604,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":106,"character":10}],"signatures":[{"id":5605,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":106,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}},{"id":5606,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":111,"character":10}],"signatures":[{"id":5607,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":111,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}},{"id":5608,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":116,"character":10}],"signatures":[{"id":5609,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":116,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}},{"id":5610,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":121,"character":10}],"signatures":[{"id":5611,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":121,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4636,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}},{"id":5612,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":156,"character":10}],"signatures":[{"id":5613,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":156,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}},{"id":5614,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":167,"character":10}],"signatures":[{"id":5615,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":167,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}},{"id":5616,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":178,"character":10}],"signatures":[{"id":5617,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":178,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}},{"id":5618,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":187,"character":10}],"signatures":[{"id":5619,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":187,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}},{"id":5620,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":205,"character":10}],"signatures":[{"id":5621,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":205,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}},{"id":5622,"name":"locator","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":19,"character":13}],"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.locator"}},{"id":5572,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"signatures":[{"id":5573,"name":"new PlaywrightPageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"parameters":[{"id":5574,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":5555,"name":"PlaywrightPageElement","package":"@serenity-js/playwright"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<playwright.Locator>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<playwright.Locator>.constructor"}},{"id":5623,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"signatures":[{"id":5624,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}},{"id":5625,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"signatures":[{"id":5626,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}},{"id":5627,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":181,"character":4}],"signatures":[{"id":5628,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the element\\nis present in the [Document Object Model (DOM)](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model),\\n"},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":181,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"groups":[{"title":"Constructors","children":[5572]},{"title":"Properties","children":[5622]},{"title":"Methods","children":[5575,5578,5581,5584,5586,5588,5590,5592,5594,5596,5599,5601,5604,5606,5608,5610,5612,5614,5616,5618,5620,5623,5625,5627]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":15,"character":13}],"extendedTypes":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"PageElement","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightPageElement","previousId":5439,"nextId":5062},{"id":5062,"name":"PlaywrightLocator","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/)."}]},"children":[{"id":5063,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":18,"character":4}],"signatures":[{"id":5064,"name":"new PlaywrightLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":18,"character":4}],"parameters":[{"id":5065,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4479,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"RootLocator","package":"@serenity-js/web"}},{"id":5066,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":5062,"name":"PlaywrightLocator","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"Locator<playwright.Locator, string>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator<playwright.Locator, string>.constructor"}},{"id":5069,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":54,"character":10}],"signatures":[{"id":5070,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":54,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.isPresent"}},{"id":5071,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":76,"character":10}],"signatures":[{"id":5072,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":76,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.nativeElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.nativeElement"}},{"id":5073,"name":"allNativeElements","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":82,"character":10}],"signatures":[{"id":5074,"name":"allNativeElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":82,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.allNativeElements"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.allNativeElements"}},{"id":5075,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":92,"character":4}],"signatures":[{"id":5076,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":92,"character":4}],"parameters":[{"id":5077,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5156,"name":"PlaywrightRootLocator","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.of"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.of"}},{"id":5078,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":96,"character":4}],"signatures":[{"id":5079,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":96,"character":4}],"parameters":[{"id":5080,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5062,"name":"PlaywrightLocator","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.closestTo"}},{"id":5081,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":100,"character":4}],"signatures":[{"id":5082,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":100,"character":4}],"parameters":[{"id":5083,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5062,"name":"PlaywrightLocator","package":"@serenity-js/playwright"}}],"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.locate"}},{"id":5084,"name":"element","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":104,"character":4}],"signatures":[{"id":5085,"name":"element","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":104,"character":4}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Locator.element"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.element"}},{"id":5086,"name":"allElements","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":108,"character":10}],"signatures":[{"id":5087,"name":"allElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":108,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Locator.allElements"}}],"overwrites":{"type":"reference","target":-1,"name":"Locator.allElements"}},{"id":5089,"name":"selector","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":19,"character":13}],"type":{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.selector"}},{"id":5090,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":23,"character":4}],"signatures":[{"id":5091,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":23,"character":4}],"parameters":[{"id":5092,"name":"element","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToFrame"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToFrame"}},{"id":5093,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":24,"character":4}],"signatures":[{"id":5094,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":24,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToParentFrame"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToParentFrame"}},{"id":5095,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":25,"character":4}],"signatures":[{"id":5096,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":25,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToMainFrame"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.switchToMainFrame"}},{"id":5100,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":42,"character":4}],"signatures":[{"id":5101,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":42,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.toString"}},{"id":5102,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Custom [Node.js inspection method](https://nodejs.org/api/util.html#utilinspectcustom)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":46,"character":4}],"type":{"type":"reflection","declaration":{"id":5103,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":46,"character":27}],"signatures":[{"id":5104,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.ts","line":46,"character":27}],"parameters":[{"id":5105,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":5106,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":5107,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Locator.[custom]"}}],"groups":[{"title":"Constructors","children":[5063]},{"title":"Properties","children":[5089,5102]},{"title":"Methods","children":[5069,5071,5073,5075,5078,5081,5084,5086,5090,5093,5095,5100]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"},{"type":"intrinsic","name":"string"}],"name":"Locator","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightLocator","previousId":5555,"nextId":5156},{"id":5156,"name":"PlaywrightRootLocator","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of ["},{"kind":"code","text":"`RootLocator`"},{"kind":"text","text":"](/api/web/class/RootLocator/)."}]},"children":[{"id":5157,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":17,"character":4}],"signatures":[{"id":5158,"name":"new PlaywrightRootLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":17,"character":4}],"parameters":[{"id":5159,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Page"},"name":"Page","package":"playwright-core"}}],"type":{"type":"reference","target":5156,"name":"PlaywrightRootLocator","package":"@serenity-js/playwright"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator<playwright.Locator>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator<playwright.Locator>.constructor"}},{"id":5162,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":22,"character":10}],"signatures":[{"id":5163,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":22,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.isPresent"}},{"id":5164,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":26,"character":4}],"signatures":[{"id":5165,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":26,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"},{"type":"literal","value":"locator"}],"name":"Pick","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.nativeElement"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.nativeElement"}},{"id":5166,"name":"evaluate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":37,"character":4},{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":38,"character":4}],"signatures":[{"id":5167,"name":"evaluate","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Evaluates the given "},{"kind":"code","text":"`pageFunction`"},{"kind":"text","text":" in the context of the current frame.\\nSee ["},{"kind":"code","text":"`playwright.Frame.evaluate`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-frame#frame-evaluate)."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":37,"character":4}],"typeParameter":[{"id":5168,"name":"R","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":5169,"name":"Arguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":5170,"name":"pageFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/structs.d.ts","qualifiedName":"PageFunction"},"typeArguments":[{"type":"reference","target":5169,"name":"Arguments","package":"@serenity-js/playwright","refersToTypeParameter":true},{"type":"reference","target":5168,"name":"R","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"PageFunction","package":"playwright-core"}},{"id":5171,"name":"arg","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5169,"name":"Arguments","package":"@serenity-js/playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5168,"name":"R","package":"@serenity-js/playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5172,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":47,"character":10}],"signatures":[{"id":5173,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current context to the frame identified by the given locator."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":47,"character":10}],"parameters":[{"id":5174,"name":"frame","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"Locator","package":"playwright-core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToFrame"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToFrame"}},{"id":5175,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":55,"character":10}],"signatures":[{"id":5176,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current context to the parent frame of the current frame."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":55,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToParentFrame"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToParentFrame"}},{"id":5177,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":62,"character":10}],"signatures":[{"id":5178,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the context to the top-level frame."}]},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":62,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToMainFrame"}}],"overwrites":{"type":"reference","target":-1,"name":"RootLocator.switchToMainFrame"}},{"id":5179,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":21,"character":4}],"signatures":[{"id":5180,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":21,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RootLocator.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"RootLocator.toString"}},{"id":5181,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":22,"character":4}],"type":{"type":"reflection","declaration":{"id":5182,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":22,"character":27}],"signatures":[{"id":5183,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.ts","line":22,"character":27}],"parameters":[{"id":5184,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":5185,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":5186,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"RootLocator.[custom]"}}],"groups":[{"title":"Constructors","children":[5157]},{"title":"Properties","children":[5181]},{"title":"Methods","children":[5162,5164,5166,5172,5175,5177,5179]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":4479,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright-core/types/types.d.ts","qualifiedName":"Locator"},"name":"playwright.Locator","package":"playwright-core","qualifiedName":"Locator"}],"name":"RootLocator","package":"@serenity-js/web"}],"permalink":"/api/playwright/class/PlaywrightRootLocator","previousId":5062}],"groups":[{"title":"Abilities","children":[5036]},{"title":"Configuration","children":[4951]},{"title":"Models","children":[5187,5235,5284,5334,5439,5555,5062,5156]}],"sources":[{"fileName":"packages/playwright/src/index.ts","line":1,"character":0}],"permalink":"/api/playwright"},"urlSlug":"playwright"}],"packageName":"@serenity-js/playwright","packageVersion":"3.25.4"},{"entryPoints":[{"index":true,"label":"index","reflection":{"id":48,"name":"@serenity-js/playwright-test","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":22361,"name":"DescribeFunction","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":5,"character":12}],"type":{"type":"intersection","types":[{"type":"reference","target":22402,"name":"SuiteFunction","package":"@serenity-js/playwright-test"},{"type":"reflection","declaration":{"id":22362,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22363,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-only). Any tests\\nadded in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":28,"character":4}],"type":{"type":"reference","target":22402,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":22364,"name":"skip","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Tests in the skipped\\ngroup are never run.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-skip). Any tests\\nadded in this callback will belong to the group, and will not be run."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":49,"character":4}],"type":{"type":"reference","target":22402,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":22365,"name":"fixme","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Tests in this group\\nare marked as \\"fixme\\" and will not be executed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-fixme). Any tests\\nadded in this callback will belong to the group, and will not be run."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":70,"character":4}],"type":{"type":"reference","target":22402,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":22366,"name":"serial","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are\\nskipped. All tests in a group are retried together.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-serial). Any tests\\nadded in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":95,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":22402,"name":"SuiteFunction","package":"@serenity-js/playwright-test"},{"type":"reflection","declaration":{"id":22367,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22368,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":123,"character":8}],"type":{"type":"reference","target":22402,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}}],"groups":[{"title":"Properties","children":[22368]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":95,"character":28}]}}]}},{"id":22369,"name":"parallel","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that could be run in parallel. By default, tests in a single test file run one after\\nanother, but using\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel) allows\\nthem to run in parallel.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nNote that parallel tests are executed in separate processes and cannot share any state or global variables. Each of\\nthe parallel tests executes all relevant hooks."}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel). Any\\ntests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":150,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":22402,"name":"SuiteFunction","package":"@serenity-js/playwright-test"},{"type":"reflection","declaration":{"id":22370,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22371,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel), but\\nfocuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":173,"character":8}],"type":{"type":"reference","target":22402,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}}],"groups":[{"title":"Properties","children":[22371]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":150,"character":30}]}}]}},{"id":22372,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the enclosing scope. Can be executed either on the top level or inside a describe. Configuration applies\\nto the entire scope, regardless of whether it run before or after the test declaration.\\n\\nLearn more about the execution modes [here](https://playwright.dev/docs/test-parallel).\\n\\n**Usage**\\n- Running tests in parallel.\\n\\n  "},{"kind":"code","text":"```js\\n  // Run all the tests in the file concurrently using parallel workers.\\n  test.describe.configure({ mode: \'parallel\' });\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests serially, retrying from the start.\\n\\n  **NOTE** Running serially is not recommended. It is usually better to make your tests isolated, so they can be\\n  run independently.\\n\\n  "},{"kind":"code","text":"```js\\n  // Annotate tests as inter-dependent.\\n  test.describe.configure({ mode: \'serial\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Configuring retries and timeout for each test.\\n\\n  "},{"kind":"code","text":"```js\\n  // Each test in the file will be retried twice and have a timeout of 20 seconds.\\n  test.describe.configure({ retries: 2, timeout: 20_000 });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Run multiple describes in parallel, but tests inside each describe in order.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe.configure({ mode: \'parallel\' });\\n\\n  test.describe(\'A, runs in parallel with B\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order A1\', async ({ page }) => {});\\n    test(\'in order A2\', async ({ page }) => {});\\n  });\\n\\n  test.describe(\'B, runs in parallel with A\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order B1\', async ({ page }) => {});\\n    test(\'in order B2\', async ({ page }) => {});\\n  });\\n  ```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":4}],"type":{"type":"reflection","declaration":{"id":22373,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":15}],"signatures":[{"id":22374,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"parameters":[{"id":22375,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22376,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22377,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":27}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"parallel"},{"type":"literal","value":"serial"}]}},{"id":22378,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":69}],"type":{"type":"intrinsic","name":"number"}},{"id":22379,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":87}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22377,22378,22379]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":25}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[22363,22364,22365,22366,22369,22372]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":5,"character":47}]}}]},"permalink":"/api/playwright-test#DescribeFunction","previousId":22358,"nextId":22380},{"id":22380,"name":"PlaywrightTestConfig","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Convenience alias for [PlaywrightTestConfig](https://playwright.dev/docs/test-configuration) object\\nthat includes ["},{"kind":"code","text":"`SerenityOptions`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/) and allows for any other custom options when needed.\\n\\n#### Example\\nConfiguring Playwright Test using the standard "},{"kind":"code","text":"`PlaywrightTestConfig`"},{"kind":"text","text":" from "},{"kind":"code","text":"`@playwright/test`"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@playwright/test\'\\nimport type { SerenityOptions } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig<SerenityOptions & MyCustomOptions> = {\\n    // ...\\n}\\n\\nexport default config\\n```"},{"kind":"text","text":"\\n\\nSimplified configuration using Serenity/JS "},{"kind":"code","text":"`PlaywrightTestConfig`"},{"kind":"text","text":" from "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig<MyCustomOptions> = {\\n   // ...\\n}\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityOptions`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- ["},{"kind":"code","text":"`SerenityReporterForPlaywrightTestConfig`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityReporterForPlaywrightTestConfig/)\\n- [Playwright Test configuration](https://playwright.dev/docs/test-configuration)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/PlaywrightTestConfig.ts","line":42,"character":12}],"typeParameters":[{"id":22381,"name":"TestArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"object"}},{"id":22382,"name":"WorkerArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestConfig"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"reference","target":22381,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]},{"type":"reference","target":22382,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"BasePlaywrightTestConfig","package":"playwright","qualifiedName":"PlaywrightTestConfig"},"permalink":"/api/playwright-test#PlaywrightTestConfig","previousId":22361,"nextId":22424},{"id":22383,"name":"SerenityFixtures","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS-specific [Playwright Test fixtures](https://playwright.dev/docs/test-fixtures)\\ninjected into your [test scenarios](/api/playwright-test/function/it/).\\n\\n## Example test scenario\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\ndescribe(`Recording items`, () => {\\n\\n    test.use({\\n        defaultActorName: \'Serena\',\\n        crew: [\\n            Photographer.whoWill(TakePhotosOfFailures),\\n        ],\\n    })\\n\\n    describe(`Todo List App`, () => {\\n\\n        it(`should allow me to add a todo item`, async ({ actor }) => {\\n            await actor.attemptsTo(\\n                startWithAnEmptyList(),\\n\\n                recordItem(\'Buy some milk\'),\\n\\n                Ensure.that(itemNames(), equals([\\n                    \'Buy some milk\',\\n                ])),\\n            )\\n        })\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Grouping test scenarios](/api/playwright-test/function/describe/)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"children":[{"id":22384,"name":"serenity","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the root object of the Serenity/JS framework."}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":50,"character":4}],"type":{"type":"reference","target":1839,"name":"Serenity","package":"@serenity-js/core"}},{"id":22385,"name":"platform","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name and version of the operating system that Playwright Test worker process runs on."}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":4}],"type":{"type":"reflection","declaration":{"id":22386,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22387,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":16}],"type":{"type":"intrinsic","name":"string"}},{"id":22388,"name":"version","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":30}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[22387,22388]}],"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":14}]}}},{"id":22389,"name":"actors","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A cast of Serenity/JS actors to be used instead of the default cast\\nwhen instantiating ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actor)\\nand invoking ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled).\\n\\n#### Overriding the default cast of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Cast, TakeNotes } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\n\\ndescribe(`Recording items`, () => {\\n\\n    test.use({\\n        defaultActorName: \'Serena\',\\n        actors: ({ browser, contextOptions }, use) => {\\n            const cast = Cast.where(actor =>\\n                actor.whoCan(\\n                    BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                    TakeNotes.usingAnEmptyNotepad(),\\n                )\\n            )\\n\\n            // Make sure to pass your custom cast to Playwright `use` callback\\n            use(cast)\\n        },\\n    })\\n\\n    describe(`Todo List App`, () => {\\n\\n        it(`should allow me to add a todo item`, async ({ actor }) => {\\n            await actor.attemptsTo(\\n                startWithAnEmptyList(),\\n\\n                recordItem(\'Buy some milk\'),\\n\\n                Ensure.that(itemNames(), equals([\\n                    \'Buy some milk\',\\n                ])),\\n            )\\n        })\\n    })\\n})\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":104,"character":4}],"type":{"type":"reference","target":1888,"name":"Cast","package":"@serenity-js/core"}},{"id":22390,"name":"actorCalled","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the provided [cast](/api/core/class/Cast/) of ["},{"kind":"code","text":"`actors`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actors) to instantiate an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) called "},{"kind":"code","text":"`name`"},{"kind":"text","text":"\\nand inject it into a [test scenario](/api/playwright-test/function/it/).\\n\\nRetrieves an existing actor if one has already been instantiated.\\n\\n#### Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- ["},{"kind":"code","text":"`SerenityOptions.actors`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/#actors)\\n- ["},{"kind":"code","text":"`SerenityFixtures.actors`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actors)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":119,"character":4}],"type":{"type":"reflection","declaration":{"id":22391,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":119,"character":17}],"signatures":[{"id":22392,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":119,"character":17}],"parameters":[{"id":22393,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}}]}}},{"id":22394,"name":"actor","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Default ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actor) injected into a [test scenario](/api/playwright-test/function/it/).\\n\\nUsing "},{"kind":"code","text":"`actor`"},{"kind":"text","text":" fixture is equivalent to invoking ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) with ["},{"kind":"code","text":"`defaultActorName`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/#defaultActorName).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled)\\n- ["},{"kind":"code","text":"`SerenityOptions.defaultActorName`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/#defaultActorName)\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":131,"character":4}],"type":{"type":"reference","target":594,"name":"Actor","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[22384,22385,22389,22390,22394]}],"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":45,"character":17}],"permalink":"/api/playwright-test/interface/SerenityFixtures","previousId":22418,"nextId":22395},{"id":22395,"name":"SerenityOptions","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration object accepted by "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":".\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { Cast, TakeNotes } from \'@serenity-js/core\'\\nimport type { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\nimport type { CallAnApi } from \'@serenity-js/rest\'\\n\\n// Define any custom configuration options, if needed\\ninterface MyCustomOptions {\\n    apiUrl: string;\\n}\\n\\nconst config: PlaywrightTestConfig<MyCustomOptions> = {\\n\\n    // Register Serenity/JS reporter for Playwright Test\\n    // to enable integration with Serenity/JS stage crew members\\n    // and have them instantiated in the Playwright reporter process\\n    reporter: [\\n        [ \'@serenity-js/playwright-test\', {\\n            // Stage crew members instantiated in the test reporter process\\n            crew: [\\n                \'@serenity-js/serenity-bdd\',\\n                \'@serenity-js/console-reporter\',\\n                [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n            ]\\n        }]\\n    ],\\n\\n    use: {\\n\\n        // Register Serenity/JS stage crew members\\n        // and have them instantiated in Playwright Test worker processes\\n        crew: [\\n            [ \'@serenity-js/web:Photographer\', { strategy: \'TakePhotosOfFailures\' } ]\\n        ],\\n\\n        // Register a custom cast of Serenity/JS actors\\n        // if you don\'t want to use the default ones\\n        actors: ({ browser, contextOptions, apiUrl }, use) => {\\n             const cast = Cast.where(actor =>\\n                 actor.whoCan(\\n                     BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                     TakeNotes.usingAnEmptyNotepad(),\\n                     CallAnApi.at(apiUrl),\\n                 )\\n             )\\n\\n             use(cast)\\n        },\\n\\n        // Name to be given to an actor injected via `actor` fixture\\n        defaultActorName: \'Alice\',\\n\\n        // Any custom options, as per the MyCustomOptions interface\\n        apiUrl: \'https://api.serenity-js.org/v1\'\\n\\n        // Any other Playwright options\\n        baseURL: \'https://todo-app.serenity-js.org/\',\\n        video: \'on-first-retry\',\\n        trace: \'on-first-retry\',\\n    },\\n}\\n\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PlaywrightTestConfig`"},{"kind":"text","text":"](/api/playwright-test/#PlaywrightTestConfig)\\n- ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)"}]},"children":[{"id":22396,"name":"actors","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Cast`"},{"kind":"text","text":"](/api/core/class/Cast/) of ["},{"kind":"code","text":"`SerenityConfig.actors|actors`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#actors) to be used when injecting an ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actor)\\nor invoking ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) in a [test scenario](/api/playwright-test/function/it/).\\n\\n:::info Did you know?\\nWhen you use "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":" [test APIs](/api/playwright-test/function/it/), Serenity/JS already provides a default cast of actors for you.\\nEach one of the default actors receives [abilities](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/) and ["},{"kind":"code","text":"`TakeNotes.usingAnEmptyNotepad`"},{"kind":"text","text":"](/api/core/class/TakeNotes/#usingAnEmptyNotepad).\\n\\nThe default abilities should be sufficient in most web testing scenarios. However, you might want to override this default configuration\\nwhen you need your actors to [interact with REST APIs](/api/rest/class/CallAnApi/),\\n[manage local servers](/api/local-server/class/ManageALocalServer/),\\nstart with a notepad that has some [initial state](/api/core/class/TakeNotes/#using),\\nor receive [custom abilities](/api/core/class/Ability/).\\n:::\\n\\n#### Using a custom crew of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\nimport { Cast, TakeNotes } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\n// Define any custom configuration options, if needed\\ninterface MyCustomOptions {\\n    apiUrl: string;\\n}\\n\\n// Parameterise PlaywrightTestConfig with MyCustomOptions\\n// to enable type checking of any custom properties\\nconst config: PlaywrightTestConfig<MyCustomOptions> = {\\n    use: {\\n        contextOptions: {\\n            defaultNavigationTimeout: 30_000,\\n        },\\n\\n        // custom properties\\n        apiUrl: \'https://api.serenity-js.org/v1\',\\n\\n        // Custom cast of actors receives `contextOptions`\\n        // with the additional Serenity/JS properties (see `PlaywrightOptions`),\\n        // as well as any other custom properties you define in the destructuring expression,\\n        // such as `apiUrl`.\\n        actors: ({ browser, contextOptions, apiUrl }, use) => {\\n            const cast = Cast.where(actor => actor.whoCan(\\n                BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                TakeNotes.usingAnEmptyNotepad(),\\n                CallAnApi.at(apiUrl),\\n            ))\\n\\n            // Make sure to pass your custom cast to Playwright `use` callback\\n            use(cast)\\n        },\\n    },\\n};\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":146,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestFixture"},"typeArguments":[{"type":"reference","target":1888,"name":"Cast","package":"@serenity-js/core"},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"}]}],"name":"TestFixture","package":"playwright"}},{"id":22397,"name":"defaultActorName","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the name given to the default Serenity/JS ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actor)\\ninjected into a [test scenario](/api/playwright-test/function/it/).\\n\\n#### Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":156,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":22398,"name":"crew","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`SerenityConfig.crew|stage crew members`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew|stage crew members)\\nto be instantiated in Playwright Test worker processes.\\n\\n:::info Did you know?\\nBy default, Serenity/JS registers a ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/).whoWill(["},{"kind":"code","text":"`TakePhotosOfFailures`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfFailures/)),\\nso that any test failures are automatically accompanied by a screenshot.\\n\\nIf you prefer a different behaviour, you can configure the "},{"kind":"code","text":"`crew`"},{"kind":"text","text":" with an empty array to disable taking screenshots altogether ("},{"kind":"code","text":"`crew: []`"},{"kind":"text","text":"),\\nor with a ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) who uses a different ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/), like to ["},{"kind":"code","text":"`TakePhotosOfInteractions`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfInteractions/).\\n:::\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n    use: {\\n        crew: [\\n            [ \'@serenity-js/web:Photographer\', { strategy: \'TakePhotosOfFailures\' } ]\\n        ],\\n    },\\n};\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":189,"character":4}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"},{"type":"reference","target":2126,"typeArguments":[{"type":"reference","target":1962,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"},{"type":"reference","target":66,"name":"ClassDescription","package":"@serenity-js/core"}]}}},{"id":22399,"name":"cueTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets the ["},{"kind":"code","text":"`SerenityConfig.cueTimeout|cueTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#cueTimeout) to a given [duration](/api/core/class/Duration/) or a numeric value in milliseconds.\\nDefaults to **5 seconds**.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.cueTimeout`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#cueTimeout)\\n- ["},{"kind":"code","text":"`Discardable`"},{"kind":"text","text":"](/api/core/interface/Discardable/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":200,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}]}},{"id":22400,"name":"interactionTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum default amount of time allowed for interactions such as ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)\\nto complete.\\n\\nDefaults to **5 seconds**, can be overridden per interaction.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":"](/api/core/class/Wait/#until)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":211,"character":4}],"type":{"type":"reference","target":1685,"name":"Duration","package":"@serenity-js/core"}},{"id":22401,"name":"contextOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Playwright [BrowserContextOptions](https://playwright.dev/docs/api/class-testoptions#test-options-context-options),\\naugmented with several convenience properties to be used with the [ability](/api/core/class/Ability/)\\nto ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/).\\n\\nAdditional convenience properties include:\\n- ["},{"kind":"code","text":"`PlaywrightOptions.defaultNavigationTimeout`"},{"kind":"text","text":"](/api/playwright/interface/PlaywrightOptions/#defaultNavigationTimeout)\\n- ["},{"kind":"code","text":"`PlaywrightOptions.defaultNavigationWaitUntil`"},{"kind":"text","text":"](/api/playwright/interface/PlaywrightOptions/#defaultNavigationWaitUntil)\\n- ["},{"kind":"code","text":"`PlaywrightOptions.defaultTimeout`"},{"kind":"text","text":"](/api/playwright/interface/PlaywrightOptions/#defaultTimeout)\\n\\n#### Using "},{"kind":"code","text":"`contextOptions`"},{"kind":"text","text":" with the default cast of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n    use: {\\n        contextOptions: {\\n            defaultNavigationTimeout: 30_000,\\n        }\\n\\n        // Since `actors` property is not defined,\\n        // `contextOptions` will be passed to the default cast of Serenity/JS actors\\n        // and injected into the ability to `BrowseTheWebWithPlaywright`\\n        // that each actor receives.\\n    },\\n};\\nexport default config;\\n```"},{"kind":"text","text":"\\n\\n#### Using "},{"kind":"code","text":"`contextOptions`"},{"kind":"text","text":" with a custom cast of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n    use: {\\n        contextOptions: {\\n            defaultNavigationTimeout: 30_000,\\n        }\\n\\n        // Custom cast of actors receives `contextOptions` with the\\n        // additional Serenity/JS properties.\\n        actors: ({ browser, contextOptions }, use) => {\\n            const cast = Cast.where(actor => actor.whoCan(\\n                BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                TakeNotes.usingAnEmptyNotepad(),\\n            ))\\n\\n            use(cast)\\n        },\\n    },\\n};\\nexport default config;\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- [Playwright Browser Context options](https://playwright.dev/docs/api/class-testoptions#test-options-context-options)\\n- [Playwright Test fixtures](https://playwright.dev/docs/test-fixtures)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":276,"character":4}],"type":{"type":"reference","target":4951,"name":"PlaywrightOptions","package":"@serenity-js/playwright"}}],"groups":[{"title":"Properties","children":[22396,22397,22398,22399,22400,22401]}],"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":81,"character":17}],"permalink":"/api/playwright-test/interface/SerenityOptions","previousId":22383,"nextId":22402},{"id":22402,"name":"SuiteFunction","variant":"declaration","kind":256,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":6,"character":17}],"signatures":[{"id":22403,"name":"SuiteFunction","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of tests.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(\'two tests\', () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":29,"character":4}],"parameters":[{"id":22404,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22405,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Any tests added in\\nthis callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":22406,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":29,"character":30}],"signatures":[{"id":22407,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":29,"character":30}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22408,"name":"SuiteFunction","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an anonymous group of tests. This is convenient to give a group of tests a common option with\\n[test.use(options)](https://playwright.dev/docs/api/class-test#test-use).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(() => {\\n  test.use({ colorScheme: \'dark\' });\\n\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":54,"character":4}],"parameters":[{"id":22409,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe(callback)](https://playwright.dev/docs/api/class-test#test-describe-2). Any tests added in this\\ncallback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":22410,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":54,"character":15}],"signatures":[{"id":22411,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":54,"character":15}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22412,"name":"SuiteFunction","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of tests."}]},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":65,"character":4}],"parameters":[{"id":22413,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Group title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22414,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Additional details for all tests in the group."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22415,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Any tests added in\\nthis callback will belong to the group."}]},"type":{"type":"reflection","declaration":{"id":22416,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":65,"character":52}],"signatures":[{"id":22417,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":65,"character":52}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/interface/SuiteFunction","previousId":22395,"nextId":22358},{"id":22423,"name":"fixtures","variant":"declaration","kind":32,"flags":{"isExternal":true,"isConst":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":34,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intrinsic","name":"object"},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"}]}],"name":"Fixtures","package":"playwright"},"defaultValue":"...","permalink":"/api/playwright-test#fixtures","previousId":22424},{"id":22424,"name":"TestApi","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS BDD-style test API created by ["},{"kind":"code","text":"`useBase`"},{"kind":"text","text":"](/api/playwright-test/function/useBase/)."}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":168,"character":12}],"typeParameters":[{"id":22435,"name":"TestArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}},{"id":22436,"name":"WorkerArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Pick"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":22435,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22436,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"},{"type":"union","types":[{"type":"literal","value":"beforeAll"},{"type":"literal","value":"beforeEach"},{"type":"literal","value":"afterEach"},{"type":"literal","value":"afterAll"},{"type":"literal","value":"expect"}]}],"name":"Pick","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"},{"type":"reflection","declaration":{"id":22425,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22426,"name":"useFixtures","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a Serenity/JS BDD-style test API around the default Playwright [base test](https://playwright.dev/docs/test-fixtures)\\nand using custom test fixtures.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: \'Hello world!\'\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nShorthand for ["},{"kind":"code","text":"`useBase`"},{"kind":"text","text":"](/api/playwright-test/function/useBase/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":195,"character":8}],"type":{"type":"reflection","declaration":{"id":22427,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":195,"character":21}],"signatures":[{"id":22428,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"typeParameter":[{"id":22430,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}},{"id":22431,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"default":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":22429,"name":"customFixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":22430,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22431,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22435,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22436,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":22424,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":22435,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22430,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":22436,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22431,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]}],"name":"TestApi","package":"@serenity-js/playwright-test"}}]}}},{"id":22432,"name":"it","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":196,"character":8}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":22435,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22436,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"}},{"id":22433,"name":"test","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":197,"character":8}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":22435,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22436,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"}},{"id":22434,"name":"describe","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":198,"character":8}],"type":{"type":"reference","target":22361,"name":"DescribeFunction","package":"@serenity-js/playwright-test"}}],"groups":[{"title":"Properties","children":[22426,22432,22433,22434]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":170,"character":4}]}}]},"permalink":"/api/playwright-test#TestApi","previousId":22380,"nextId":22423},{"id":22437,"name":"it","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":22453,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused test. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.only(\'focus this test\', async ({ page }) => {\\n  // Run only focused tests in the entire project.\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Test title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},{"tag":"@param","name":"body","content":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestFunction"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestFunction","package":"playwright"}},{"id":22454,"name":"describe","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of tests.\\n- "},{"kind":"code","text":"`test.describe(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a group of tests with a title. The title will be visible in the test report as a part of each\\ntest\'s title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(\'two tests\', () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Anonymous group**\\n\\nYou can also declare a test group without a title. This is convenient to give a group of tests a common option with\\n[test.use(options)](https://playwright.dev/docs/api/class-test#test-use).\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(() => {\\n  test.use({ colorScheme: \'dark\' });\\n\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Tags**\\n\\nYou can tag all tests in a group by providing additional details. Note that each tag must start with "},{"kind":"code","text":"`@`"},{"kind":"text","text":" symbol.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two tagged tests\', {\\n  tag: \'@smoke\',\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [tagging](https://playwright.dev/docs/test-annotations#tag-tests).\\n\\n**Annotations**\\n\\nYou can annotate all tests in a group by providing additional details.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two annotated tests\', {\\n  annotation: {\\n    type: \'issue\',\\n    description: \'https://github.com/microsoft/playwright/issues/23180\',\\n  },\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [test annotations](https://playwright.dev/docs/test-annotations)."}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"Additional details for all tests in the group."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"},{"type":"reflection","declaration":{"id":22455,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22456,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}},{"id":22457,"name":"skip","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}},{"id":22458,"name":"fixme","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}},{"id":22459,"name":"serial","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are\\nskipped. All tests in a group are retried together.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n- "},{"kind":"code","text":"`test.describe.serial(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"},{"type":"reflection","declaration":{"id":22460,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22461,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}}],"groups":[{"title":"Properties","children":[22461]}],"sources":[]}}]}},{"id":22462,"name":"parallel","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that could be run in parallel. By default, tests in a single test file run one after\\nanother, but using\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel)\\nallows them to run in parallel.\\n- "},{"kind":"code","text":"`test.describe.parallel(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nNote that parallel tests are executed in separate processes and cannot share any state or global variables. Each of\\nthe parallel tests executes all relevant hooks.\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"},{"type":"reflection","declaration":{"id":22463,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22464,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}}],"groups":[{"title":"Properties","children":[22464]}],"sources":[]}}]}},{"id":22465,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the enclosing scope. Can be executed either on the top level or inside a describe. Configuration applies\\nto the entire scope, regardless of whether it run before or after the test declaration.\\n\\nLearn more about the execution modes [here](https://playwright.dev/docs/test-parallel).\\n\\n**Usage**\\n- Running tests in parallel.\\n\\n  "},{"kind":"code","text":"```js\\n  // Run all the tests in the file concurrently using parallel workers.\\n  test.describe.configure({ mode: \'parallel\' });\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests serially, retrying from the start.\\n\\n  **NOTE** Running serially is not recommended. It is usually better to make your tests isolated, so they can be\\n  run independently.\\n\\n  "},{"kind":"code","text":"```js\\n  // Annotate tests as inter-dependent.\\n  test.describe.configure({ mode: \'serial\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Configuring retries and timeout for each test.\\n\\n  "},{"kind":"code","text":"```js\\n  // Each test in the file will be retried twice and have a timeout of 20 seconds.\\n  test.describe.configure({ retries: 2, timeout: 20_000 });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Run multiple describes in parallel, but tests inside each describe in order.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe.configure({ mode: \'parallel\' });\\n\\n  test.describe(\'A, runs in parallel with B\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order A1\', async ({ page }) => {});\\n    test(\'in order A2\', async ({ page }) => {});\\n  });\\n\\n  test.describe(\'B, runs in parallel with A\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order B1\', async ({ page }) => {});\\n    test(\'in order B2\', async ({ page }) => {});\\n  });\\n  ```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":22466,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22467,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22468,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22469,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22470,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"parallel"},{"type":"literal","value":"serial"}]}},{"id":22471,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":22472,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22470,22471,22472]}],"sources":[]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[22456,22457,22458,22459,22462,22465]}],"sources":[]}}]}},{"id":22473,"name":"skip","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22474,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22475,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22476,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22477,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22478,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22479,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22480,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22481,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22482,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22483,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22484,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22485,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22486,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22487,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22488,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22489,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":22490,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22491,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22492,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22493,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22494,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22495,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22496,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22497,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22498,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22499,"name":"fixme","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22500,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22501,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22502,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22503,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22504,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22505,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22506,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22507,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22508,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22509,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22510,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22511,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22512,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22513,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22514,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22515,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":22516,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22517,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22518,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22519,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22520,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22521,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22522,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22523,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22524,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22525,"name":"fail","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22526,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22527,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22528,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22529,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22530,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22531,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22532,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22533,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22534,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22535,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22536,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22537,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22538,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22539,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22540,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22541,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22542,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22543,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22544,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22545,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22546,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22547,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22548,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22549,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22550,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}}]},{"id":22551,"name":"slow","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22552,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":22553,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22554,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"slow\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22555,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22556,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22557,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"slow\\", based on test fixtures. Test or tests are marked as \\"slow\\" when\\nthe return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22558,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22559,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22560,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22561,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22562,"name":"setTimeout","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22563,"name":"setTimeout","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the timeout for the test. Zero means no timeout. Learn more about [various timeouts](https://playwright.dev/docs/test-timeouts).\\n\\nTimeout for the currently running test is available through\\n[testInfo.timeout](https://playwright.dev/docs/api/class-testinfo#test-info-timeout).\\n\\n**Usage**\\n- Changing test timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test(\'very slow test\', async ({ page }) => {\\n    test.setTimeout(120000);\\n    // ...\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout from a slow "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook. Note that this affects the test timeout that is\\n  shared with "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"/"},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeEach(async ({ page }, testInfo) => {\\n    // Extend timeout for all tests running this hook by 30 seconds.\\n    test.setTimeout(testInfo.timeout + 30000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Note this affects the hook\'s timeout, not the test\\n  timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeAll(async () => {\\n    // Set timeout for this hook.\\n    test.setTimeout(60000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for all tests in a\\n  [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe(\'group\', () => {\\n    // Applies to all tests in this group.\\n    test.describe.configure({ timeout: 60000 });\\n\\n    test(\'test one\', async () => { /* ... */ });\\n    test(\'test two\', async () => { /* ... */ });\\n    test(\'test three\', async () => { /* ... */ });\\n  });\\n  ```"}]},"sources":[],"parameters":[{"id":22564,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Timeout in milliseconds."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22565,"name":"beforeEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22566,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":22567,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22568,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22569,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22570,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22571,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22572,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":22573,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22574,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22575,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22576,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22577,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22578,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22579,"name":"afterEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22580,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":22581,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22582,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22583,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22584,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22585,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22586,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":22587,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22588,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22589,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22590,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22591,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22592,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22593,"name":"beforeAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22594,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":22595,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22596,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22597,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22598,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22599,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22600,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":22601,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22602,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22603,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22604,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22605,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22606,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22607,"name":"afterAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22608,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22609,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22610,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22611,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22612,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22613,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22614,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22615,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22616,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22617,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22618,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22619,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22620,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22621,"name":"use","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22622,"name":"use","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Specifies options or fixtures to use in a single test file or a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group. Most\\nuseful to set an option, for example set "},{"kind":"code","text":"`locale`"},{"kind":"text","text":" to configure "},{"kind":"code","text":"`context`"},{"kind":"text","text":" fixture.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({ locale: \'en-US\' });\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\n"},{"kind":"code","text":"`test.use`"},{"kind":"text","text":" can be called either in the global scope or inside "},{"kind":"code","text":"`test.describe`"},{"kind":"text","text":". It is an error to call it within\\n"},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" or "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n\\nIt is also possible to override a fixture by providing a function.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({\\n  locale: async ({}, use) => {\\n    // Read locale from some configuration file.\\n    const locale = await fs.promises.readFile(\'test-locale\', \'utf-8\');\\n    await use(locale);\\n  },\\n});\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"}]},"sources":[],"parameters":[{"id":22623,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reflection","declaration":{"id":22624,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":22625,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22626,"name":"step","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22627,"name":"step","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test step that is shown in the report.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  await test.step(\'Log in\', async () => {\\n    // ...\\n  });\\n\\n  await test.step(\'Outer step\', async () => {\\n    // ...\\n    // You can nest steps inside each other.\\n    await test.step(\'Inner step\', async () => {\\n      // ...\\n    });\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\nThe method returns the value returned by the step callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  const user = await test.step(\'Log in\', async () => {\\n    // ...\\n    return \'john\';\\n  });\\n  expect(user).toBe(\'john\');\\n});\\n```"},{"kind":"text","text":"\\n\\n**Decorator**\\n\\nYou can use TypeScript method decorators to turn a method into a step. Each call to the decorated method will show\\nup as a step in the report.\\n\\n"},{"kind":"code","text":"```js\\nfunction step(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    });\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @step\\n  async login() {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await this.page.getByLabel(\'Username or email address\').fill(account.username);\\n    await this.page.getByLabel(\'Password\').fill(account.password);\\n    await this.page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(this.page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();\\n});\\n```"},{"kind":"text","text":"\\n\\n**Boxing**\\n\\nWhen something inside a step fails, you would usually see the error pointing to the exact action that failed. For\\nexample, consider the following login step:\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await page.getByLabel(\'Username or email address\').fill(account.username);\\n    await page.getByLabel(\'Password\').fill(account.password);\\n    await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  });\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  await page.goto(\'https://github.com/login\');\\n  await login(page);\\n});\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n   8 |     await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n>  9 |     await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n     |                                                                               ^\\n  10 |   });\\n```"},{"kind":"text","text":"\\n\\nAs we see above, the test may fail with an error pointing inside the step. If you would like the error to highlight\\nthe \\"login\\" step instead of its internals, use the "},{"kind":"code","text":"`box`"},{"kind":"text","text":" option. An error inside a boxed step points to the step\\ncall site.\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    // ...\\n  }, { box: true });  // Note the \\"box\\" option here.\\n}\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n  14 |   await page.goto(\'https://github.com/login\');\\n> 15 |   await login(page);\\n     |         ^\\n  16 | });\\n```"},{"kind":"text","text":"\\n\\nYou can also create a TypeScript decorator for a boxed step, similar to a regular step decorator above:\\n\\n"},{"kind":"code","text":"```js\\nfunction boxedStep(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    }, { box: true });  // Note the \\"box\\" option here.\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @boxedStep\\n  async login() {\\n    // ....\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();  // <-- Error will be reported on this line.\\n});\\n```"}]},"sources":[],"typeParameter":[{"id":22628,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":22629,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step name."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22630,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step body."}]},"type":{"type":"reflection","declaration":{"id":22631,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22632,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":22628,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":22628,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":22633,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":22634,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22635,"name":"box","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[22635]}],"sources":[]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":22628,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":22636,"name":"expect","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect`"},{"kind":"text","text":" function can be used to create test assertions. Read more about [test assertions](https://playwright.dev/docs/test-assertions).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example\', async ({ page }) => {\\n  await test.expect(page).toHaveTitle(\'Title\');\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"reflection","declaration":{"id":22637,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"Expect","package":"playwright"}},{"id":22638,"name":"extend","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22639,"name":"extend","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Extends the "},{"kind":"code","text":"`test`"},{"kind":"text","text":" object by defining fixtures and/or options that can be used in the tests.\\n\\n**Usage**\\n\\nFirst define a fixture and/or an option.\\n\\n"},{"kind":"code","text":"```js\\nimport { test as base } from \'@playwright/test\';\\nimport { TodoPage } from \'./todo-page\';\\n\\nexport type Options = { defaultItem: string };\\n\\n// Extend basic test by providing a \\"defaultItem\\" option and a \\"todoPage\\" fixture.\\nexport const test = base.extend<Options & { todoPage: TodoPage }>({\\n  // Define an option and provide a default value.\\n  // We can later override it in the config.\\n  defaultItem: [\'Do stuff\', { option: true }],\\n\\n  // Define a fixture. Note that it can use built-in fixture \\"page\\"\\n  // and a new option \\"defaultItem\\".\\n  todoPage: async ({ page, defaultItem }, use) => {\\n    const todoPage = new TodoPage(page);\\n    await todoPage.goto();\\n    await todoPage.addToDo(defaultItem);\\n    await use(todoPage);\\n    await todoPage.removeAll();\\n  },\\n});\\n```"},{"kind":"text","text":"\\n\\nThen use the fixture in the test.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test } from \'./my-test\';\\n\\ntest(\'test 1\', async ({ todoPage }) => {\\n  await todoPage.addToDo(\'my todo\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nConfigure the option in config file.\\n\\n"},{"kind":"code","text":"```js\\n// playwright.config.ts\\nimport { defineConfig } from \'@playwright/test\';\\nimport type { Options } from \'./my-test\';\\n\\nexport default defineConfig<Options>({\\n  projects: [\\n    {\\n      name: \'shopping\',\\n      use: { defaultItem: \'Buy milk\' },\\n    },\\n    {\\n      name: \'wellbeing\',\\n      use: { defaultItem: \'Exercise!\' },\\n    },\\n  ]\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [fixtures](https://playwright.dev/docs/test-fixtures) and [parametrizing tests](https://playwright.dev/docs/test-parameterize)."}]},"sources":[],"typeParameter":[{"id":22640,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"KeyValue"},"name":"KeyValue","package":"playwright"}},{"id":22641,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"KeyValue"},"name":"KeyValue","package":"playwright"},"default":{"type":"reflection","declaration":{"id":22642,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}}],"parameters":[{"id":22643,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An object containing fixtures and/or options. Learn more about [fixtures format](https://playwright.dev/docs/test-fixtures)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":22640,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":22641,"name":"W","package":"playwright","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":22640,"name":"T","package":"playwright","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"},{"type":"reference","target":22641,"name":"W","package":"playwright","refersToTypeParameter":true}]}],"name":"TestType","package":"playwright"}}]},{"id":22644,"name":"info","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22645,"name":"info","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns information about the currently running test. This method can only be called during the test execution,\\notherwise it throws.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example test\', async ({ page }) => {\\n  // ...\\n  await test.info().attach(\'screenshot\', {\\n    body: await page.screenshot(),\\n    contentType: \'image/png\',\\n  });\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}]}],"groups":[{"title":"Properties","children":[22453,22454,22636]},{"title":"Methods","children":[22473,22499,22525,22551,22562,22565,22579,22593,22607,22621,22626,22638,22644]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":276,"character":13}],"signatures":[{"id":22438,"name":"it","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it } from \'@serenity-js/playwright-test\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'supports multiple actors using separate browsers\', async ({ actorCalled }) => {\\n    await actorCalled(\'Alice\').attemptsTo(\\n      startWithAListContaining(\\n        \'Feed the cat\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      startWithAListContaining(\\n        \'Walk the dog\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Alice\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Feed the cat\'\\n      ])),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Walk the dog\'\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Grouping test scenarios](/api/playwright-test/function/describe/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- [Playwright Test "},{"kind":"code","text":"`test`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-call)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":276,"character":13}],"parameters":[{"id":22439,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":22440,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22441,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22442,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22443,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22444,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22445,"name":"it","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it } from \'@serenity-js/playwright-test\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'supports multiple actors using separate browsers\', async ({ actorCalled }) => {\\n    await actorCalled(\'Alice\').attemptsTo(\\n      startWithAListContaining(\\n        \'Feed the cat\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      startWithAListContaining(\\n        \'Walk the dog\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Alice\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Feed the cat\'\\n      ])),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Walk the dog\'\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Grouping test scenarios](/api/playwright-test/function/describe/)\\n- ["},{"kind":"code","text":"`SerenityFixtures`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/)\\n- [Playwright Test "},{"kind":"code","text":"`test`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-call)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":276,"character":13}],"parameters":[{"id":22446,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":22447,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22448,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22449,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22450,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22451,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22452,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/it","previousId":23023,"nextId":22646},{"id":22646,"name":"test","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":22662,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused test. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.only(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.only(title, details, body)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.only(\'focus this test\', async ({ page }) => {\\n  // Run only focused tests in the entire project.\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Test title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},{"tag":"@param","name":"body","content":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestFunction"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"TestFunction","package":"playwright"}},{"id":22663,"name":"describe","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of tests.\\n- "},{"kind":"code","text":"`test.describe(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a group of tests with a title. The title will be visible in the test report as a part of each\\ntest\'s title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(\'two tests\', () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Anonymous group**\\n\\nYou can also declare a test group without a title. This is convenient to give a group of tests a common option with\\n[test.use(options)](https://playwright.dev/docs/api/class-test#test-use).\\n\\n"},{"kind":"code","text":"```js\\ntest.describe(() => {\\n  test.use({ colorScheme: \'dark\' });\\n\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Tags**\\n\\nYou can tag all tests in a group by providing additional details. Note that each tag must start with "},{"kind":"code","text":"`@`"},{"kind":"text","text":" symbol.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two tagged tests\', {\\n  tag: \'@smoke\',\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [tagging](https://playwright.dev/docs/test-annotations#tag-tests).\\n\\n**Annotations**\\n\\nYou can annotate all tests in a group by providing additional details.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.describe(\'two annotated tests\', {\\n  annotation: {\\n    type: \'issue\',\\n    description: \'https://github.com/microsoft/playwright/issues/23180\',\\n  },\\n}, () => {\\n  test(\'one\', async ({ page }) => {\\n    // ...\\n  });\\n\\n  test(\'two\', async ({ page }) => {\\n    // ...\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [test annotations](https://playwright.dev/docs/test-annotations)."}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"Additional details for all tests in the group."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Any tests\\ndeclared in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"},{"type":"reflection","declaration":{"id":22664,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22665,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n- "},{"kind":"code","text":"`test.describe.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}},{"id":22666,"name":"skip","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in the\\nskipped group are never run.\\n- "},{"kind":"code","text":"`test.describe.skip(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.skip(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-skip).\\nAny tests added in this callback will belong to the group, and will not be run."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}},{"id":22667,"name":"fixme","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe). Tests in\\nthis group are marked as \\"fixme\\" and will not be executed.\\n- "},{"kind":"code","text":"`test.describe.fixme(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.fixme(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests that should be fixed\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-fixme).\\nAny tests added in this callback will belong to the group, and will not be run."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}},{"id":22668,"name":"serial","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are\\nskipped. All tests in a group are retried together.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n- "},{"kind":"code","text":"`test.describe.serial(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"},{"type":"reflection","declaration":{"id":22669,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22670,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.serial.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title[, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}}],"groups":[{"title":"Properties","children":[22670]}],"sources":[]}}]}},{"id":22671,"name":"parallel","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that could be run in parallel. By default, tests in a single test file run one after\\nanother, but using\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel)\\nallows them to run in parallel.\\n- "},{"kind":"code","text":"`test.describe.parallel(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nNote that parallel tests are executed in separate processes and cannot share any state or global variables. Each of\\nthe parallel tests executes all relevant hooks.\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"},{"type":"reflection","declaration":{"id":22672,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22673,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel),\\nbut focuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(callback)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.describe.parallel.only(title, details, callback)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also omit the title.\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(() => {\\n  // ...\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"details","content":[{"kind":"text","text":"See [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) for\\ndetails description."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SuiteFunction"},"name":"SuiteFunction","package":"playwright"}}],"groups":[{"title":"Properties","children":[22673]}],"sources":[]}}]}},{"id":22674,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the enclosing scope. Can be executed either on the top level or inside a describe. Configuration applies\\nto the entire scope, regardless of whether it run before or after the test declaration.\\n\\nLearn more about the execution modes [here](https://playwright.dev/docs/test-parallel).\\n\\n**Usage**\\n- Running tests in parallel.\\n\\n  "},{"kind":"code","text":"```js\\n  // Run all the tests in the file concurrently using parallel workers.\\n  test.describe.configure({ mode: \'parallel\' });\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests serially, retrying from the start.\\n\\n  **NOTE** Running serially is not recommended. It is usually better to make your tests isolated, so they can be\\n  run independently.\\n\\n  "},{"kind":"code","text":"```js\\n  // Annotate tests as inter-dependent.\\n  test.describe.configure({ mode: \'serial\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Configuring retries and timeout for each test.\\n\\n  "},{"kind":"code","text":"```js\\n  // Each test in the file will be retried twice and have a timeout of 20 seconds.\\n  test.describe.configure({ retries: 2, timeout: 20_000 });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Run multiple describes in parallel, but tests inside each describe in order.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe.configure({ mode: \'parallel\' });\\n\\n  test.describe(\'A, runs in parallel with B\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order A1\', async ({ page }) => {});\\n    test(\'in order A2\', async ({ page }) => {});\\n  });\\n\\n  test.describe(\'B, runs in parallel with A\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order B1\', async ({ page }) => {});\\n    test(\'in order B2\', async ({ page }) => {});\\n  });\\n  ```"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":22675,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22676,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22677,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22678,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22679,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"parallel"},{"type":"literal","value":"serial"}]}},{"id":22680,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":22681,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22679,22680,22681]}],"sources":[]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[22665,22666,22667,22668,22671,22674]}],"sources":[]}}]}},{"id":22682,"name":"skip","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22683,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22684,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22685,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22686,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22687,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22688,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22689,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22690,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22691,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22692,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22693,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22694,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22695,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22696,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22697,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22698,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":22699,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22700,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22701,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22702,"name":"skip","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Skip a test. Playwright will not run the test past the "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" call.\\n\\nSkipped tests are not supposed to be ever run. If you intent to fix the test, use\\n[test.fixme([title, details, body, condition, callback, description])](https://playwright.dev/docs/api/class-test#test-fixme)\\ninstead.\\n\\nTo declare a skipped test:\\n- "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(title, details, body)`"},{"kind":"text","text":"\\n\\nTo skip a test at runtime:\\n- "},{"kind":"code","text":"`test.skip(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a skipped test, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(\'never run\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be skipped in some configurations, but not all, you can skip the test inside the test body\\nbased on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the test,\\nbut abort it immediately after the "},{"kind":"code","text":"`test.skip`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'Safari-only test\', async ({ page, browserName }) => {\\n  test.skip(browserName !== \'webkit\', \'This feature is Safari-only\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can skip all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group based\\non some condition with a single "},{"kind":"code","text":"`test.skip(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.skip(({ browserName }) => browserName !== \'webkit\', \'Safari-only\');\\n\\ntest(\'Safari-only test 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'Safari-only test 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.skip()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.skip(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.skip();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22703,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22704,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22705,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22706,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22707,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22708,"name":"fixme","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22709,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22710,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22711,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22712,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22713,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22714,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22715,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22716,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22717,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22718,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22719,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22720,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22721,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22722,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22723,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22724,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":22725,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22726,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22727,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22728,"name":"fixme","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Mark a test as \\"fixme\\", with the intention to fix it. Playwright will not run the test past the "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\ncall.\\n\\nTo declare a \\"fixme\\" test:\\n- "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"fixme\\" at runtime:\\n- "},{"kind":"code","text":"`test.fixme(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as to be fixed, and Playwright will not run it.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(\'to be fixed\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test should be fixed in some configurations, but not all, you can mark the test as \\"fixme\\" inside the test\\nbody based on some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case. Playwright will run the\\ntest, but abort it immediately after the "},{"kind":"code","text":"`test.fixme`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'to be fixed in Safari\', async ({ page, browserName }) => {\\n  test.fixme(browserName === \'webkit\', \'This feature breaks in Safari for some reason\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"fixme\\" based on some condition with a single "},{"kind":"code","text":"`test.fixme(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fixme(({ browserName }) => browserName === \'webkit\', \'Should figure out the issue\');\\n\\ntest(\'to be fixed in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'to be fixed in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fixme()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend using "},{"kind":"code","text":"`test.fixme(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fixme();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22729,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22730,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22731,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22732,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22733,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22734,"name":"fail","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22735,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22736,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22737,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22738,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22739,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22740,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22741,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22742,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22743,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22744,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See [test.(call)(title[, details, body])](https://playwright.dev/docs/api/class-test#test-call) for test details\\ndescription."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22745,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test body that takes one or two arguments: an object with fixtures and optional "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22746,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22747,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22748,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22749,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22750,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22751,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"should fail\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22752,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22753,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22754,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"should fail\\", based on test fixtures. Test or tests are marked as\\n\\"should fail\\" when the return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22755,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22756,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22757,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22758,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22759,"name":"fail","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"should fail\\". Playwright runs this test and ensures that it is actually failing. This is useful\\nfor documentation purposes to acknowledge that some functionality is broken until it is fixed.\\n\\nTo declare a \\"failing\\" test:\\n- "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(title, details, body)`"},{"kind":"text","text":"\\n\\nTo annotate test as \\"failing\\" at runtime:\\n- "},{"kind":"code","text":"`test.fail(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can declare a test as failing, so that Playwright ensures it actually fails.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(\'not yet ready\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test fails in some configurations, but not all, you can mark the test as failing inside the test body based\\non some condition. We recommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'fail in WebKit\', async ({ page, browserName }) => {\\n  test.fail(browserName === \'webkit\', \'This feature is not implemented for Mac yet\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"should fail\\" based on some condition with a single "},{"kind":"code","text":"`test.fail(callback, description)`"},{"kind":"text","text":" call.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.fail(({ browserName }) => browserName === \'webkit\', \'not implemented yet\');\\n\\ntest(\'fail in WebKit 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in WebKit 2\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can also call "},{"kind":"code","text":"`test.fail()`"},{"kind":"text","text":" without arguments inside the test body to always mark the test as failed. We\\nrecommend declaring a failing test with "},{"kind":"code","text":"`test.fail(title, body)`"},{"kind":"text","text":" instead.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'less readable\', async ({ page }) => {\\n  test.fail();\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}}]},{"id":22760,"name":"slow","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22761,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"type":{"type":"intrinsic","name":"void"}},{"id":22762,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22763,"name":"condition","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Test is marked as \\"slow\\" when the condition is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"id":22764,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}},{"id":22765,"name":"slow","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Marks a test as \\"slow\\". Slow test will be given triple the default timeout.\\n\\nNote that [test.slow([condition, callback, description])](https://playwright.dev/docs/api/class-test#test-slow)\\ncannot be used in a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Use\\n[test.setTimeout(timeout)](https://playwright.dev/docs/api/class-test#test-set-timeout) instead.\\n- "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(condition, description)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.slow(callback, description)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\nYou can mark a test as slow by calling "},{"kind":"code","text":"`test.slow()`"},{"kind":"text","text":" inside the test body.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow test\', async ({ page }) => {\\n  test.slow();\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nIf your test is slow in some configurations, but not all, you can mark it as slow based on a condition. We\\nrecommend passing a "},{"kind":"code","text":"`description`"},{"kind":"text","text":" argument in this case.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'slow in Safari\', async ({ page, browserName }) => {\\n  test.slow(browserName === \'webkit\', \'This feature is slow in Safari\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nYou can mark all tests in a file or\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group as\\n\\"slow\\" based on some condition by passing a callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.slow(({ browserName }) => browserName === \'webkit\', \'all tests are slow in Safari\');\\n\\ntest(\'slow in Safari 1\', async ({ page }) => {\\n  // ...\\n});\\ntest(\'fail in Safari 2\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22766,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A function that returns whether to mark as \\"slow\\", based on test fixtures. Test or tests are marked as \\"slow\\" when\\nthe return value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"id":22767,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22768,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22769,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":22770,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional description that will be reflected in a test report."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22771,"name":"setTimeout","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22772,"name":"setTimeout","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the timeout for the test. Zero means no timeout. Learn more about [various timeouts](https://playwright.dev/docs/test-timeouts).\\n\\nTimeout for the currently running test is available through\\n[testInfo.timeout](https://playwright.dev/docs/api/class-testinfo#test-info-timeout).\\n\\n**Usage**\\n- Changing test timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test(\'very slow test\', async ({ page }) => {\\n    test.setTimeout(120000);\\n    // ...\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout from a slow "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook. Note that this affects the test timeout that is\\n  shared with "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"/"},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeEach(async ({ page }, testInfo) => {\\n    // Extend timeout for all tests running this hook by 30 seconds.\\n    test.setTimeout(testInfo.timeout + 30000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" or "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook. Note this affects the hook\'s timeout, not the test\\n  timeout.\\n\\n  "},{"kind":"code","text":"```js\\n  test.beforeAll(async () => {\\n    // Set timeout for this hook.\\n    test.setTimeout(60000);\\n  });\\n  ```"},{"kind":"text","text":"\\n\\n- Changing timeout for all tests in a\\n  [test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe(\'group\', () => {\\n    // Applies to all tests in this group.\\n    test.describe.configure({ timeout: 60000 });\\n\\n    test(\'test one\', async () => { /* ... */ });\\n    test(\'test two\', async () => { /* ... */ });\\n    test(\'test three\', async () => { /* ... */ });\\n  });\\n  ```"}]},"sources":[],"parameters":[{"id":22773,"name":"timeout","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Timeout in milliseconds."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22774,"name":"beforeEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22775,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":22776,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22777,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22778,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22779,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22780,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22781,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":22782,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22783,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22784,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22785,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22786,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22787,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22788,"name":"afterEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22789,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":22790,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22791,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22792,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22793,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22794,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22795,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[],"parameters":[{"id":22796,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22797,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22798,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22799,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22800,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22801,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22802,"name":"beforeAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22803,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":22804,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22805,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22806,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22807,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22808,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22809,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[],"parameters":[{"id":22810,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22811,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22812,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22813,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22814,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22815,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22816,"name":"afterAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22817,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22818,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22819,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22820,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22821,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22822,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22823,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[],"parameters":[{"id":22824,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22825,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22826,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22827,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22828,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22829,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22830,"name":"use","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22831,"name":"use","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Specifies options or fixtures to use in a single test file or a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group. Most\\nuseful to set an option, for example set "},{"kind":"code","text":"`locale`"},{"kind":"text","text":" to configure "},{"kind":"code","text":"`context`"},{"kind":"text","text":" fixture.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({ locale: \'en-US\' });\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\n"},{"kind":"code","text":"`test.use`"},{"kind":"text","text":" can be called either in the global scope or inside "},{"kind":"code","text":"`test.describe`"},{"kind":"text","text":". It is an error to call it within\\n"},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" or "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n\\nIt is also possible to override a fixture by providing a function.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.use({\\n  locale: async ({}, use) => {\\n    // Read locale from some configuration file.\\n    const locale = await fs.promises.readFile(\'test-locale\', \'utf-8\');\\n    await use(locale);\\n  },\\n});\\n\\ntest(\'test with locale\', async ({ page }) => {\\n  // Default context and page have locale as specified\\n});\\n```"}]},"sources":[],"parameters":[{"id":22832,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reflection","declaration":{"id":22833,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":22834,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":22835,"name":"step","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22836,"name":"step","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test step that is shown in the report.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  await test.step(\'Log in\', async () => {\\n    // ...\\n  });\\n\\n  await test.step(\'Outer step\', async () => {\\n    // ...\\n    // You can nest steps inside each other.\\n    await test.step(\'Inner step\', async () => {\\n      // ...\\n    });\\n  });\\n});\\n```"},{"kind":"text","text":"\\n\\n**Details**\\n\\nThe method returns the value returned by the step callback.\\n\\n"},{"kind":"code","text":"```js\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest(\'test\', async ({ page }) => {\\n  const user = await test.step(\'Log in\', async () => {\\n    // ...\\n    return \'john\';\\n  });\\n  expect(user).toBe(\'john\');\\n});\\n```"},{"kind":"text","text":"\\n\\n**Decorator**\\n\\nYou can use TypeScript method decorators to turn a method into a step. Each call to the decorated method will show\\nup as a step in the report.\\n\\n"},{"kind":"code","text":"```js\\nfunction step(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    });\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @step\\n  async login() {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await this.page.getByLabel(\'Username or email address\').fill(account.username);\\n    await this.page.getByLabel(\'Password\').fill(account.password);\\n    await this.page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(this.page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();\\n});\\n```"},{"kind":"text","text":"\\n\\n**Boxing**\\n\\nWhen something inside a step fails, you would usually see the error pointing to the exact action that failed. For\\nexample, consider the following login step:\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    const account = { username: \'Alice\', password: \'s3cr3t\' };\\n    await page.getByLabel(\'Username or email address\').fill(account.username);\\n    await page.getByLabel(\'Password\').fill(account.password);\\n    await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n    await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n  });\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  await page.goto(\'https://github.com/login\');\\n  await login(page);\\n});\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n   8 |     await page.getByRole(\'button\', { name: \'Sign in\' }).click();\\n>  9 |     await expect(page.getByRole(\'button\', { name: \'View profile and more\' })).toBeVisible();\\n     |                                                                               ^\\n  10 |   });\\n```"},{"kind":"text","text":"\\n\\nAs we see above, the test may fail with an error pointing inside the step. If you would like the error to highlight\\nthe \\"login\\" step instead of its internals, use the "},{"kind":"code","text":"`box`"},{"kind":"text","text":" option. An error inside a boxed step points to the step\\ncall site.\\n\\n"},{"kind":"code","text":"```js\\nasync function login(page) {\\n  await test.step(\'login\', async () => {\\n    // ...\\n  }, { box: true });  // Note the \\"box\\" option here.\\n}\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```txt\\nError: Timed out 5000ms waiting for expect(locator).toBeVisible()\\n  ... error details omitted ...\\n\\n  14 |   await page.goto(\'https://github.com/login\');\\n> 15 |   await login(page);\\n     |         ^\\n  16 | });\\n```"},{"kind":"text","text":"\\n\\nYou can also create a TypeScript decorator for a boxed step, similar to a regular step decorator above:\\n\\n"},{"kind":"code","text":"```js\\nfunction boxedStep(target: Function, context: ClassMethodDecoratorContext) {\\n  return function replacementMethod(...args: any) {\\n    const name = this.constructor.name + \'.\' + (context.name as string);\\n    return test.step(name, async () => {\\n      return await target.call(this, ...args);\\n    }, { box: true });  // Note the \\"box\\" option here.\\n  };\\n}\\n\\nclass LoginPage {\\n  constructor(readonly page: Page) {}\\n\\n  @boxedStep\\n  async login() {\\n    // ....\\n  }\\n}\\n\\ntest(\'example\', async ({ page }) => {\\n  const loginPage = new LoginPage(page);\\n  await loginPage.login();  // <-- Error will be reported on this line.\\n});\\n```"}]},"sources":[],"typeParameter":[{"id":22837,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":22838,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step name."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22839,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Step body."}]},"type":{"type":"reflection","declaration":{"id":22840,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22841,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":22628,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":22628,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":22842,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":22843,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22844,"name":"box","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[22844]}],"sources":[]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":22628,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":22845,"name":"expect","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect`"},{"kind":"text","text":" function can be used to create test assertions. Read more about [test assertions](https://playwright.dev/docs/test-assertions).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example\', async ({ page }) => {\\n  await test.expect(page).toHaveTitle(\'Title\');\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"reflection","declaration":{"id":22846,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"Expect","package":"playwright"}},{"id":22847,"name":"extend","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22848,"name":"extend","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Extends the "},{"kind":"code","text":"`test`"},{"kind":"text","text":" object by defining fixtures and/or options that can be used in the tests.\\n\\n**Usage**\\n\\nFirst define a fixture and/or an option.\\n\\n"},{"kind":"code","text":"```js\\nimport { test as base } from \'@playwright/test\';\\nimport { TodoPage } from \'./todo-page\';\\n\\nexport type Options = { defaultItem: string };\\n\\n// Extend basic test by providing a \\"defaultItem\\" option and a \\"todoPage\\" fixture.\\nexport const test = base.extend<Options & { todoPage: TodoPage }>({\\n  // Define an option and provide a default value.\\n  // We can later override it in the config.\\n  defaultItem: [\'Do stuff\', { option: true }],\\n\\n  // Define a fixture. Note that it can use built-in fixture \\"page\\"\\n  // and a new option \\"defaultItem\\".\\n  todoPage: async ({ page, defaultItem }, use) => {\\n    const todoPage = new TodoPage(page);\\n    await todoPage.goto();\\n    await todoPage.addToDo(defaultItem);\\n    await use(todoPage);\\n    await todoPage.removeAll();\\n  },\\n});\\n```"},{"kind":"text","text":"\\n\\nThen use the fixture in the test.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test } from \'./my-test\';\\n\\ntest(\'test 1\', async ({ todoPage }) => {\\n  await todoPage.addToDo(\'my todo\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nConfigure the option in config file.\\n\\n"},{"kind":"code","text":"```js\\n// playwright.config.ts\\nimport { defineConfig } from \'@playwright/test\';\\nimport type { Options } from \'./my-test\';\\n\\nexport default defineConfig<Options>({\\n  projects: [\\n    {\\n      name: \'shopping\',\\n      use: { defaultItem: \'Buy milk\' },\\n    },\\n    {\\n      name: \'wellbeing\',\\n      use: { defaultItem: \'Exercise!\' },\\n    },\\n  ]\\n});\\n```"},{"kind":"text","text":"\\n\\nLearn more about [fixtures](https://playwright.dev/docs/test-fixtures) and [parametrizing tests](https://playwright.dev/docs/test-parameterize)."}]},"sources":[],"typeParameter":[{"id":22849,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"KeyValue"},"name":"KeyValue","package":"playwright"}},{"id":22850,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"KeyValue"},"name":"KeyValue","package":"playwright"},"default":{"type":"reflection","declaration":{"id":22851,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}}],"parameters":[{"id":22852,"name":"fixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An object containing fixtures and/or options. Learn more about [fixtures format](https://playwright.dev/docs/test-fixtures)."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":22640,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":22641,"name":"W","package":"playwright","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":22640,"name":"T","package":"playwright","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"},{"type":"reference","target":22641,"name":"W","package":"playwright","refersToTypeParameter":true}]}],"name":"TestType","package":"playwright"}}]},{"id":22853,"name":"info","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22854,"name":"info","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns information about the currently running test. This method can only be called during the test execution,\\notherwise it throws.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest(\'example test\', async ({ page }) => {\\n  // ...\\n  await test.info().attach(\'screenshot\', {\\n    body: await page.screenshot(),\\n    contentType: \'image/png\',\\n  });\\n});\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}]}],"groups":[{"title":"Properties","children":[22662,22663,22845]},{"title":"Methods","children":[22682,22708,22734,22760,22771,22774,22788,22802,22816,22830,22835,22847,22853]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":281,"character":13}],"signatures":[{"id":22647,"name":"test","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario. Alias for ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/it/)."}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":281,"character":13}],"parameters":[{"id":22648,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":22649,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22650,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22651,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22652,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22653,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22654,"name":"test","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario. Alias for ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/it/)."}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":281,"character":13}],"parameters":[{"id":22655,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":22656,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22657,"name":"body","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22658,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22659,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22660,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22661,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/test","previousId":22437,"nextId":22855},{"id":22855,"name":"describe","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":22871,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a focused group of tests. If there are some focused tests or suites, all of them will be run but nothing\\nelse.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.only(\'focused group\', () => {\\n  test(\'in the focused group\', async ({ page }) => {\\n    // This test will run\\n  });\\n});\\ntest(\'not in the focused group\', async ({ page }) => {\\n  // This test will not run\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-only). Any tests\\nadded in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":28,"character":4}],"type":{"type":"reference","target":22402,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":22872,"name":"skip","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a skipped test group, similarly to\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Tests in the skipped\\ngroup are never run.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.skip(\'skipped group\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.skip(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-skip). Any tests\\nadded in this callback will belong to the group, and will not be run."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":49,"character":4}],"type":{"type":"reference","target":22402,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":22873,"name":"fixme","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a test group similarly to\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1). Tests in this group\\nare marked as \\"fixme\\" and will not be executed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.fixme(\'broken tests\', () => {\\n  test(\'example\', async ({ page }) => {\\n    // This test will not run\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.fixme(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-fixme). Any tests\\nadded in this callback will belong to the group, and will not be run."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":70,"character":4}],"type":{"type":"reference","target":22402,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}},{"id":22874,"name":"serial","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that should always be run serially. If one of the tests fails, all subsequent tests are\\nskipped. All tests in a group are retried together.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-serial). Any tests\\nadded in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":95,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":22402,"name":"SuiteFunction","package":"@serenity-js/playwright-test"},{"type":"reflection","declaration":{"id":22875,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22876,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that should always be run serially. If one of the tests fails, all subsequent\\ntests are skipped. All tests in a group are retried together. If there are some focused tests or suites, all of\\nthem will be run but nothing else.\\n\\n**NOTE** Using serial is not recommended. It is usually better to make your tests isolated, so they can be run\\nindependently.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.serial.only(\'group\', () => {\\n  test(\'runs first\', async ({ page }) => {\\n  });\\n  test(\'runs second\', async ({ page }) => {\\n  });\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.serial.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-serial-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":123,"character":8}],"type":{"type":"reference","target":22402,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}}],"groups":[{"title":"Properties","children":[22876]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":95,"character":28}]}}]}},{"id":22877,"name":"parallel","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a group of tests that could be run in parallel. By default, tests in a single test file run one after\\nanother, but using\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel) allows\\nthem to run in parallel.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"},{"kind":"text","text":"\\n\\nNote that parallel tests are executed in separate processes and cannot share any state or global variables. Each of\\nthe parallel tests executes all relevant hooks."}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel). Any\\ntests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":150,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":22402,"name":"SuiteFunction","package":"@serenity-js/playwright-test"},{"type":"reflection","declaration":{"id":22878,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22879,"name":"only","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"**NOTE** See [test.describe.configure([options])](https://playwright.dev/docs/api/class-test#test-describe-configure) for\\nthe preferred way of configuring the execution mode.\\n\\nDeclares a focused group of tests that could be run in parallel. This is similar to\\n[test.describe.parallel(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel), but\\nfocuses the group. If there are some focused tests or suites, all of them will be run but nothing else.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.describe.parallel.only(\'group\', () => {\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n});\\n```"}],"blockTags":[{"tag":"@param","name":"title","content":[{"kind":"text","text":"Group title."}]},{"tag":"@param","name":"callback","content":[{"kind":"text","text":"A callback that is run immediately when calling\\n[test.describe.parallel.only(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-parallel-only).\\nAny tests added in this callback will belong to the group."}]}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":173,"character":8}],"type":{"type":"reference","target":22402,"name":"SuiteFunction","package":"@serenity-js/playwright-test"}}],"groups":[{"title":"Properties","children":[22879]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":150,"character":30}]}}]}},{"id":22880,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the enclosing scope. Can be executed either on the top level or inside a describe. Configuration applies\\nto the entire scope, regardless of whether it run before or after the test declaration.\\n\\nLearn more about the execution modes [here](https://playwright.dev/docs/test-parallel).\\n\\n**Usage**\\n- Running tests in parallel.\\n\\n  "},{"kind":"code","text":"```js\\n  // Run all the tests in the file concurrently using parallel workers.\\n  test.describe.configure({ mode: \'parallel\' });\\n  test(\'runs in parallel 1\', async ({ page }) => {});\\n  test(\'runs in parallel 2\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Running tests serially, retrying from the start.\\n\\n  **NOTE** Running serially is not recommended. It is usually better to make your tests isolated, so they can be\\n  run independently.\\n\\n  "},{"kind":"code","text":"```js\\n  // Annotate tests as inter-dependent.\\n  test.describe.configure({ mode: \'serial\' });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Configuring retries and timeout for each test.\\n\\n  "},{"kind":"code","text":"```js\\n  // Each test in the file will be retried twice and have a timeout of 20 seconds.\\n  test.describe.configure({ retries: 2, timeout: 20_000 });\\n  test(\'runs first\', async ({ page }) => {});\\n  test(\'runs second\', async ({ page }) => {});\\n  ```"},{"kind":"text","text":"\\n\\n- Run multiple describes in parallel, but tests inside each describe in order.\\n\\n  "},{"kind":"code","text":"```js\\n  test.describe.configure({ mode: \'parallel\' });\\n\\n  test.describe(\'A, runs in parallel with B\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order A1\', async ({ page }) => {});\\n    test(\'in order A2\', async ({ page }) => {});\\n  });\\n\\n  test.describe(\'B, runs in parallel with A\', () => {\\n    test.describe.configure({ mode: \'default\' });\\n    test(\'in order B1\', async ({ page }) => {});\\n    test(\'in order B2\', async ({ page }) => {});\\n  });\\n  ```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":4}],"type":{"type":"reflection","declaration":{"id":22881,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":15}],"signatures":[{"id":22882,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":15}],"parameters":[{"id":22883,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22884,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22885,"name":"mode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":27}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"parallel"},{"type":"literal","value":"serial"}]}},{"id":22886,"name":"retries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":69}],"type":{"type":"intrinsic","name":"number"}},{"id":22887,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":87}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[22885,22886,22887]}],"sources":[{"fileName":"packages/playwright-test/src/api/DescribeFunction.ts","line":232,"character":25}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[22871,22872,22873,22874,22877,22880]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":331,"character":13}],"signatures":[{"id":22856,"name":"describe","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of test scenarios.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures, Value } from \'@serenity-js/web\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  test.use({\\n    defaultActorName: \'Serena\',\\n    crew: [\\n      Photographer.whoWill(TakePhotosOfFailures),\\n    ],\\n  })\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'should clear text input field when an item is added\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(Value.of(newTodoInput()), equals(\'\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Playwright Test "},{"kind":"code","text":"`describe`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-describe-1)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":331,"character":13}],"parameters":[{"id":22857,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":22858,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22859,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":29,"character":30}],"signatures":[{"id":22860,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":29,"character":30}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22861,"name":"describe","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of test scenarios.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures, Value } from \'@serenity-js/web\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  test.use({\\n    defaultActorName: \'Serena\',\\n    crew: [\\n      Photographer.whoWill(TakePhotosOfFailures),\\n    ],\\n  })\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'should clear text input field when an item is added\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(Value.of(newTodoInput()), equals(\'\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Playwright Test "},{"kind":"code","text":"`describe`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-describe-1)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":331,"character":13}],"parameters":[{"id":22862,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22863,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":54,"character":15}],"signatures":[{"id":22864,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":54,"character":15}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22865,"name":"describe","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a group of test scenarios.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures, Value } from \'@serenity-js/web\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  test.use({\\n    defaultActorName: \'Serena\',\\n    crew: [\\n      Photographer.whoWill(TakePhotosOfFailures),\\n    ],\\n  })\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'should clear text input field when an item is added\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(Value.of(newTodoInput()), equals(\'\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Playwright Test "},{"kind":"code","text":"`describe`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-describe-1)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":331,"character":13}],"parameters":[{"id":22866,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":22867,"name":"details","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestDetails"},"name":"TestDetails","package":"playwright"}},{"id":22868,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22869,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":65,"character":52}],"signatures":[{"id":22870,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/SuiteFunction.ts","line":65,"character":52}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/describe","previousId":22646,"nextId":22888},{"id":22888,"name":"beforeAll","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":333,"character":13}],"signatures":[{"id":22889,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":333,"character":13}],"parameters":[{"id":22890,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22891,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22892,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22893,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22894,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22895,"name":"beforeAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore all tests in the group.\\n\\nYou can use [test.afterAll([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-all) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":333,"character":13}],"parameters":[{"id":22896,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22897,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22898,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22899,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22900,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22901,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/beforeAll","previousId":22855,"nextId":22902},{"id":22902,"name":"beforeEach","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":335,"character":13}],"signatures":[{"id":22903,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":335,"character":13}],"parameters":[{"id":22904,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22905,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22906,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22907,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22908,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22909,"name":"beforeEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nbefore each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach([title, hookFunction])](https://playwright.dev/docs/api/class-test#test-after-each) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`test.beforeEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.beforeEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.beforeEach(\'Open start URL\', async ({ page }) => {\\n  console.log(`Running ${test.info().title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":335,"character":13}],"parameters":[{"id":22910,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22911,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22912,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22913,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22914,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22915,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/beforeEach","previousId":22888,"nextId":22916},{"id":22916,"name":"afterEach","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":337,"character":13}],"signatures":[{"id":22917,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":337,"character":13}],"parameters":[{"id":22918,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22919,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22920,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22921,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22922,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22923,"name":"afterEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter each test in the group.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"tsLinkText":""},{"kind":"text","text":" as the test body itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"tsLinkText":""},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can check whether the test succeeded or failed.\\n- "},{"kind":"code","text":"`test.afterEach(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterEach(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }) => {\\n  console.log(`Finished ${test.info().title} with status ${test.info().status}`);\\n\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\ntest.afterEach(\'Status check\', async ({ page }) => {\\n  if (test.info().status !== test.info().expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":337,"character":13}],"parameters":[{"id":22924,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22925,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22926,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22927,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22928,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22929,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/afterEach","previousId":22902,"nextId":22930},{"id":22930,"name":"afterAll","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":339,"character":13}],"signatures":[{"id":22931,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":339,"character":13}],"parameters":[{"id":22932,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22933,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22934,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22935,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22936,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":22937,"name":"afterAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe([title, details, callback])](https://playwright.dev/docs/api/class-test#test-describe) group, runs\\nafter all tests in the group.\\n\\n**Details**\\n\\nWhen multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nPlaywright will continue running all applicable hooks even if some of them have failed.\\n- "},{"kind":"code","text":"`test.afterAll(hookFunction)`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`test.afterAll(title, hookFunction)`"},{"kind":"text","text":"\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"},{"kind":"text","text":"\\n\\nAlternatively, you can declare a hook **with a title**.\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":339,"character":13}],"parameters":[{"id":22938,"name":"title","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":22939,"name":"inner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22940,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22941,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22942,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":22943,"name":"testInfo","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestInfo"},"name":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/afterAll","previousId":22916,"nextId":22944},{"id":22944,"name":"expect","variant":"declaration","kind":64,"flags":{"isExternal":true},"children":[{"id":22997,"name":"any","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22998,"name":"any","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.any()`"},{"kind":"text","text":" matches any object instance created from the "},{"kind":"code","text":"`constructor`"},{"kind":"text","text":" or a corresponding primitive type. Use it\\ninside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// Match instance of a class.\\nclass Example {}\\nexpect(new Example()).toEqual(expect.any(Example));\\n\\n// Match any number.\\nexpect({ prop: 1 }).toEqual({ prop: expect.any(Number) });\\n\\n// Match any string.\\nexpect(\'abc\').toEqual(expect.any(String));\\n```"}]},"sources":[],"parameters":[{"id":22999,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23000,"name":"anything","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23001,"name":"anything","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.anything()`"},{"kind":"text","text":" matches everything except "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":". Use it inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nconst value = { prop: 1 };\\nexpect(value).toEqual({ prop: expect.anything() });\\nexpect(value).not.toEqual({ otherProp: expect.anything() });\\n```"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23002,"name":"arrayContaining","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23003,"name":"arrayContaining","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.arrayContaining()`"},{"kind":"text","text":" matches an array that contains all of the elements in the expected array, in any order.\\nNote that received array may be a superset of the expected array and contain some extra elements.\\n\\nUse this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect([1, 2, 3]).toEqual(expect.arrayContaining([3, 1]));\\nexpect([1, 2, 3]).not.toEqual(expect.arrayContaining([1, 4]));\\n```"}]},"sources":[],"parameters":[{"id":23004,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23005,"name":"closeTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23006,"name":"closeTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Compares floating point numbers for approximate equality. Use this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching. When just comparing two numbers, prefer\\n[expect(value).toBeCloseTo(expected[, numDigits])](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-be-close-to).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect({ prop: 0.1 + 0.2 }).not.toEqual({ prop: 0.3 });\\nexpect({ prop: 0.1 + 0.2 }).toEqual({ prop: expect.closeTo(0.3, 5) });\\n```"}]},"sources":[],"parameters":[{"id":23007,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":23008,"name":"precision","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23009,"name":"objectContaining","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23010,"name":"objectContaining","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.objectContaining()`"},{"kind":"text","text":" matches an object that contains and matches all of the properties in the expected\\nobject. Note that received object may be a superset of the expected object and contain some extra properties.\\n\\nUse this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching. Object properties can be matchers to further relax the expectation. See examples.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// Assert some of the properties.\\nexpect({ foo: 1, bar: 2 }).toEqual(expect.objectContaining({ foo: 1 }));\\n\\n// Matchers can be used on the properties as well.\\nexpect({ foo: 1, bar: 2 }).toEqual(expect.objectContaining({ bar: expect.any(Number) }));\\n\\n// Complex matching of sub-properties.\\nexpect({\\n  list: [1, 2, 3],\\n  obj: { prop: \'Hello world!\', another: \'some other value\' },\\n  extra: \'extra\',\\n}).toEqual(expect.objectContaining({\\n  list: expect.arrayContaining([2, 3]),\\n  obj: expect.objectContaining({ prop: expect.stringContaining(\'Hello\') }),\\n}));\\n```"}]},"sources":[],"parameters":[{"id":23011,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23012,"name":"stringContaining","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23013,"name":"stringContaining","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.stringContaining()`"},{"kind":"text","text":" matches a string that contains the expected substring. Use this method inside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect(\'Hello world!\').toEqual(expect.stringContaining(\'Hello\'));\\n```"}]},"sources":[],"parameters":[{"id":23014,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":23015,"name":"stringMatching","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":23016,"name":"stringMatching","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`expect.stringMatching()`"},{"kind":"text","text":" matches a received string that in turn matches the expected pattern. Use this method\\ninside\\n[expect(value).toEqual(expected)](https://playwright.dev/docs/api/class-genericassertions#generic-assertions-to-equal)\\nto perform pattern matching.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\nexpect(\'123ms\').toEqual(expect.stringMatching(/\\\\d+m?s/));\\n\\n// Inside another matcher.\\nexpect({\\n  status: \'passed\',\\n  time: \'123ms\',\\n}).toEqual({\\n  status: expect.stringMatching(/passed|failed/),\\n  time: expect.stringMatching(/\\\\d+m?s/),\\n});\\n```"}]},"sources":[],"parameters":[{"id":23017,"name":"sample","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"RegExp"},"name":"RegExp","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatcher"},"name":"AsymmetricMatcher","package":"playwright"}}]},{"id":22952,"name":"soft","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reflection","declaration":{"id":22953,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22954,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"typeParameter":[{"id":22955,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":22956,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22955,"name":"T","package":"playwright","refersToTypeParameter":true}},{"id":22957,"name":"messageOrOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":22958,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22959,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[22959]}],"sources":[]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MakeMatchers"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","target":22955,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reflection","declaration":{"id":22960,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"MakeMatchers","package":"playwright"}}]}}},{"id":22961,"name":"poll","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reflection","declaration":{"id":22962,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22963,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"typeParameter":[{"id":22964,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":22965,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22966,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22967,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":22964,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":22964,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}},{"id":22968,"name":"messageOrOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":22969,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22970,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":22971,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":22972,"name":"intervals","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}}}],"groups":[{"title":"Properties","children":[22970,22971,22972]}],"sources":[]}}]}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"GenericAssertions"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"GenericAssertions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"__global.PlaywrightTest.Matchers"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},{"type":"reference","target":22964,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"Matchers","package":"playwright","qualifiedName":"__global.PlaywrightTest.Matchers"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"SnapshotAssertions"},"name":"SnapshotAssertions","package":"playwright"},{"type":"reflection","declaration":{"id":22973,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22974,"name":"not","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"If you know how to test something, "},{"kind":"code","text":"`.not`"},{"kind":"text","text":" lets you test its opposite."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"BaseMatchers"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},{"type":"reference","target":22964,"name":"T","package":"playwright","refersToTypeParameter":true}],"name":"BaseMatchers","package":"playwright"}}],"groups":[{"title":"Properties","children":[22974]}],"sources":[]}}]}}]}}},{"id":22975,"name":"extend","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22976,"name":"extend","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"typeParameter":[{"id":22977,"name":"MoreMatchers","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":22978,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22979,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22980,"name":"this","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"ExpectMatcherState"},"name":"ExpectMatcherState","package":"playwright"}},{"id":22981,"name":"receiver","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}},{"id":22982,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MatcherReturnType"},"name":"MatcherReturnType","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MatcherReturnType"},"name":"MatcherReturnType","package":"playwright"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}}],"parameters":[{"id":22983,"name":"matchers","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22977,"name":"MoreMatchers","package":"playwright","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"intersection","types":[{"type":"reflection","declaration":{"id":22984,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reference","target":22977,"name":"MoreMatchers","package":"playwright","refersToTypeParameter":true}]}],"name":"Expect","package":"playwright"}}]},{"id":22985,"name":"configure","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reflection","declaration":{"id":22986,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22987,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":22988,"name":"configuration","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":22989,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22990,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":22991,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":22992,"name":"soft","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[22990,22991,22992]}],"sources":[]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Expect"},"typeArguments":[{"type":"reflection","declaration":{"id":22993,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"Expect","package":"playwright"}}]}}},{"id":22994,"name":"getState","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":22995,"name":"getState","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"unknown"}}]},{"id":22996,"name":"not","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"AsymmetricMatchers"},"name":"AsymmetricMatchers","package":"playwright"},{"type":"union","types":[{"type":"literal","value":"any"},{"type":"literal","value":"anything"}]}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"}}],"groups":[{"title":"Properties","children":[22952,22961,22985,22996]},{"title":"Methods","children":[22997,23000,23002,23005,23009,23012,23015,22975,22994]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":341,"character":13}],"signatures":[{"id":22945,"name":"expect","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":341,"character":13}],"typeParameter":[{"id":22946,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":22947,"name":"actual","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22946,"name":"T","package":"playwright","refersToTypeParameter":true}},{"id":22948,"name":"messageOrOptions","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":22949,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":22950,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[22950]}],"sources":[]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"MakeMatchers"},"typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","target":22946,"name":"T","package":"playwright","refersToTypeParameter":true},{"type":"reflection","declaration":{"id":22951,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"MakeMatchers","package":"playwright"}}],"permalink":"/api/playwright-test/function/expect","previousId":22930,"nextId":23018},{"id":23018,"name":"useFixtures","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":343,"character":13}],"signatures":[{"id":23019,"name":"useFixtures","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":343,"character":13}],"typeParameter":[{"id":23020,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}},{"id":23021,"name":"W","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"default":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":23022,"name":"customFixtures","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"Fixtures"},"typeArguments":[{"type":"reference","target":22430,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22431,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","package":"playwright"}}],"type":{"type":"reference","target":22424,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestArgs"},"name":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightTestOptions"},"name":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":22430,"name":"T","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerArgs"},"name":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"PlaywrightWorkerOptions"},"name":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"},{"type":"reference","target":22431,"name":"W","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]}],"name":"TestApi","package":"@serenity-js/playwright-test"}}],"permalink":"/api/playwright-test/function/useFixtures","previousId":22944,"nextId":22418},{"id":22418,"name":"useBase","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":483,"character":16}],"signatures":[{"id":22419,"name":"useBase","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a Serenity/JS BDD-style test API around the given Playwright [base test](https://playwright.dev/docs/test-fixtures).\\n\\n## Using default configuration\\n\\nWhen your test scenario doesn\'t require [custom test fixtures](https://playwright.dev/docs/test-fixtures),\\nand you\'re happy with the default [base test](https://playwright.dev/docs/api/class-test#test-call) offered by Playwright,\\nyou can import test API functions such as ["},{"kind":"code","text":"`describe`"},{"kind":"text","text":"](/api/playwright-test/function/describe/) and ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/describe/) directly from "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\n// override default fixtures if needed\\ntest.use({\\n  defaultActorName: \'Alice\'\\n})\\n\\ndescribe(\'Serenity/JS default test API\', () => {\\n\\n  it(\'enables easy access to actors and standard Playwright fixtures\', async ({ actor, browserName }) => {\\n    await actor.attemptsTo(\\n      Log.the(browserName),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nIn the above example, importing test API functions directly from "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":" is the equivalent of the following setup:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { test as playwrightBaseTest } from \'@playwright/test\'\\nimport { useBase } from \'@serenity-js/playwright-test\'\\n\\nconst { describe, it, test, beforeEach, afterEach } = useBase(playwrightBaseTest)\\n```"},{"kind":"text","text":"\\n\\n## Using custom fixtures\\n\\nWhen your test scenario requires [custom test fixtures](https://playwright.dev/docs/test-fixtures),\\nbut you\'re still happy with the default [base test](https://playwright.dev/docs/api/class-test#test-call) offered by Playwright,\\nyou can create fixture-aware test API functions such as ["},{"kind":"code","text":"`describe`"},{"kind":"text","text":"](/api/playwright-test/function/describe/) and ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/describe/)\\nby calling ["},{"kind":"code","text":"`useFixtures`"},{"kind":"text","text":"](/api/playwright-test/function/useFixtures/).\\n\\nFor example, you can create a test scenario using a static "},{"kind":"code","text":"`message`"},{"kind":"text","text":" fixture as follows:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: \'Hello world!\'\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nThe value of your test fixtures can be either static or dynamic and based on the value of other fixtures.\\n\\nTo create a dynamic test fixture use the [function syntax](https://playwright.dev/docs/test-fixtures):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Log } from \'@serenity-js/core\'\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: async ({ actor }, use) => {\\n    await use(`Hello, ${ actor.name }`);\\n  }\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nIn the above example, creating test API functions via "},{"kind":"code","text":"`useFixtures`"},{"kind":"text","text":" is the equivalent of the following setup:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { test as playwrightBaseTest } from \'@playwright/test\'\\nimport { useBase } from \'@serenity-js/playwright-test\'\\n\\nconst { describe, it, test, beforeEach, afterEach } = useBase(playwrightBaseTest)\\n  .useFixtures<{ message: string }>({\\n    message: async ({ actor }, use) => {\\n      await use(`Hello, ${ actor.name }`);\\n    }\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Using custom base test\\n\\nIn cases where you need to use a non-default base test, for example when doing [UI component testing](https://playwright.dev/docs/test-components),\\nyou can create Serenity/JS test API functions around your preferred base test.\\n\\n"},{"kind":"code","text":"```tsx\\nimport { test as componentTest } from \'@playwright/experimental-ct-react\'\\nimport { Ensure, contain } from \'@serenity-js/assertions\'\\nimport { useBase } from \'@serenity-js/playwright-test\'\\nimport { Enter, PageElement, CssClasses } from \'@serenity-js/web\'\\n\\nimport EmailInput from \'./EmailInput\';\\n\\nconst { it, describe } = useBase(componentTest).useFixtures<{ emailAddress: string }>({\\n  emailAddress: ({ actor }, use) => {\\n    use(`${ actor.name }@example.org`)\\n  }\\n})\\n\\ndescribe(\'EmailInput\', () => {\\n\\n  it(\'allows valid email addresses\', async ({ actor, mount, emailAddress }) => {\\n    const nativeComponent = await mount(<EmailInput/>);\\n\\n    const component = PageElement.from(nativeComponent);\\n\\n    await actor.attemptsTo(\\n      Enter.theValue(emailAddress).into(component),\\n      Ensure.that(CssClasses.of(component), contain(\'valid\')),\\n    )\\n  })\\n})\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":483,"character":16}],"typeParameter":[{"id":22420,"name":"TestArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"}},{"id":22421,"name":"WorkerArgs","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"default":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":22422,"name":"baseTest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"TestType"},"typeArguments":[{"type":"reference","target":22420,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true},{"type":"reference","target":22421,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestType","package":"playwright"}}],"type":{"type":"reference","target":22424,"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":22395,"name":"SerenityOptions","package":"@serenity-js/playwright-test"},{"type":"literal","value":"actors"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reference","target":22383,"name":"SerenityFixtures","package":"@serenity-js/playwright-test"},{"type":"reference","target":22420,"name":"TestArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}]},{"type":"reference","target":22421,"name":"WorkerArgs","package":"@serenity-js/playwright-test","refersToTypeParameter":true}],"name":"TestApi","package":"@serenity-js/playwright-test"}}],"permalink":"/api/playwright-test/function/useBase","previousId":23018,"nextId":22383},{"id":22358,"name":"SerenityReporterForPlaywrightTestConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration object accepted by "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":" reporter.\\n\\nSee ["},{"kind":"code","text":"`SerenityOptions`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/) for usage examples."}]},"children":[{"id":22359,"name":"crew","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/) or [stage crew members](/api/core/interface/StageCrewMember/)\\nto be instantiated in Playwright Test reporter process and notified of [Serenity/JS domain events](/api/core-events/class/DomainEvent/) that occur during the scenario execution.\\nNote that the "},{"kind":"code","text":"`crew`"},{"kind":"text","text":" can also be configured using [class descriptions](/api/core/#ClassDescription).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityOptions`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/)\\n- ["},{"kind":"code","text":"`SerenityConfig.crew`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#crew)"}]},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":58,"character":4}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"},{"type":"reference","target":2126,"typeArguments":[{"type":"reference","target":1962,"name":"ListensToDomainEvents","package":"@serenity-js/core"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"},{"type":"reference","target":66,"name":"ClassDescription","package":"@serenity-js/core"}]}}},{"id":22360,"name":"outputStream","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An output stream to be injected into [stage crew member builders](/api/core/interface/StageCrewMemberBuilder/)\\n\\nDefaults to ["},{"kind":"code","text":"`process.stdout`"},{"kind":"text","text":"](https://nodejs.org/api/process.html#process_process_stdout).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityConfig.outputStream`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/#outputStream)"}]},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":68,"character":4}],"type":{"type":"reference","target":2159,"name":"OutputStream","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[22359,22360]}],"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":48,"character":17}],"permalink":"/api/playwright-test/interface/SerenityReporterForPlaywrightTestConfig","previousId":22402,"nextId":22361},{"id":23023,"name":"default","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS reporter that receives notifications from Playwright Test and emits them as\\nSerenity/JS [Serenity/JS domain events](/api/core-events/class/DomainEvent/) which can be used by\\nSerenity/JS [stage crew members](/api/core/interface/StageCrewMember/)."}]},"children":[{"id":23024,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":89,"character":4}],"signatures":[{"id":23025,"name":"new default","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":89,"character":4}],"parameters":[{"id":23026,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22358,"name":"SerenityReporterForPlaywrightTestConfig","package":"@serenity-js/playwright-test"}},{"id":23027,"name":"serenity","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instance of ["},{"kind":"code","text":"`Serenity`"},{"kind":"text","text":"](/api/core/class/Serenity/), specific to the Node process running this Serenity reporter.\\n Note that Playwright runs test workers and reporters in separate processes."}]},"type":{"type":"reference","target":1839,"name":"Serenity","package":"@serenity-js/core"},"defaultValue":"reporterSerenityInstance"},{"id":23028,"name":"requirementsHierarchy","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Root directory of the requirements hierarchy, used to determine capabilities and themes."}]},"type":{"type":"reference","name":"RequirementsHierarchy","package":"@serenity-js/core"},"defaultValue":"..."}],"type":{"type":"reference","target":23023,"name":"SerenityReporterForPlaywrightTest","package":"@serenity-js/playwright-test"}}]},{"id":23034,"name":"onBegin","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":99,"character":4}],"signatures":[{"id":23035,"name":"onBegin","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":99,"character":4}],"parameters":[{"id":23036,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/test.d.ts","qualifiedName":"FullConfig"},"typeArguments":[{"type":"reflection","declaration":{"id":23037,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}},{"type":"reflection","declaration":{"id":23038,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true}}}],"name":"FullConfig","package":"playwright"}},{"id":23039,"name":"suite","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"Suite"},"name":"Suite","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onBegin"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onBegin"}},{"id":23040,"name":"onTestBegin","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":107,"character":4}],"signatures":[{"id":23041,"name":"onTestBegin","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":107,"character":4}],"parameters":[{"id":23042,"name":"test","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestCase"},"name":"TestCase","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestBegin"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestBegin"}},{"id":23043,"name":"onTestEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":145,"character":4}],"signatures":[{"id":23044,"name":"onTestEnd","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":145,"character":4}],"parameters":[{"id":23045,"name":"test","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestCase"},"name":"TestCase","package":"playwright"}},{"id":23046,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestResult"},"name":"TestResult","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestEnd"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onTestEnd"}},{"id":23047,"name":"onError","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":186,"character":4}],"signatures":[{"id":23048,"name":"onError","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":186,"character":4}],"parameters":[{"id":23049,"name":"error","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"TestError"},"name":"TestError","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onError"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onError"}},{"id":23064,"name":"onEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":256,"character":10}],"signatures":[{"id":23065,"name":"onEnd","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":256,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onEnd"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.onEnd"}},{"id":23075,"name":"printsToStdio","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":324,"character":4}],"signatures":[{"id":23076,"name":"printsToStdio","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":324,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"implementationOf":{"type":"reference","target":-1,"name":"Reporter.printsToStdio"}}],"implementationOf":{"type":"reference","target":-1,"name":"Reporter.printsToStdio"}}],"groups":[{"title":"Constructors","children":[23024]},{"title":"Methods","children":[23034,23040,23043,23047,23064,23075]}],"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":76,"character":13}],"implementedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/playwright/types/testReporter.d.ts","qualifiedName":"Reporter"},"name":"Reporter","package":"playwright"}],"permalink":"/api/playwright-test/class/default","nextId":22437}],"groups":[{"title":"Classes","children":[23023]},{"title":"Functions","children":[22437,22646,22855,22888,22902,22916,22930,22944,23018,22418]},{"title":"Interfaces","children":[22383,22395,22402,22358]},{"title":"Type Aliases","children":[22361,22380,22424]},{"title":"Variables","children":[22423]}],"sources":[{"fileName":"packages/playwright-test/src/index.ts","line":1,"character":0}],"permalink":"/api/playwright-test"},"urlSlug":"playwright-test"}],"packageName":"@serenity-js/playwright-test","packageVersion":"3.25.4"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":8,"name":"@serenity-js/protractor/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6011,"name":"Config","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor configuration object with an additional\\nsection to configure the Serenity/JS framework.\\n\\n## Learn more\\n- [Protractor config](https://github.com/angular/protractor/blob/master/lib/config.ts)\\n- ["},{"kind":"code","text":"`SerenityConfig`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/)\\n- ["},{"kind":"code","text":"`configure`"},{"kind":"text","text":"](/api/core/function/configure/)"}]},"children":[{"id":6012,"name":"serenity","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`SerenityConfig`"},{"kind":"text","text":"](/api/core/class/SerenityConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":19,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":67,"name":"SerenityConfig","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":6013,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6014,"name":"runner","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":19,"character":33}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6014]}],"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":19,"character":31}]}}]}},{"id":6015,"name":"seleniumServerJar","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The location of the standalone Selenium Server jar file, relative\\nto the location of webdriver-manager. If no other method of starting\\nSelenium Server is found, this will default to\\nnode_modules/protractor/node_modules/webdriver-manager/selenium/<jar file>"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumServerJar"}},{"id":6016,"name":"seleniumServerStartTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The timeout milliseconds waiting for a local standalone Selenium Server to start.\\n\\ndefault: 30000ms"}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumServerStartTimeout"}},{"id":6017,"name":"localSeleniumStandaloneOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Can be an object which will be passed to the SeleniumServer class as args.\\nSee a full list of options at\\nhttps://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/remote/index.js\\nIf you specify "},{"kind":"code","text":"`args`"},{"kind":"text","text":" or "},{"kind":"code","text":"`port`"},{"kind":"text","text":" in this object, it will overwrite the\\nvalues set via the deprecated config values "},{"kind":"code","text":"`seleniumPort`"},{"kind":"text","text":" and\\n"},{"kind":"code","text":"`seleniumArgs`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6018,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6019,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The port to start the Selenium Server on, or null if the server should\\nfind its own unused port."}]},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":6020,"name":"args","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional command line options to pass to selenium. For example,\\nif you need to change the browser timeout, use\\nseleniumArgs: [\'-browserTimeout=60\']"}]},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":6021,"name":"jvmArgs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional command line jvm options to pass to selenium. For example,\\nif you need to change the browser driver, use\\njvmArgs: [\'-Dwebdriver.ie.driver=IEDriverServer_Win32_2.53.1.exe\']"}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","children":[6019,6020,6021]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.localSeleniumStandaloneOpts"}},{"id":6022,"name":"chromeDriver","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"ChromeDriver location is used to help find the chromedriver binary. This will be passed to the\\nSelenium jar as the system property webdriver.chrome.driver. If the value is not set when\\nlaunching locally, it will use the default values downloaded from webdriver-manager.\\n\\nexample:\\nchromeDriver: \'./node_modules/webdriver-manager/selenium/chromedriver_2.20\'"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.chromeDriver"}},{"id":6023,"name":"geckoDriver","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"geckoDriver location is used to help find the gecko binary. This will be passed to the Selenium\\njar as the system property webdriver.gecko.driver. If the value is not set when launching\\nlocally, it will use the default values downloaded from webdriver-manager."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.geckoDriver"}},{"id":6024,"name":"seleniumAddress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The address of a running Selenium Server. If specified, Protractor will\\nconnect to an already running instance of Selenium. This usually looks like\\nseleniumAddress: \'http://localhost:4444/wd/hub\'"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumAddress"}},{"id":6025,"name":"seleniumSessionId","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The selenium session id allows Protractor to attach to an existing selenium\\nbrowser session. The selenium session is maintained after the test has\\ncompleted. Ignored if seleniumAddress is null."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumSessionId"}},{"id":6026,"name":"sauceProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The address of a proxy server to use for communicating to Sauce Labs REST APIs via the\\nsaucelabs node module. For example, the Sauce Labs Proxy can be setup with: sauceProxy:\\n\'http://localhost:3128\'"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceProxy"}},{"id":6027,"name":"webDriverProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The proxy address that WebDriver (e.g. Selenium commands) traffic will go through\\nwhich is tied to the browser session."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.webDriverProxy"}},{"id":6028,"name":"useBlockingProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If specified, connect to webdriver through a proxy that manages client-side\\nsynchronization. Blocking Proxy is an experimental feature and may change\\nwithout notice."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.useBlockingProxy"}},{"id":6029,"name":"blockingProxyUrl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If specified, Protractor will connect to the Blocking Proxy at the given\\nurl instead of starting it\'s own."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.blockingProxyUrl"}},{"id":6030,"name":"sauceUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If the sauceUser and sauceKey are specified, seleniumServerJar will be\\nignored. The tests will be run remotely using Sauce Labs."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceUser"}},{"id":6031,"name":"sauceKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If the sauceUser and sauceKey are specified, seleniumServerJar will be\\nignored. The tests will be run remotely using Sauce Labs."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceKey"}},{"id":6032,"name":"sauceRegion","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you run your tests on SauceLabs you can specify the region you want to run your tests\\nin via the "},{"kind":"code","text":"`sauceRegion`"},{"kind":"text","text":" property. Available short handles for regions are:\\nus: us-west-1 (default)\\neu: eu-central-1"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceRegion"}},{"id":6033,"name":"sauceAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use sauceAgent if you need custom HTTP agent to connect to saucelabs.com APIs.\\nThis is needed if your computer is behind a corporate proxy.\\n\\nTo match sauce agent implementation, use\\n[HttpProxyAgent](https://github.com/TooTallNate/node-http-proxy-agent)\\nto generate the agent or use sauceProxy as an alternative. If a\\nsauceProxy is provided, the sauceAgent will be overridden."}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceAgent"}},{"id":6034,"name":"sauceBuild","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use sauceBuild if you want to group test capabilites by a build ID"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceBuild"}},{"id":6035,"name":"sauceSeleniumUseHttp","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, Protractor will use http:// protocol instead of https:// to\\nconnect to Sauce Labs defined by sauceSeleniumAddress.\\n\\ndefault: false"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceSeleniumUseHttp"}},{"id":6036,"name":"sauceSeleniumAddress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use sauceSeleniumAddress if you need to customize the URL Protractor\\nuses to connect to sauce labs (for example, if you are tunneling selenium\\ntraffic through a sauce connect tunnel). Default is\\nondemand.saucelabs.com:443/wd/hub"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.sauceSeleniumAddress"}},{"id":6037,"name":"testobjectUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If testobjectUser and testobjectKey are specified, kobitonUser, kobitonKey, browserstackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.testobjectUser"}},{"id":6038,"name":"testobjectKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If testobjectUser and testobjectKey are specified, kobitonUser, kobitonKey, browserStackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.testobjectKey"}},{"id":6039,"name":"kobitonUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If kobitonUser and kobitonKey are specified, testobjectUser, testojbectKey, browserstackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.kobitonUser"}},{"id":6040,"name":"kobitonKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If kobitonUser and kobitonKey are specified, testobjectUser, testojbectKey, browserStackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.kobitonKey"}},{"id":6041,"name":"browserstackUser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If browserstackUser and browserstackKey are specified, seleniumServerJar\\nwill be ignored. The tests will be run remotely using BrowserStack."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.browserstackUser"}},{"id":6042,"name":"browserstackKey","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If browserstackUser and browserstackKey are specified, seleniumServerJar\\nwill be ignored. The tests will be run remotely using BrowserStack."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.browserstackKey"}},{"id":6043,"name":"browserstackProxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Proxy server to be used for connecting to BrowserStack APIs\\ne.g. \\"http://proxy.example.com:1234\\".\\nThis should be used when you are behind a proxy server."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.browserstackProxy"}},{"id":6044,"name":"directConnect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, Protractor will connect directly to the browser Drivers\\nat the locations specified by chromeDriver and firefoxPath. Only Chrome\\nand Firefox are supported for direct connect.\\n\\ndefault: false"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.directConnect"}},{"id":6045,"name":"firefoxPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to the firefox application binary. If null, will attempt to find\\nfirefox in the default locations."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.firefoxPath"}},{"id":6046,"name":"seleniumWebDriver","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/selenium-webdriver/index.d.ts","qualifiedName":"WebDriver"},"name":"WebDriver","package":"@types/selenium-webdriver"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumWebDriver"}},{"id":6047,"name":"noGlobals","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use default globals: \'protractor\', \'browser\', \'$\', \'$$\', \'element\', \'by\'.\\nThese also exist as properties of the protractor namespace:\\n\'protractor.browser\', \'protractor.$\', \'protractor.$$\',\\n\'protractor.element\', \'protractor.by\', and \'protractor.By\'.\\n\\nWhen no globals is set to true, the only available global variable will be\\n\'protractor\'."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.noGlobals"}},{"id":6048,"name":"specs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Required. Spec patterns are relative to the location of this config.\\n\\nExample:\\nspecs: [\\n  \'spec/*_spec.js\'\\n]"}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.specs"}},{"id":6049,"name":"exclude","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Patterns to exclude specs."}]},"sources":[],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.exclude"}},{"id":6050,"name":"suites","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Alternatively, suites may be used. When run without a command line\\nparameter, all suites will run. If run with --suite=smoke or\\n--suite=smoke,full only the patterns matched by the specified suites will\\nrun.\\n\\nExample:\\nsuites: {\\n  smoke: \'spec/smoketests/*.js\',\\n  full: \'spec/*.js\'\\n}"}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.suites"}},{"id":6051,"name":"suite","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you would like protractor to use a specific suite by default instead of\\nall suites, you can put that in the config file as well."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.suite"}},{"id":6052,"name":"capabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor can launch your tests on one or more browsers. If you are\\ntesting on a single browser, use the capabilities option. If you are\\ntesting on multiple browsers, use the multiCapabilities array.\\n\\nFor a list of available capabilities, see\\nhttps://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities\\nIn addition, you may specify count, shardTestFiles, and maxInstances.\\n\\nExample:\\ncapabilities: {\\n  browserName: \'chrome\',\\n  name: \'Unnamed Job\',\\n  logName: \'Chrome - English\',\\n  count: 1,\\n  shardTestFiles: false,\\n  maxInstances: 1,\\n  specs: [\'spec/chromeOnlySpec.js\'],\\n  exclude: [\'spec/doNotRunInChromeSpec.js\'],\\n  seleniumAddress: \'http://localhost:4444/wd/hub\'\\n}"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6053,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6054,"name":"browserName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6055,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the process executing this capability.  Not used directly by\\nprotractor or the browser, but instead pass directly to third parties\\nlike BrowserStack and SauceLabs as the name of the job running this\\ntest"}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6056,"name":"logName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"User defined name for the capability that will display in the results\\nlog. Defaults to the browser name"}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6057,"name":"count","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of times to run this set of capabilities (in parallel, unless\\nlimited by maxSessions). Default is 1."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":6058,"name":"shardTestFiles","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If this is set to be true, specs will be sharded by file (i.e. all\\nfiles to be run by this set of capabilities will run in parallel).\\nDefault is false."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6059,"name":"maxInstances","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of browser instances that can run in parallel for this\\nset of capabilities. This is only needed if shardTestFiles is true.\\nDefault is 1."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":6060,"name":"specs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional spec files to be run on this capability only."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":6061,"name":"exclude","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Spec files to be excluded on this capability only."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":6062,"name":"seleniumAddress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional: override global seleniumAddress on this capability only."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6054,6055,6056,6057,6058,6059,6060,6061,6062]}],"sources":[],"indexSignature":{"id":6063,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6064,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.capabilities"}},{"id":6065,"name":"multiCapabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you would like to run more than one instance of WebDriver on the same\\ntests, use multiCapabilities, which takes an array of capabilities.\\nIf this is specified, capabilities will be ignored."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.multiCapabilities"}},{"id":6066,"name":"getMultiCapabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you need to resolve multiCapabilities asynchronously (i.e. wait for\\nserver/proxy, set firefox profile, etc), you can specify a function here\\nwhich will return either "},{"kind":"code","text":"`multiCapabilities`"},{"kind":"text","text":" or a promise to\\n"},{"kind":"code","text":"`multiCapabilities`"},{"kind":"text","text":".\\n\\nIf this returns a promise, it is resolved immediately after\\n"},{"kind":"code","text":"`beforeLaunch`"},{"kind":"text","text":" is run, and before any driver is set up. If this is\\nspecified, both capabilities and multiCapabilities will be ignored."}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.getMultiCapabilities"}},{"id":6067,"name":"maxSessions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of total browser sessions to run. Tests are queued in\\nsequence if number of browser sessions is limited by this parameter.\\nUse a number less than 1 to denote unlimited. Default is unlimited."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.maxSessions"}},{"id":6068,"name":"verboseMultiSessions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not to buffer output when running tests on multiple browsers\\nin parallel. By default, when running multiple browser sessions, the\\nresults are buffered and not logged until the test run finishes. If true,\\nwhen running multiple sessions in parallel results will be logged when\\neach test finishes."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.verboseMultiSessions"}},{"id":6069,"name":"baseUrl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A base URL for your application under test. Calls to protractor.get()\\nwith relative paths will be resolved against this URL (via url.resolve)"}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.baseUrl"}},{"id":6070,"name":"rootElement","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A CSS Selector for a DOM element within your Angular application.\\nProtractor will attempt to automatically find your application, but it is\\nnecessary to set rootElement in certain cases.\\n\\nIn Angular 1, Protractor will use the element your app bootstrapped to by\\ndefault.  If that doesn\'t work, it will then search for hooks in "},{"kind":"code","text":"`body`"},{"kind":"text","text":" or\\n"},{"kind":"code","text":"`ng-app`"},{"kind":"text","text":" elements (details here: https://git.io/v1b2r).\\n\\nIn later versions of Angular, Protractor will try to hook into all angular\\napps on the page. Use rootElement to limit the scope of which apps\\nProtractor waits for and searches within."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.rootElement"}},{"id":6071,"name":"allScriptsTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The timeout in milliseconds for each script run on the browser. This\\nshould be longer than the maximum time your application needs to\\nstabilize between tasks."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.allScriptsTimeout"}},{"id":6072,"name":"getPageTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"How long to wait for a page to load."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.getPageTimeout"}},{"id":6073,"name":"beforeLaunch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once configs are read but before any\\nenvironment setup. This will only run once, and before onPrepare.\\n\\nYou can specify a file containing code to run by setting beforeLaunch to\\nthe filename string.\\n\\nAt this point, global variable \'protractor\' object will NOT be set up,\\nand globals from the test framework will NOT be available. The main\\npurpose of this function should be to bring up test dependencies."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6074,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6075,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.beforeLaunch"}},{"id":6076,"name":"onPrepare","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once protractor is ready and available, and\\nbefore the specs are executed. If multiple capabilities are being run,\\nthis will run once per capability.\\n\\nYou can specify a file containing code to run by setting onPrepare to\\nthe filename string. onPrepare can optionally return a promise, which\\nProtractor will wait for before continuing execution. This can be used if\\nthe preparation involves any asynchronous calls, e.g. interacting with\\nthe browser. Otherwise Protractor cannot guarantee order of execution\\nand may start the tests before preparation finishes.\\n\\nAt this point, global variable \'protractor\' object will be set up, and\\nglobals from the test framework will be available. For example, if you\\nare using Jasmine, you can add a reporter with:\\n\\n   jasmine.getEnv().addReporter(new jasmine.JUnitXmlReporter(\\n     \'outputdir/\', true, true));\\n\\nIf you need access back to the current configuration object,\\nuse a pattern like the following:\\n\\n   return browser.getProcessedConfig().then(function(config) {\\n     // config.capabilities is the CURRENT capability being run, if\\n     // you are using multiCapabilities.\\n     console.log(\'Executing capability\', config.capabilities);\\n   });"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6077,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6078,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.onPrepare"}},{"id":6079,"name":"onComplete","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once tests are finished. onComplete can\\noptionally return a promise, which Protractor will wait for before\\nshutting down webdriver.\\n\\nAt this point, tests will be done but global objects will still be\\navailable."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6080,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6081,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.onComplete"}},{"id":6082,"name":"onCleanUp","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once the tests have finished running and\\nthe WebDriver instance has been shut down. It is passed the exit code\\n(0 if the tests passed). This is called once per capability."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6083,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6084,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6085,"name":"exitCode","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.onCleanUp"}},{"id":6086,"name":"afterLaunch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once all tests have finished running and\\nthe WebDriver instance has been shut down. It is passed the exit code\\n(0 if the tests passed). afterLaunch must return a promise if you want\\nasynchronous code to be executed before the program exits.\\nThis is called only once before the program exits (after onCleanUp)."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6087,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6088,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6089,"name":"exitCode","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.afterLaunch"}},{"id":6090,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The params object will be passed directly to the Protractor instance,\\nand can be accessed from your test as browser.params. It is an arbitrary\\nobject and can contain anything you may need in your test.\\nThis can be changed via the command line as:\\n  --params.login.user \\"Joe\\"\\n\\nExample:\\nparams: {\\n  login: {\\n    user: \'Jane\',\\n    password: \'1234\'\\n  }\\n}"}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.params"}},{"id":6091,"name":"resultJsonOutputFile","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, protractor will save the test output in json format at this path.\\nThe path is relative to the location of this config."}]},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.resultJsonOutputFile"}},{"id":6092,"name":"restartBrowserBetweenTests","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, protractor will restart the browser between each test. Default\\nvalue is false.\\n\\nCAUTION: This will cause your tests to slow down drastically."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.restartBrowserBetweenTests"}},{"id":6093,"name":"untrackOutstandingTimeouts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor will track outstanding $timeouts by default, and report them\\nin the error message if Protractor fails to synchronize with Angular in\\ntime. In order to do this Protractor needs to decorate $timeout.\\n\\nCAUTION: If your app decorates $timeout, you must turn on this flag. This\\nis false by default."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.untrackOutstandingTimeouts"}},{"id":6094,"name":"ignoreUncaughtExceptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, Protractor will ignore uncaught exceptions instead of exiting\\nwithout an error code. The exceptions will still be logged as warnings."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.ignoreUncaughtExceptions"}},{"id":6095,"name":"webDriverLogDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, will create a log file in the given directory with a readable log of\\nthe webdriver commands it executes.\\n\\nThis is an experimental feature. Enabling this will also turn on Blocking Proxy\\nsynchronization, which is also experimental."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.webDriverLogDir"}},{"id":6096,"name":"highlightDelay","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, Protractor will pause the specified amount of time (in milliseconds)\\nbefore interactions with browser elements (ie, sending keys, clicking). It will\\nalso highlight the element it\'s about to interact with.\\n\\nThis is an experimental feature. Enabling this will also turn on Blocking Proxy\\nsynchronization, which is also experimental."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.highlightDelay"}},{"id":6097,"name":"logLevel","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor log level\\n\\ndefault: INFO"}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"ERROR"},{"type":"literal","value":"WARN"},{"type":"literal","value":"INFO"},{"type":"literal","value":"DEBUG"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.logLevel"}},{"id":6098,"name":"framework","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Test framework to use. This may be one of: jasmine, mocha or custom.\\nDefault value is \'jasmine\'\\n\\nWhen the framework is set to \\"custom\\" you\'ll need to additionally\\nset frameworkPath with the path relative to the config file or absolute:\\n\\n  framework: \'custom\',\\n  frameworkPath: \'./frameworks/my_custom_jasmine.js\',\\n\\nSee github.com/angular/protractor/blob/master/lib/frameworks/README.md\\nto comply with the interface details of your custom implementation.\\n\\nJasmine is fully supported as test and assertion frameworks.\\nMocha has limited support. You will need to include your\\nown assertion framework (such as Chai) if working with Mocha."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.framework"}},{"id":6099,"name":"jasmineNodeOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Options to be passed to jasmine.\\n\\nSee https://github.com/jasmine/jasmine-npm/blob/master/lib/jasmine.js\\nfor the exact options available."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6100,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6101,"name":"showColors","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, print colors to the terminal."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6102,"name":"defaultTimeoutInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default time to wait in ms before a test fails."}]},"sources":[],"type":{"type":"intrinsic","name":"number"}},{"id":6103,"name":"print","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Function called to print jasmine results."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6104,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6105,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":6106,"name":"grep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, only execute specs whose names match the pattern, which is\\ninternally compiled to a RegExp."}]},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6107,"name":"invertGrep","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inverts \'grep\' matches"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6108,"name":"random","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, run specs in semi-random order"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"}},{"id":6109,"name":"seed","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set the randomization seed if randomization is turned on"}]},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6101,6102,6103,6106,6107,6108,6109]}],"sources":[],"indexSignature":{"id":6110,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6111,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.jasmineNodeOpts"}},{"id":6112,"name":"mochaOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Options to be passed to Mocha.\\n\\nSee the full list at http://mochajs.org/"}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6113,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6114,"name":"ui","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}},{"id":6115,"name":"reporter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6114,6115]}],"sources":[],"indexSignature":{"id":6116,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6117,"name":"key","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.mochaOpts"}},{"id":6118,"name":"plugins","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"See docs/plugins.md"}]},"sources":[],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/plugins.d.ts","qualifiedName":"PluginConfig"},"name":"PluginConfig","package":"protractor"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.plugins"}},{"id":6119,"name":"skipSourceMapSupport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Turns off source map support.  Stops protractor from registering global\\nvariable "},{"kind":"code","text":"`source-map-support`"},{"kind":"text","text":".  Defaults to "},{"kind":"code","text":"`false`"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.skipSourceMapSupport"}},{"id":6120,"name":"disableEnvironmentOverrides","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Turns off WebDriver\'s environment variables overrides to ignore any\\nenvironment variable and to only use the configuration in this file.\\nDefaults to "},{"kind":"code","text":"`false`"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.disableEnvironmentOverrides"}},{"id":6121,"name":"ng12Hybrid","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Tells Protractor to interpret any angular apps it comes across as hybrid\\nangular1/angular2 apps (i.e. apps using ngUpgrade)\\nDefaults to "},{"kind":"code","text":"`false`"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.ng12Hybrid"}},{"id":6122,"name":"disableChecks","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor will exit with an error if it sees any command line flags it doesn\'t\\nrecognize. Set disableChecks true to disable this check."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.disableChecks"}},{"id":6123,"name":"SELENIUM_PROMISE_MANAGER","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable/disable the WebDriver Control Flow.\\n\\nWebDriverJS (and by extention, Protractor) uses a Control Flow to manage the order in which\\ncommands are executed and promises are resolved (see docs/control-flow.md for details).\\nHowever, as syntax like "},{"kind":"code","text":"`async`"},{"kind":"text","text":"/"},{"kind":"code","text":"`await`"},{"kind":"text","text":" are being introduced, WebDriverJS has decided to\\ndeprecate the control flow, and have users manage the asynchronous activity themselves\\n(details here: https://github.com/SeleniumHQ/selenium/issues/2969).\\n\\nAt the moment, the WebDriver Control Flow is still enabled by default. You can disable it by\\nsetting the environment variable "},{"kind":"code","text":"`SELENIUM_PROMISE_MANAGER`"},{"kind":"text","text":" to "},{"kind":"code","text":"`0`"},{"kind":"text","text":".  In a webdriver release in\\nQ4 2017, the Control Flow will be disabled by default, but you will be able to re-enable it by\\nsetting "},{"kind":"code","text":"`SELENIUM_PROMISE_MANAGER`"},{"kind":"text","text":" to "},{"kind":"code","text":"`1`"},{"kind":"text","text":".  At a later point, the control flow will be removed\\nfor good.\\n\\nIf you don\'t like managing environment variables, you can set this option in your config file,\\nand Protractor will handle enabling/disabling the control flow for you.  Setting this option\\nis higher priority than the "},{"kind":"code","text":"`SELENIUM_PROMISE_MANAGER`"},{"kind":"text","text":" environment variable."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.SELENIUM_PROMISE_MANAGER"}},{"id":6124,"name":"seleniumArgs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumArgs"}},{"id":6125,"name":"jvmArgs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.jvmArgs"}},{"id":6126,"name":"configDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.configDir"}},{"id":6127,"name":"troubleshoot","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.troubleshoot"}},{"id":6128,"name":"seleniumPort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.seleniumPort"}},{"id":6129,"name":"mockSelenium","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.mockSelenium"}},{"id":6130,"name":"v8Debug","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.v8Debug"}},{"id":6131,"name":"nodeDebug","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.nodeDebug"}},{"id":6132,"name":"debuggerServerPort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.debuggerServerPort"}},{"id":6133,"name":"frameworkPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.frameworkPath"}},{"id":6134,"name":"elementExplorer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.elementExplorer"}},{"id":6135,"name":"debug","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.debug"}},{"id":6136,"name":"unknownFlags_","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"ProtractorConfig.unknownFlags_"}}],"groups":[{"title":"Properties","children":[6012,6015,6016,6017,6022,6023,6024,6025,6026,6027,6028,6029,6030,6031,6032,6033,6034,6035,6036,6037,6038,6039,6040,6041,6042,6043,6044,6045,6046,6047,6048,6049,6050,6051,6052,6065,6066,6067,6068,6069,6070,6071,6072,6073,6076,6079,6082,6086,6090,6091,6092,6093,6094,6095,6096,6097,6098,6099,6112,6118,6119,6120,6121,6122,6123,6124,6125,6126,6127,6128,6129,6130,6131,6132,6133,6134,6135,6136]}],"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":15,"character":17}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/config.d.ts","qualifiedName":"Config"},"name":"Config","package":"protractor"}],"permalink":"/api/protractor-adapter/interface/Config","nextId":6151},{"id":6151,"name":"run","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/run.ts","line":18,"character":16}],"signatures":[{"id":6152,"name":"run","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"## Learn more\\n- [Protractor framework adapters](https://github.com/angular/protractor/blob/master/lib/frameworks/README.md#framework-adapters-for-protractor)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/run.ts","line":18,"character":16}],"parameters":[{"id":6153,"name":"runner","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/runner.d.ts","qualifiedName":"Runner"},"name":"Runner","package":"protractor"}},{"id":6154,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","name":"ProtractorReport","package":"@serenity-js/protractor"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}],"permalink":"/api/protractor-adapter/function/run","previousId":6011,"nextId":6155},{"id":6155,"name":"CucumberAdapterConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"children":[{"id":6156,"name":"useStandardOutput","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instruct Serenity/JS Cucumber Adapter to take over the "},{"kind":"code","text":"`stdout`"},{"kind":"text","text":" output\\nof native Cucumber reporters to prevent them from clobbering the log."}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts","line":10,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":6157,"name":"uniqueFormatterOutputs","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Add "},{"kind":"code","text":"`runnerId`"},{"kind":"text","text":" to names of output files produced by native Cucumber.js formatters"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[6156,6157]}],"sources":[{"fileName":"packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts","line":4,"character":17}],"permalink":"/api/protractor-adapter/interface/CucumberAdapterConfig","previousId":6151,"nextId":6158},{"id":6158,"name":"TestRunnerDetector","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Detects the ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/) to use,\\nbased on Protractor configuration."}]},"children":[{"id":6159,"name":"cucumberOpts","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":14,"character":11}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'cucumberOpts\'"},{"id":6160,"name":"jasmineNodeOpts","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":15,"character":11}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'jasmineNodeOpts\'"},{"id":6161,"name":"mochaOpts","variant":"declaration","kind":1024,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":16,"character":11}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'mochaOpts\'"},{"id":6162,"name":"protractorCliOptions","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":18,"character":11}],"signatures":[{"id":6163,"name":"protractorCliOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":18,"character":11}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]},{"id":6164,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":26,"character":4}],"signatures":[{"id":6165,"name":"new TestRunnerDetector","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":26,"character":4}],"parameters":[{"id":6166,"name":"testRunnerLoader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6188,"name":"TestRunnerLoader","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":6158,"name":"TestRunnerDetector","package":"@serenity-js/protractor"}}]},{"id":6168,"name":"runnerFor","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":29,"character":4}],"signatures":[{"id":6169,"name":"runnerFor","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":29,"character":4}],"parameters":[{"id":6170,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/config.d.ts","qualifiedName":"Config"},"name":"Config","package":"protractor"}}],"type":{"type":"reference","target":2163,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[6164]},{"title":"Properties","children":[6159,6160,6161]},{"title":"Methods","children":[6162,6168]}],"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":12,"character":13}],"permalink":"/api/protractor-adapter/class/TestRunnerDetector","previousId":6155,"nextId":6188},{"id":6188,"name":"TestRunnerLoader","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Loads a ["},{"kind":"code","text":"`TestRunnerAdapter`"},{"kind":"text","text":"](/api/core-adapter/interface/TestRunnerAdapter/) needed to invoke\\nthe chosen test runner programmatically."}]},"children":[{"id":6189,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":32,"character":4}],"signatures":[{"id":6190,"name":"new TestRunnerLoader","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":32,"character":4}],"parameters":[{"id":6191,"name":"cwd","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Current working directory; used to resolve glob paths to files for Cucumber.js to "},{"kind":"code","text":"`require`"},{"kind":"text","text":",\\n and instructing Serenity/JS where to look for this module\'s optional\\n dependencies, like ["},{"kind":"code","text":"`@serenity-js/cucumber`"},{"kind":"text","text":"](/api/cucumber),\\n ["},{"kind":"code","text":"`@serenity-js/mocha`"},{"kind":"text","text":"](/api/mocha),\\n ["},{"kind":"code","text":"`@serenity-js/jasmine`"},{"kind":"text","text":"](/api/jasmine), etc."}]},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}},{"id":6192,"name":"runnerId","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Unique identifier used to differentiate output files produced by native Cucumber.js formatters.\\n For example, "},{"kind":"code","text":"`process.pid`"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","target":6188,"name":"TestRunnerLoader","package":"@serenity-js/protractor"}}]},{"id":6197,"name":"forJasmine","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":43,"character":4}],"signatures":[{"id":6198,"name":"forJasmine","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":43,"character":4}],"parameters":[{"id":6199,"name":"jasmineNodeOpts","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":2163,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]},{"id":6200,"name":"forMocha","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":53,"character":4}],"signatures":[{"id":6201,"name":"forMocha","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":53,"character":4}],"parameters":[{"id":6202,"name":"mochaOpts","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","target":2163,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]},{"id":6203,"name":"forCucumber","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":64,"character":4}],"signatures":[{"id":6204,"name":"forCucumber","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"See ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":64,"character":4}],"parameters":[{"id":6205,"name":"cucumberOpts","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"object"}},{"id":6206,"name":"adapterConfig","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6155,"name":"CucumberAdapterConfig","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":2163,"name":"TestRunnerAdapter","package":"@serenity-js/core"}}]}],"groups":[{"title":"Constructors","children":[6189]},{"title":"Methods","children":[6197,6200,6203]}],"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":14,"character":13}],"permalink":"/api/protractor-adapter/class/TestRunnerLoader","previousId":6158}],"groups":[{"title":"Configuration","children":[6011]},{"title":"Integration","children":[6151,6155,6158,6188]}],"sources":[{"fileName":"packages/protractor/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/protractor-adapter"},"urlSlug":"protractor-adapter"},{"index":true,"label":"index","reflection":{"id":7,"name":"@serenity-js/protractor","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":5642,"name":"BrowseTheWebWithProtractor","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This implementation of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nenables the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to interact with web front-ends using [Protractor](http://www.protractortest.org/#/).\\n\\n## Using Protractor to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor } from \'@serenity-js/protractor\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { protractor } from \'protractor\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\n await actorCalled(\'Wendy\')\\n   .whoCan(BrowseTheWebWithProtractor.using(protractor.browser))\\n   .attemptsTo(\\n     Navigate.to(`https://serenity-js.org`),\\n     Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Protractor website](https://www.protractortest.org/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":5643,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":52,"character":11}],"signatures":[{"id":5644,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Ability to interact with web front-ends using\\nprovided protractor browser instance."}]},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":52,"character":11}],"parameters":[{"id":5645,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- [Protractor Browser API docs](http://www.protractortest.org/#/api?view=ProtractorBrowser)"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}}],"type":{"type":"reference","target":5642,"name":"BrowseTheWebWithProtractor","package":"@serenity-js/protractor"}}]},{"id":5651,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":60,"character":4}],"signatures":[{"id":5652,"name":"new BrowseTheWebWithProtractor","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":60,"character":4}],"parameters":[{"id":5653,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance of a protractor browser"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}}],"type":{"type":"reference","target":5642,"name":"BrowseTheWebWithProtractor","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"BrowseTheWeb<protractor.ElementFinder>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowseTheWeb<protractor.ElementFinder>.constructor"}},{"id":5655,"name":"param","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":99,"character":4}],"signatures":[{"id":5656,"name":"param","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns Protractor configuration parameter at "},{"kind":"code","text":"`path`"},{"kind":"text","text":".\\n\\n#### Configuring a custom parameter\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  params: {\\n    login: {\\n      username: \'jane@example.org\'\\n      password: process.env.PASSWORD\\n    }\\n  }\\n  // ...\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving config param by name\\n"},{"kind":"code","text":"```js\\nBrowseTheWebWithProtractor.as(actor).param(\'login\')\\n // returns object with username and password\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving config param by path\\n"},{"kind":"code","text":"```js\\nBrowseTheWeb.as(actor).param(\'login.username\')\\n // returns string \'jane@example.org\'\\n\\n@param path\\n Either a name or a dot-delimited path to the param.\\n\\n@throws [`ConfigurationError`](/api/core/class/ConfigurationError/)\\n Throws a `ConfigurationError` if the parameter is `undefined`"}]},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":99,"character":4}],"typeParameter":[{"id":5657,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":5658,"name":"path","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":5657,"name":"T","package":"@serenity-js/protractor","refersToTypeParameter":true}}]},{"id":5660,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"signatures":[{"id":5661,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}},{"id":5662,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"signatures":[{"id":5663,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}},{"id":5664,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"signatures":[{"id":5665,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3698,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[5651]},{"title":"Methods","children":[5643,5655,5660,5662,5664]}],"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":41,"character":13}],"extendedTypes":[{"type":"reference","target":3092,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"protractor.ElementFinder","package":"protractor","qualifiedName":"ElementFinder"}],"name":"BrowseTheWeb","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/BrowseTheWebWithProtractor","nextId":5666},{"id":5666,"name":"UseAngular","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to enable or disable automated synchronisation between Protractor and Angular 1.x application.\\n\\nUseful when a test scenario needs to interact with both Angular-based\\nand non-Angular web apps, e.g. use an external sign-in form.\\n\\n**Please note** if your tests interact with a non-Angular app you can disable\\nsynchronisation altogether in ["},{"kind":"code","text":"`protractor.conf.js`"},{"kind":"text","text":"](https://github.com/angular/protractor/blob/master/lib/config.ts).\\n\\n**Warning:** this interaction is Protractor-specific, so using it in your tests\\nwill reduce their portability across test integration tools.\\n\\n## Disabling synchronisation temporarily\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { UseAngular } from \'@serenity-js/protractor\'\\nimport { Navigate } from \'@serenity-js/web\'\\nimport { protractor } from \'protractor\'\\n\\nawait actorCalled(\'Angie\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    UseAngular.disableSynchronisation(),\\n    Navigate.to(\'https://mycompany.com/login\'),\\n    // navigate to a non-Angular app, perform some activities...\\n\\n    UseAngular.disableSynchronisation(),\\n    Navigate.to(\'https://myapp.com\'),\\n    // navigate to an Angular app, perform some more activities...\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Disabling synchronisation with Angular in "},{"kind":"code","text":"`protractor.conf.js`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```js\\nexports.config = {\\n  onPrepare: function () {\\n    return browser.waitForAngularEnabled(false);\\n  },\\n  // ... other config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [Cross-application testing with Serenity/JS](https://janmolak.com/cross-application-testing-with-serenity-js-4103a272b75b)"}]},"children":[{"id":5667,"name":"disableSynchronisation","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":62,"character":11}],"signatures":[{"id":5668,"name":"disableSynchronisation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) that instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to disable\\nsynchronisation between Protractor and an Angular 1.x app."}]},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":62,"character":11}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":5669,"name":"enableSynchronisation","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":74,"character":11}],"signatures":[{"id":5670,"name":"enableSynchronisation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) that instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to enable\\nsynchronisation between Protractor and an Angular 1.x app."}]},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":74,"character":11}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":5671,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":5672,"name":"new UseAngular","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":5666,"name":"UseAngular","package":"@serenity-js/protractor"}}]}],"groups":[{"title":"Constructors","children":[5671]},{"title":"Methods","children":[5667,5669]}],"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":56,"character":13}],"permalink":"/api/protractor/class/UseAngular","previousId":5642,"nextId":5673},{"id":5673,"name":"ProtractorBrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"children":[{"id":5674,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":18,"character":4}],"signatures":[{"id":5675,"name":"new ProtractorBrowsingSession","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":18,"character":4}],"parameters":[{"id":5676,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}}],"type":{"type":"reference","target":5673,"name":"ProtractorBrowsingSession","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<ProtractorPage>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<ProtractorPage>.constructor"}},{"id":5678,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":22,"character":19}],"signatures":[{"id":5679,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":22,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":5811,"name":"ProtractorPage","package":"@serenity-js/protractor"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}},{"id":5680,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":54,"character":19}],"signatures":[{"id":5681,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":54,"character":19}],"parameters":[{"id":5682,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5811,"name":"ProtractorPage","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}},{"id":5685,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":93,"character":19}],"signatures":[{"id":5686,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":93,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5811,"name":"ProtractorPage","package":"@serenity-js/protractor"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}},{"id":5689,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":134,"character":19}],"signatures":[{"id":5690,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":134,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3698,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}},{"id":5693,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":5694,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":5695,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5811,"name":"ProtractorPage","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}},{"id":5696,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":5697,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":5698,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":5811,"name":"ProtractorPage","package":"@serenity-js/protractor"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}},{"id":5699,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":5700,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":5701,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}},{"id":5702,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":5703,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}},{"id":5704,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"signatures":[{"id":5705,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"groups":[{"title":"Constructors","children":[5674]},{"title":"Methods","children":[5678,5680,5685,5689,5693,5696,5699,5702,5704]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":3702,"typeArguments":[{"type":"reference","target":5811,"name":"ProtractorPage","package":"@serenity-js/protractor"}],"name":"BrowsingSession","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorBrowsingSession","previousId":5666,"nextId":5706},{"id":5706,"name":"ProtractorCookie","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)."}]},"children":[{"id":5785,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":16,"character":4}],"signatures":[{"id":5786,"name":"new ProtractorCookie","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":16,"character":4}],"parameters":[{"id":5787,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}},{"id":5788,"name":"cookieName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":5706,"name":"ProtractorCookie","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}},{"id":5790,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":21,"character":10}],"signatures":[{"id":5791,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":21,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}},{"id":5795,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"signatures":[{"id":5796,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}},{"id":5797,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"signatures":[{"id":5798,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}},{"id":5799,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"signatures":[{"id":5800,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}},{"id":5801,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"signatures":[{"id":5802,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}},{"id":5803,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"signatures":[{"id":5804,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}},{"id":5805,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"signatures":[{"id":5806,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}},{"id":5807,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"signatures":[{"id":5808,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}},{"id":5809,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"signatures":[{"id":5810,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"groups":[{"title":"Constructors","children":[5785]},{"title":"Methods","children":[5790,5795,5797,5799,5801,5803,5805,5807,5809]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":3733,"name":"Cookie","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorCookie","previousId":5673,"nextId":5811},{"id":5811,"name":"ProtractorPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"children":[{"id":5823,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":36,"character":4}],"signatures":[{"id":5824,"name":"new ProtractorPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":36,"character":4}],"parameters":[{"id":5825,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5673,"name":"ProtractorBrowsingSession","package":"@serenity-js/protractor"}},{"id":5826,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/browser.d.ts","qualifiedName":"ProtractorBrowser"},"name":"ProtractorBrowser","package":"protractor"}},{"id":5827,"name":"modalDialogHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3940,"name":"ModalDialogHandler","package":"@serenity-js/web"}},{"id":5828,"name":"errorHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ProtractorErrorHandler","package":"@serenity-js/protractor"}},{"id":5829,"name":"pageId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":5811,"name":"ProtractorPage","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"Page<protractor.ElementFinder>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Page<protractor.ElementFinder>.constructor"}},{"id":5834,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":51,"character":4}],"signatures":[{"id":5835,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":51,"character":4}],"parameters":[{"id":5836,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}},{"id":5837,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":62,"character":4}],"signatures":[{"id":5838,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":62,"character":4}],"parameters":[{"id":5839,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}},{"id":5840,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":68,"character":4}],"signatures":[{"id":5841,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":68,"character":4}],"parameters":[{"id":5842,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4264,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElements","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}},{"id":5843,"name":"enableAngularSynchronisation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":100,"character":10}],"signatures":[{"id":5844,"name":"enableAngularSynchronisation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"If set to "},{"kind":"code","text":"`false`"},{"kind":"text","text":", Protractor will not wait for Angular 1.x "},{"kind":"code","text":"`$http`"},{"kind":"text","text":" and "},{"kind":"code","text":"`$timeout`"},{"kind":"text","text":"\\ntasks to complete before interacting with the browser.\\n\\nThis can be useful when:\\n- you need to switch to a non-Angular app during your tests, e.g. to sign in using an SSO gateway\\n- your app continuously polls an API with "},{"kind":"code","text":"`$timeout`"},{"kind":"text","text":"\\n\\nIf you\'re not testing an Angular app, it\'s better to disable Angular synchronisation completely\\nin protractor configuration:\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n    onPrepare: function () {\\n        return browser.waitForAngularEnabled(false)\\n    },\\n\\n    // ... other config\\n}\\n```"}]},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":100,"character":10}],"parameters":[{"id":5845,"name":"enable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":5846,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":106,"character":10}],"signatures":[{"id":5847,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":106,"character":10}],"parameters":[{"id":5848,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}},{"id":5849,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":112,"character":10}],"signatures":[{"id":5850,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":112,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}},{"id":5851,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":118,"character":10}],"signatures":[{"id":5852,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":118,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}},{"id":5853,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":124,"character":10}],"signatures":[{"id":5854,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":124,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}},{"id":5855,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":130,"character":10}],"signatures":[{"id":5856,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":130,"character":10}],"parameters":[{"id":5857,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}},{"id":5858,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":162,"character":10}],"signatures":[{"id":5859,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":162,"character":10}],"typeParameter":[{"id":5860,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":5861,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":5862,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5863,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":163,"character":26}],"signatures":[{"id":5864,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":163,"character":26}],"parameters":[{"id":5865,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":5861,"name":"InnerArguments","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"reference","target":5860,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}}]}}]}},{"id":5866,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":5861,"name":"InnerArguments","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5860,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}},{"id":5867,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":188,"character":10}],"signatures":[{"id":5868,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":188,"character":10}],"typeParameter":[{"id":5869,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":5870,"name":"Parameters","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":5871,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":5872,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":26}],"signatures":[{"id":5873,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":26}],"parameters":[{"id":5874,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":5870,"name":"Parameters","package":"@serenity-js/protractor","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":5875,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":74}],"signatures":[{"id":5876,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":189,"character":74}],"parameters":[{"id":5877,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5869,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":5878,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":5870,"name":"Parameters","package":"@serenity-js/protractor","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":5869,"name":"Result","package":"@serenity-js/protractor","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}},{"id":5879,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":215,"character":4}],"signatures":[{"id":5880,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":215,"character":4}],"type":{"type":"intrinsic","name":"any"},"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}},{"id":5881,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":227,"character":10}],"signatures":[{"id":5882,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":227,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}},{"id":5883,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":246,"character":10}],"signatures":[{"id":5884,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":246,"character":10}],"parameters":[{"id":5885,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3733,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}},{"id":5886,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":250,"character":10}],"signatures":[{"id":5887,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":250,"character":10}],"parameters":[{"id":5888,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3839,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}},{"id":5889,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":266,"character":10}],"signatures":[{"id":5890,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":266,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}},{"id":5891,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":272,"character":10}],"signatures":[{"id":5892,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":272,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.title"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.title"}},{"id":5893,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":278,"character":10}],"signatures":[{"id":5894,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":278,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.name"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.name"}},{"id":5895,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":284,"character":10}],"signatures":[{"id":5896,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":284,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.url"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.url"}},{"id":5897,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":10}],"signatures":[{"id":5898,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":5899,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5900,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":36}],"type":{"type":"intrinsic","name":"number"}},{"id":5901,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":51}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5900,5901]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":290,"character":34}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}},{"id":5902,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":10}],"signatures":[{"id":5903,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":10}],"parameters":[{"id":5904,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":5905,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":5906,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":34}],"type":{"type":"intrinsic","name":"number"}},{"id":5907,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":49}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[5906,5907]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":308,"character":32}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}},{"id":5908,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":324,"character":10}],"signatures":[{"id":5909,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":324,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.close"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.close"}},{"id":5910,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":336,"character":10}],"signatures":[{"id":5911,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":336,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}},{"id":5912,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":340,"character":10}],"signatures":[{"id":5913,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":340,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}},{"id":5923,"name":"id","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":132,"character":13}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.id"}},{"id":5924,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"signatures":[{"id":5925,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4636,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}},{"id":5926,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"signatures":[{"id":5927,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"type":{"type":"reference","target":3940,"name":"ModalDialogHandler","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}},{"id":5928,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"signatures":[{"id":5929,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"groups":[{"title":"Constructors","children":[5823]},{"title":"Properties","children":[5923]},{"title":"Methods","children":[5834,5837,5840,5843,5846,5849,5851,5853,5855,5858,5867,5879,5881,5883,5886,5889,5891,5893,5895,5897,5902,5908,5910,5912,5924,5926,5928]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":22,"character":13}],"extendedTypes":[{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"protractor.ElementFinder","package":"protractor","qualifiedName":"ElementFinder"}],"name":"Page","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorPage","previousId":5706,"nextId":5930},{"id":5930,"name":"ProtractorPageElement","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"children":[{"id":5950,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":18,"character":4}],"signatures":[{"id":5951,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":18,"character":4}],"parameters":[{"id":5952,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5930,"name":"ProtractorPageElement","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}},{"id":5953,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":22,"character":4}],"signatures":[{"id":5954,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":22,"character":4}],"parameters":[{"id":5955,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":5930,"name":"ProtractorPageElement","package":"@serenity-js/protractor"}}],"type":{"type":"reference","target":5930,"name":"ProtractorPageElement","package":"@serenity-js/protractor"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}},{"id":5956,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":26,"character":10}],"signatures":[{"id":5957,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":26,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}},{"id":5958,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":67,"character":10}],"signatures":[{"id":5959,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":67,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}},{"id":5960,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":73,"character":10}],"signatures":[{"id":5961,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":73,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}},{"id":5962,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":84,"character":10}],"signatures":[{"id":5963,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":84,"character":10}],"parameters":[{"id":5964,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}},{"id":5965,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":92,"character":10}],"signatures":[{"id":5966,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":92,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}},{"id":5967,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":101,"character":10}],"signatures":[{"id":5968,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":101,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}},{"id":5969,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":112,"character":10}],"signatures":[{"id":5970,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":112,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}},{"id":5971,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":123,"character":10}],"signatures":[{"id":5972,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":123,"character":10}],"parameters":[{"id":5973,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4503,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}},{"id":5974,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":136,"character":10}],"signatures":[{"id":5975,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":136,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4503,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}},{"id":5976,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":166,"character":10}],"signatures":[{"id":5977,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":166,"character":10}],"parameters":[{"id":5978,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}},{"id":5979,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":172,"character":10}],"signatures":[{"id":5980,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":172,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}},{"id":5981,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":178,"character":10}],"signatures":[{"id":5982,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":178,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}},{"id":5983,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":191,"character":10}],"signatures":[{"id":5984,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":191,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}},{"id":5985,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":200,"character":10}],"signatures":[{"id":5986,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":200,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4636,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}},{"id":5987,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":236,"character":10}],"signatures":[{"id":5988,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":236,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}},{"id":5989,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":245,"character":10}],"signatures":[{"id":5990,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":245,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}},{"id":5991,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":249,"character":10}],"signatures":[{"id":5992,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":249,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}},{"id":5993,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":255,"character":10}],"signatures":[{"id":5994,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":255,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}},{"id":5995,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":261,"character":10}],"signatures":[{"id":5996,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":261,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}},{"id":5997,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":267,"character":10}],"signatures":[{"id":5998,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":267,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}},{"id":5999,"name":"locator","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":19,"character":13}],"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.locator"}},{"id":5947,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"signatures":[{"id":5948,"name":"new ProtractorPageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"parameters":[{"id":5949,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":5930,"name":"ProtractorPageElement","package":"@serenity-js/protractor"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<ElementFinder>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<ElementFinder>.constructor"}},{"id":6000,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"signatures":[{"id":6001,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}},{"id":6002,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"signatures":[{"id":6003,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"groups":[{"title":"Constructors","children":[5947]},{"title":"Properties","children":[5999]},{"title":"Methods","children":[5950,5953,5956,5958,5960,5962,5965,5967,5969,5971,5974,5976,5979,5981,5983,5985,5987,5989,5991,5993,5995,5997,6000,6002]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/protractor/built/element.d.ts","qualifiedName":"ElementFinder"},"name":"ElementFinder","package":"protractor"}],"name":"PageElement","package":"@serenity-js/web"}],"permalink":"/api/protractor/class/ProtractorPageElement","previousId":5811,"nextId":6004},{"id":6004,"name":"ProtractorParam","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a Protractor configuration parameter specified in "},{"kind":"code","text":"`protractor.conf.js`"},{"kind":"text","text":"\\nand identified by name. Protractor configuration parameters can be overridden via the command line.\\n\\n**Warning:** this question is Protractor-specific, so using it in your tests\\nwill reduce their portability across test integration tools.\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  params: {\\n    login: {\\n      username: \'jane@example.org\'\\n      password: process.env.PASSWORD\\n    }\\n  }\\n  // ...\\n}\\n```"},{"kind":"text","text":"\\n\\n## Overriding configuration parameter using the command line\\n\\n"},{"kind":"code","text":"```shell\\nnpx protractor ./protractor.conf.js --params.login.username=\\"bob@example.org\\"\\n```"},{"kind":"text","text":"\\n\\n## Using as "},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor, ProtractorParam } from \'@serenity-js/protractor\'\\nimport { Enter } from \'@serenity-js/web\'\\nimport { protractor } from \'protractor\'\\n\\nawait actorCalled(\'Jane\')\\n  .whoCan( BrowseTheWebWithProtractor.using(protractor.browser))\\n  .attemptsTo(\\n    Enter.theValue(ProtractorParam.called(\'login\').username).into(Form.exampleInput),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Specifying path to param as string\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor, ProtractorParam } from \'@serenity-js/protractor\'\\nimport { Enter } from \'@serenity-js/web\'\\nimport { protractor } from \'protractor\\n\\nawait actorCalled(\'Jane\')\\n  .whoCan(BrowseTheWebWithProtractor.using(protractor.browser))\\n  .attemptsTo(\\n    Enter.theValue(ProtractorParam.called(\'login.username\')).into(Form.exampleInput),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWebWithProtractor.param`"},{"kind":"text","text":"](/api/protractor/class/BrowseTheWebWithProtractor/#param)"}]},"children":[{"id":6005,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/protractor/src/screenplay/questions/ProtractorParam.ts","line":76,"character":11}],"signatures":[{"id":6006,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Name of the parameter to retrieve. This could also be a dot-delimited path,\\ne.g. "},{"kind":"code","text":"`login.username`"}]},"sources":[{"fileName":"packages/protractor/src/screenplay/questions/ProtractorParam.ts","line":76,"character":11}],"typeParameter":[{"id":6007,"name":"Return_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":6008,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":6007,"name":"Return_Type","package":"@serenity-js/protractor","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":6009,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":6010,"name":"new ProtractorParam","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":6004,"name":"ProtractorParam","package":"@serenity-js/protractor"}}]}],"groups":[{"title":"Constructors","children":[6009]},{"title":"Methods","children":[6005]}],"sources":[{"fileName":"packages/protractor/src/screenplay/questions/ProtractorParam.ts","line":68,"character":13}],"permalink":"/api/protractor/class/ProtractorParam","previousId":5930}],"groups":[{"title":"Abilities","children":[5642]},{"title":"Activities","children":[5666]},{"title":"Models","children":[5673,5706,5811,5930]},{"title":"Questions","children":[6004]}],"sources":[{"fileName":"packages/protractor/src/index.ts","line":1,"character":0}],"permalink":"/api/protractor"},"urlSlug":"protractor"}],"packageName":"@serenity-js/protractor","packageVersion":"3.25.4"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":27,"name":"@serenity-js/rest","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6680,"name":"AxiosRequestConfigProxyDefaults","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":3,"character":12}],"type":{"type":"reflection","declaration":{"id":6681,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6682,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":4,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":6683,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":5,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":6684,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":6,"character":4}],"type":{"type":"reflection","declaration":{"id":6685,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6686,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":7,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":6687,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":8,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6686,6687]}],"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":6,"character":11}]}}},{"id":6688,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":10,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6682,6683,6684,6688]}],"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":3,"character":46}]}},"permalink":"/api/rest#AxiosRequestConfigProxyDefaults","previousId":21931,"nextId":6689},{"id":6689,"name":"AxiosRequestConfigDefaults","variant":"declaration","kind":2097152,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":13,"character":12}],"typeParameters":[{"id":6692,"name":"Data","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"CreateAxiosDefaults"},"typeArguments":[{"type":"reference","target":6692,"name":"Data","package":"@serenity-js/rest","refersToTypeParameter":true}],"name":"CreateAxiosDefaults","package":"axios"},{"type":"literal","value":"proxy"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"},{"type":"reflection","declaration":{"id":6690,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6691,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":14,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":6680,"name":"AxiosRequestConfigProxyDefaults","package":"@serenity-js/rest"},{"type":"literal","value":false}]}}],"groups":[{"title":"Properties","children":[6691]}],"sources":[{"fileName":"packages/rest/src/io/AxiosRequestConfigDefaults.ts","line":13,"character":96}]}}]},"permalink":"/api/rest#AxiosRequestConfigDefaults","previousId":6680},{"id":6693,"name":"createAxios","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/io/createAxios.ts","line":12,"character":16}],"signatures":[{"id":6694,"name":"createAxios","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an Axios instance with desired configuration and proxy support."}]},"sources":[{"fileName":"packages/rest/src/io/createAxios.ts","line":12,"character":16}],"parameters":[{"id":6695,"name":"axiosInstanceOrConfig","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"},{"type":"reference","target":6689,"name":"AxiosRequestConfigDefaults","package":"@serenity-js/rest"}]},"defaultValue":"{}"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"}}],"permalink":"/api/rest/function/createAxios","previousId":6745,"nextId":6789},{"id":6696,"name":"CallAnApi","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An [ability](/api/core/class/Ability/) that wraps [axios client](https://axios-http.com/docs/api_intro) and enables\\nthe [actor](/api/core/class/Actor/) to [send](/api/rest/class/Send/)\\n[HTTP requests](/api/rest/class/HTTPRequest/) to HTTP APIs.\\n\\n"},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" uses ["},{"kind":"code","text":"`proxy-from-env`"},{"kind":"text","text":"](https://www.npmjs.com/package/proxy-from-env) and an approach\\ndescribed in [\\"Node.js Axios behind corporate proxies\\"](https://janmolak.com/node-js-axios-behind-corporate-proxies-8b17a6f31f9d)\\nto automatically detect proxy server configuration based\\non your [environment variables](https://www.npmjs.com/package/proxy-from-env#environment-variables).\\nYou can override this configuration if needed.\\n\\n## Configuring the ability to call an API\\n\\nThe easiest way to configure the ability to "},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" is to provide the "},{"kind":"code","text":"`baseURL`"},{"kind":"text","text":" of your HTTP API,\\nand rely on Serenity/JS to offer other sensible defaults:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(\'https://api.example.org/\')\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/v1/users/2\')),            // GET https://api.example.org/v1/users/2\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Resolving relative URLs\\n\\nSerenity/JS resolves request URLs using Node.js [WHATWG URL API](https://nodejs.org/api/url.html#new-urlinput-base).\\nThis means that the request URL is determined using the resource path resolved in the context of base URL, i.e. "},{"kind":"code","text":"`new URL(resourcePath, [baseURL])`"},{"kind":"text","text":".\\n\\nConsider the following example:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(baseURL)\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(resourcePath)),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\nIn the above example:\\n- when "},{"kind":"code","text":"`resourcePath`"},{"kind":"text","text":" is defined as a full URL, it overrides the base URL\\n- when "},{"kind":"code","text":"`resourcePath`"},{"kind":"text","text":" starts with a forward slash "},{"kind":"code","text":"`/`"},{"kind":"text","text":", it replaces any path defined in the base URL\\n- when "},{"kind":"code","text":"`resourcePath`"},{"kind":"text","text":" is not a full URL and doesn\'t start with a forward slash, it gets appended to the base URL\\n\\n| baseURL                       | resourcePath               | result                               |\\n| ----------------------------- | -------------------------- | ------------------------------------ |\\n| "},{"kind":"code","text":"`https://api.example.org/`"},{"kind":"text","text":"    | "},{"kind":"code","text":"`/v1/users/2`"},{"kind":"text","text":"              | "},{"kind":"code","text":"`https://api.example.org/v1/users/2`"},{"kind":"text","text":" |\\n| "},{"kind":"code","text":"`https://example.org/api/v1/`"},{"kind":"text","text":" | "},{"kind":"code","text":"`users/2`"},{"kind":"text","text":"                  | "},{"kind":"code","text":"`https://example.org/api/v1/users/2`"},{"kind":"text","text":" |\\n| "},{"kind":"code","text":"`https://example.org/api/v1/`"},{"kind":"text","text":" | "},{"kind":"code","text":"`/secure/oauth`"},{"kind":"text","text":"            | "},{"kind":"code","text":"`https://example.org/secure/oauth`"},{"kind":"text","text":"   |\\n| "},{"kind":"code","text":"`https://v1.example.org/api/`"},{"kind":"text","text":" | "},{"kind":"code","text":"`https://v2.example.org/`"},{"kind":"text","text":"  | "},{"kind":"code","text":"`https://v2.example.org/`"},{"kind":"text","text":"            |\\n\\n### Using Axios configuration object\\n\\nWhen you need more control over how your Axios instance is configured, provide\\nan [Axios configuration object](https://axios-http.com/docs/req_config). For example:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using({\\n      baseURL: \'https://api.example.org/\',\\n      timeout: 30_000,\\n      // ... other configuration options\\n    })\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Working with proxy servers\\n\\n"},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" uses ["},{"kind":"code","text":"`proxy-from-env`"},{"kind":"text","text":"](https://www.npmjs.com/package/proxy-from-env) to automatically\\ndetect proxy server configuration based on your [environment variables](https://www.npmjs.com/package/proxy-from-env#environment-variables).\\n\\nThis default behaviour can be overridden by providing explicit proxy configuration:\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using({\\n      baseURL: \'https://api.example.org/\',\\n      proxy: {\\n        protocol: \'http\',\\n        host: \'proxy.example.org\',\\n        port: 9000,\\n        auth: {                          // `auth` is optional\\n          username: \'proxy-username\',\\n          password: \'proxy-password\',\\n        }\\n      }\\n      // ... other configuration options\\n    })\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\nPlease note that Serenity/JS uses [proxy-agents](https://github.com/TooTallNate/proxy-agents)\\nand the approach described in [\\"Node.js Axios behind corporate proxies\\"](https://janmolak.com/node-js-axios-behind-corporate-proxies-8b17a6f31f9d)\\nto work around [limited proxy support capabilities](https://github.com/axios/axios/issues?q=is%3Aissue+is%3Aopen+proxy) in Axios itself.\\n\\n### Using Axios instance with proxy support\\n\\nTo have full control over the Axios instance used by the ability to "},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":", you can create it yourself\\nand inject it into the ability.\\nThis approach allows you to still benefit from automated proxy detection in configuration, while taking advantage\\nof the many [Axios plugins](https://www.npmjs.com/search?q=axios).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { createAxios, CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nimport axiosRetry from \'axios-retry\'\\n\\nconst instance = createAxios({ baseURL \'https://api.example.org/\' })\\naxiosRetry(instance, { retries: 3 })\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using(instance)\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Using raw Axios instance\\n\\nIf you don\'t want Serenity/JS to enhance your Axios instance with proxy support, instantiate the ability to\\n"},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":" using its constructor directly.\\nNote, however, that by using this approach you\'re taking the responsibility for all the aspects of configuring Axios.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nimport { axiosCreate } from \'@serenity-js/rest\'\\nimport axiosRetry from \'axios-retry\'\\n\\nconst instance = axiosCreate({ baseURL \'https://api.example.org/\' })\\naxiosRetry(instance, { retries: 3 })\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    new CallAnApi(instance)     // using the constructor ensures your axios instance is not modified in any way.\\n  )\\n  .attemptsTo(\\n    // ...\\n  )\\n```"},{"kind":"text","text":"\\n\\n### Serenity/JS defaults\\n\\nWhen using ["},{"kind":"code","text":"`CallAnApi.at`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#at) or ["},{"kind":"code","text":"`CallAnApi.using`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#using) with a configuration object, Serenity/JS\\nmerges your [Axios request configuration](https://axios-http.com/docs/req_config) with the following defaults:\\n- "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":": 10 seconds\\n\\n\\nYou can override them by specifying the given property in your configuration object, for example:\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using({\\n      baseURL: \'https://api.example.org/\',\\n      timeout: 30_000\\n    })\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Interacting with multiple APIs\\n\\nSome test scenarios might require you to interact with multiple HTTP APIs. With Serenity/JS you can do this\\nusing either API-specific actors, or by specifying full URLs when performing the requests.\\n\\nThe following examples will assume that the test scenarios needs to interact with the following APIs:\\n- "},{"kind":"code","text":"`https://testdata.example.org/api/v1/`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`https://shop.example.org/api/v1/`"},{"kind":"text","text":"\\n\\nLet\'s also assume that the "},{"kind":"code","text":"`testdata`"},{"kind":"text","text":" API allows the automation to manage the test data used by the "},{"kind":"code","text":"`shop`"},{"kind":"text","text":" API.\\n\\n### Using API-specific actors\\n\\nTo create API-specific actors, configure your [test runner](/handbook/test-runners/) with a [cast](/api/core/class/Cast/)\\nthat gives your actors appropriate abilities based, for example, on their name:\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { Actor, Cast, engage } from \'@serenity-js/core\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\nexport class MyActors implements Cast {\\n  prepare(actor: Actor): Actor {\\n    switch(actor.name) {\\n      case \'Ted\':\\n        return actor.whoCan(CallAnApi.at(\'https://testdata.example.org/api/v1/\'))\\n      case \'Shelly\':\\n        return actor.whoCan(CallAnApi.at(\'https://shop.example.org/api/v1/\'))\\n      default:\\n        return actor;\\n    }\\n  }\\n}\\n\\nbeforeEach(() => engage(new MyActors()))\\n```"},{"kind":"text","text":"\\n\\nNext, retrieve the appropriate actor in your test scenario using ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/core/function/actorCalled/), for example:\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, beforeEach } from \'mocha\'\\nimport { actorCalled, engage } from \'@serenity-js/core\\nimport { Send, GetRequest, PostRequest, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ndescribe(\'Multi-actor API testing\', () => {\\n  beforeEach(() => engage(new MyActors()))\\n\\n  it(\'allows each actor to interact with their API\', async () => {\\n\\n    await actorCalled(\'Ted\').attemptsTo(\\n      Send.a(PostRequest.to(\'products\').with({ name: \'Apples\', price: \'\xa32.50\' })),\\n      Ensure.that(LastResponse.status(), equals(201)),\\n    )\\n\\n    await actorCalled(\'Shelly\').attemptsTo(\\n      Send.a(GetRequest.to(\'?product=Apples\')),\\n      Ensure.that(LastResponse.status(), equals(200)),\\n      Ensure.that(LastResponse.body(), equals([\\n        { name: \'Apples\', price: \'\xa32.50\' }\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n### Using full URLs\\n\\nIf you prefer to have a single actor interacting with multiple APIs, you can specify the full URL for every request:\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, beforeEach } from \'mocha\'\\nimport { actorCalled, Cast, engage } from \'@serenity-js/core\\nimport { CallAnApi, Send, GetRequest, PostRequest, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ndescribe(\'Multi-actor API testing\', () => {\\n  beforeEach(() => engage(\\n    Cast.where(actor => actor.whoCan(CallAnApi.using({})))\\n  ))\\n\\n  it(\'allows each actor to interact with their API\', async () => {\\n\\n    await actorCalled(\'Alice\').attemptsTo(\\n      Send.a(PostRequest.to(\'https://testdata.example.org/api/v1/products\')\\n        .with({ name: \'Apples\', price: \'\xa32.50\' })),\\n      Ensure.that(LastResponse.status(), equals(201)),\\n\\n      Send.a(GetRequest.to(\'https://shop.example.org/api/v1/?product=Apples\')),\\n      Ensure.that(LastResponse.status(), equals(200)),\\n      Ensure.that(LastResponse.body(), equals([\\n        { name: \'Apples\', price: \'\xa32.50\' }\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Axios: Configuring requests](https://axios-http.com/docs/req_config)\\n- [MDN: HTTP methods documentation](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods)"}]},"children":[{"id":6697,"name":"at","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":334,"character":11}],"signatures":[{"id":6698,"name":"at","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [ability](/api/core/class/Ability/) to call a REST API at a specified "},{"kind":"code","text":"`baseURL`"},{"kind":"text","text":";\\n\\nThis is the same as invoking "},{"kind":"code","text":"`CallAnApi.using({ baseURL: \'https://example.org\' })`"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":334,"character":11}],"parameters":[{"id":6699,"name":"baseURL","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.dom.d.ts","qualifiedName":"URL"},"name":"URL","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/API/URL"}]}}],"type":{"type":"reference","target":6696,"name":"CallAnApi","package":"@serenity-js/rest"}}]},{"id":6700,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":359,"character":11}],"signatures":[{"id":6701,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [ability](/api/core/class/Ability/) to call an HTTP API using the given Axios instance,\\nor an Axios request configuration object.\\n\\nWhen you provide an [Axios configuration object](https://axios-http.com/docs/req_config),\\nit gets shallow-merged with the following defaults:\\n- request timeout of 10 seconds\\n- automatic proxy support based on\\n  your [environment variables](https://www.npmjs.com/package/proxy-from-env#environment-variables)\\n\\nWhen you provide an Axios instance, it\'s enhanced with proxy support and no other modifications are made.\\n\\nIf you don\'t want Serenity/JS to augment or modify your Axios instance in any way,\\nplease use the ["},{"kind":"code","text":"`CallAnApi.constructor`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#constructor) directly."}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":359,"character":11}],"parameters":[{"id":6702,"name":"axiosInstanceOrConfig","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"},{"type":"reference","target":6689,"name":"AxiosRequestConfigDefaults","package":"@serenity-js/rest"}]}}],"type":{"type":"reference","target":6696,"name":"CallAnApi","package":"@serenity-js/rest"}}]},{"id":6708,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":370,"character":4}],"signatures":[{"id":6709,"name":"new CallAnApi","variant":"signature","kind":16384,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- [AxiosInstance](https://axios-http.com/docs/instance)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":370,"character":4}],"parameters":[{"id":6710,"name":"axiosInstance","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A pre-configured instance of the Axios HTTP client"}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosInstance"},"name":"AxiosInstance","package":"axios"}}],"type":{"type":"reference","target":6696,"name":"CallAnApi","package":"@serenity-js/rest"},"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}},{"id":6713,"name":"modifyConfig","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":384,"character":4}],"signatures":[{"id":6714,"name":"modifyConfig","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Allows for the original Axios config to be changed after\\nthe [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\nhas been instantiated and given to the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/).\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":384,"character":4}],"parameters":[{"id":6715,"name":"fn","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":6716,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":384,"character":21}],"signatures":[{"id":6717,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":384,"character":21}],"parameters":[{"id":6718,"name":"original","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosDefaults"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosDefaults","package":"axios"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":6719,"name":"request","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":401,"character":10}],"signatures":[{"id":6720,"name":"request","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sends an HTTP request to a specified url.\\nResponse will be cached and available via ["},{"kind":"code","text":"`CallAnApi.mapLastResponse`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/#mapLastResponse).\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)\\n- [AxiosResponse](https://axios-http.com/docs/res_schema)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":401,"character":10}],"parameters":[{"id":6721,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration, which can be used to override the defaults\\n provided when the [ability](/api/core/class/Ability/)\\n to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosResponse"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AxiosResponse","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":6722,"name":"resolveUrl","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":442,"character":4}],"signatures":[{"id":6723,"name":"resolveUrl","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the final URL, based on the ["},{"kind":"code","text":"`AxiosRequestConfig`"},{"kind":"text","text":"](https://axios-http.com/docs/req_config) provided\\nand any defaults that the ["},{"kind":"code","text":"`AxiosInstance`"},{"kind":"text","text":"](https://axios-http.com/docs/instance) has been configured with.\\n\\nNote that unlike Axios, this method uses the Node.js [WHATWG URL API](https://nodejs.org/api/url.html#new-urlinput-base)\\nto ensure URLs are correctly resolved."}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":442,"character":4}],"parameters":[{"id":6724,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":6725,"name":"mapLastResponse","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":459,"character":4}],"signatures":[{"id":6726,"name":"mapLastResponse","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps the last cached response to another type.\\nUseful when you need to extract a portion of the ["},{"kind":"code","text":"`AxiosResponse`"},{"kind":"text","text":"](https://axios-http.com/docs/res_schema) object.\\n\\n#### Learn more\\n- [AxiosResponse](https://axios-http.com/docs/res_schema)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":459,"character":4}],"typeParameter":[{"id":6727,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":6728,"name":"mappingFunction","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":6729,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":459,"character":40}],"signatures":[{"id":6730,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":459,"character":40}],"parameters":[{"id":6731,"name":"response","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosResponse"},"typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AxiosResponse","package":"axios"}}],"type":{"type":"reference","target":6727,"name":"T","package":"@serenity-js/rest","refersToTypeParameter":true}}]}}}],"type":{"type":"reference","target":6727,"name":"T","package":"@serenity-js/rest","refersToTypeParameter":true}}]}],"groups":[{"title":"Constructors","children":[6708]},{"title":"Methods","children":[6697,6700,6713,6719,6722,6725]}],"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":323,"character":13}],"extendedTypes":[{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/rest/class/CallAnApi","nextId":6732},{"id":6732,"name":"ChangeApiConfig","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes configuration of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\nthat the [actor](/api/core/class/Actor/) executing this [interaction](/api/core/class/Interaction/) has been configured with.\\n\\n## Changing API URL for all subsequent requests\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { By Navigate, PageElement, Text } from \'@serenity-js/web\';\\nimport { axiosCreate, CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\';\\n\\nimport * as axios from \'axios\';\\n\\n// Let\'s imagine that the website under test displays\\n// a dynamically generated API URL that we would like to use\\nconst ApiDetailsWidget = {\\n  url: () => PageElement.located(By.id(\'api-url\')).describedAs(\'API URL\'),\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    BrowseTheWeb.using(protractor.browser),\\n\\n    // Note: no default base URL is given when the axios instance is created\\n    CallAnApi.using(axiosCreate()),\\n  )\\n  .attemptsTo(\\n    Navigate.to(\'/profile\'),\\n\\n    // We change the API URL based on the text displayed in the widget\\n    // (although we could change it to some arbitrary string too).\\n    ChangeApiConfig.setUrlTo(Text.of(ApiDetailsWidget.url())),\\n\\n    // Any subsequent request will be sent to the newly set URL\\n    Send.a(GetRequest.to(\'/projects\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Changing API port for all subsequent requests\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { LocalServer, ManageALocalServer, StartLocalServer } from \'@serenity-js/local-server\'\\nimport { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    ManageALocalServer.runningAHttpListener(someServer),\\n    CallAnApi.at(\'http://localhost\'),\\n  )\\n  .attemptsTo(\\n    StartALocalServer.onRandomPort(),\\n    ChangeApiConfig.setPortTo(LocalServer.port()),\\n    Send.a(GetRequest.to(\'/api\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Setting a header for all subsequent requests\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n// A sample Question reading a Node process environment variable\\nconst EnvVar = (var_name: string) =>\\n    Question.about(`${ name } environment variable`, actor => process.env[var_name]);\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(\'http://localhost\'),\\n  )\\n  .attemptsTo(\\n    ChangeApiConfig.setHeader(\'Authorization\', EnvVar(\'TOKEN\')),\\n    Send.a(GetRequest.to(\'/api\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Handling sensitive information\\n\\nBy design, any data handled by an actor appears in Serenity/JS reports.\\nTo prevent the exposure of any sensitive information, such as passwords or tokens, you should use ["},{"kind":"code","text":"`Masked`"},{"kind":"text","text":"](/api/core/class/Masked/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Masked } from \'@serenity-js/core\'\\nimport { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(\'http://localhost\'),\\n  )\\n  .attemptsTo(\\n    ChangeApiConfig.setHeader(\'Authorization\', Masked.valueOf(\'secret token\')),\\n    Send.a(GetRequest.to(\'/api\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"}]},"children":[{"id":6733,"name":"setUrlTo","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":121,"character":11}],"signatures":[{"id":6734,"name":"setUrlTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to change the base URL\\nof their [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":121,"character":11}],"parameters":[{"id":6735,"name":"newApiUrl","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":6736,"name":"setPortTo","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":131,"character":11}],"signatures":[{"id":6737,"name":"setPortTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to change the port configured in the base URL\\nof their [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":131,"character":11}],"parameters":[{"id":6738,"name":"newApiPort","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":6739,"name":"setHeader","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":144,"character":11}],"signatures":[{"id":6740,"name":"setHeader","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the [actor](/api/core/class/Actor/) to change the configuration of the ["},{"kind":"code","text":"`AxiosInstance`"},{"kind":"text","text":"](https://axios-http.com/docs/instance)\\nused by their [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/)\\nand set an HTTP request header for any subsequent [HTTP requests](/api/rest/class/HTTPRequest/)\\nissued via ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/)."}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":144,"character":11}],"parameters":[{"id":6741,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":6742,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":6743,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":6744,"name":"new ChangeApiConfig","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":6732,"name":"ChangeApiConfig","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Constructors","children":[6743]},{"title":"Methods","children":[6733,6736,6739]}],"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":113,"character":13}],"permalink":"/api/rest/class/ChangeApiConfig","previousId":6696,"nextId":6745},{"id":6745,"name":"Send","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sends a ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/) to a specified URL.\\n\\nThe response to the request is made available via ["},{"kind":"code","text":"`LastResponse`"},{"kind":"text","text":"](/api/rest/class/LastResponse/).\\n\\n## Send a GET request\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"}]},"children":[{"id":6746,"name":"a","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":42,"character":11}],"signatures":[{"id":6747,"name":"a","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/).\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":42,"character":11}],"parameters":[{"id":6748,"name":"request","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":6775,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":6776,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":6777,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":6778,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":6779,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":6780,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6781,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6781]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":6787,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":6788,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":6763,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":56,"character":4}],"signatures":[{"id":6764,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":56,"character":4}],"parameters":[{"id":6765,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":652,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[6746,6775,6777,6787,6763]}],"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":32,"character":13}],"extendedTypes":[{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/rest/class/Send","previousId":6732,"nextId":6693},{"id":6789,"name":"DeleteRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The DELETE method requests that the origin server remove the\\nassociation between the target resource and its current\\nfunctionality.\\n\\n## Create and then remove a resource\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { CallAnApi, DeleteRequest, LastResponse, PostRequest, Send } from \'@serenity-js/rest\'\\n import { Ensure, equals, startsWith } from \'@serenity-js/assertions\'\\n\\n await actorCalled(\'Apisitt\')\\n   .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n   .attemptsTo(\\n     // create a new test user account\\n     Send.a(PostRequest.to(\'/users\').with({\\n         login: \'tester\',\\n         password: \'P@ssword1\',\\n     }),\\n     Ensure.that(LastResponse.status(), equals(201)),\\n     Ensure.that(LastResponse.header(\'Location\'), startsWith(\'/users\')),\\n\\n     // delete the test user account\\n     Send.a(DeleteRequest.to(LastResponse.header(\'Location\'))),\\n     Ensure.that(LastResponse.status(), equals(200)),\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE\\n- https://tools.ietf.org/html/rfc7231#section-4.3.5"}]},"children":[{"id":6790,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":55,"character":11}],"signatures":[{"id":6791,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":55,"character":11}],"parameters":[{"id":6792,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":6789,"name":"DeleteRequest","package":"@serenity-js/rest"}}]},{"id":8737,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":8738,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":8739,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14021,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14020,"name":"HTTPRequest.describedAs"}},{"id":8740,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":8741,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":8742,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":8743,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":8744,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":8745,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":8746,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14024,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14023,"name":"HTTPRequest.as"}},{"id":8747,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":8748,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":8749,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8750,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8751,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[8751]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14031,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14030,"name":"HTTPRequest.describedBy"}},{"id":8757,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":8758,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14041,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14040,"name":"HTTPRequest.toString"}},{"id":7474,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":71,"character":4}],"signatures":[{"id":7475,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":71,"character":4}],"parameters":[{"id":7476,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reflection","declaration":{"id":7477,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7478,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":7479,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":7480,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":7481,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":7482,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":7483,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":7484,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":7485,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":7486,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":7487,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":7488,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7489,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7490,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7491,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7492,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7493,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7494,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7495,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7496,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7497,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7498,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7499,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7500,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7501,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7502,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7503,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7504,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7505,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7506,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7507,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7508,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7509,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7510,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7511,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7512,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7513,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7514,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7515,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7489,7490,7491,7492,7493,7494,7495,7496,7497,7498,7499,7500,7501,7502,7503,7504,7505,7506,7507,7508,7509,7510,7511,7512,7513,7514,7515]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":7516,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7517,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":7518,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7519,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7520,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7521,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7522,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7523,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7524,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7525,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7526,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7527,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7528,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7529,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7530,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7531,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7532,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7533,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7534,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7535,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7536,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7537,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7538,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7539,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7540,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7541,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7542,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7543,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7544,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7545,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7519,7520,7521,7522,7523,7524,7525,7526,7527,7528,7529,7530,7531,7532,7533,7534,7535,7536,7537,7538,7539,7540,7541,7542,7543,7544,7545]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":7546,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":7547,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7548,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7549,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7550,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7551,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7552,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7553,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7554,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7555,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7556,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7557,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7558,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7559,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7560,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7561,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7562,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7563,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7564,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7565,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7566,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7567,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7568,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7569,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7570,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7571,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7572,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7573,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7574,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7548,7549,7550,7551,7552,7553,7554,7555,7556,7557,7558,7559,7560,7561,7562,7563,7564,7565,7566,7567,7568,7569,7570,7571,7572,7573,7574]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":7575,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":7576,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7577,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7578,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7579,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7580,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7581,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7582,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7583,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7584,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7585,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7586,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7587,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7588,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7589,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7590,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7591,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7592,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7593,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7594,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7595,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7596,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7597,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7598,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7599,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7600,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7601,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7602,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7603,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7577,7578,7579,7580,7581,7582,7583,7584,7585,7586,7587,7588,7589,7590,7591,7592,7593,7594,7595,7596,7597,7598,7599,7600,7601,7602,7603]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":7604,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":7605,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7606,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7607,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7608,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7609,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7610,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7611,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7612,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7613,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7614,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7615,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7616,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7617,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7618,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7619,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7620,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7621,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7622,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7623,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7624,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7625,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7626,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7627,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7628,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7629,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7630,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7631,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7632,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7606,7607,7608,7609,7610,7611,7612,7613,7614,7615,7616,7617,7618,7619,7620,7621,7622,7623,7624,7625,7626,7627,7628,7629,7630,7631,7632]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":7633,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":7634,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7635,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7636,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7637,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7638,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7639,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7640,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7641,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7642,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7643,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7644,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7645,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7646,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7647,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7648,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7649,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7650,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7651,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7652,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7653,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7654,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7655,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7656,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7657,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7658,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7659,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7660,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7661,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7635,7636,7637,7638,7639,7640,7641,7642,7643,7644,7645,7646,7647,7648,7649,7650,7651,7652,7653,7654,7655,7656,7657,7658,7659,7660,7661]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":7691,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7692,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7693,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7694,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7695,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7696,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7697,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7698,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7699,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7700,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7701,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7702,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7703,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7704,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7705,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7706,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7707,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7708,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7709,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7710,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7711,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7712,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7713,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7714,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7715,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7716,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7717,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7718,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7719,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7693,7694,7695,7696,7697,7698,7699,7700,7701,7702,7703,7704,7705,7706,7707,7708,7709,7710,7711,7712,7713,7714,7715,7716,7717,7718,7719]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7720,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7721,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7722,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7723,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7724,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7725,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7726,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7727,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7728,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7729,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7730,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7731,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7732,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7733,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7734,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7735,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7736,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7737,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7738,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7739,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7740,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7741,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7742,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7743,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7744,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7745,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7746,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7747,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7748,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7722,7723,7724,7725,7726,7727,7728,7729,7730,7731,7732,7733,7734,7735,7736,7737,7738,7739,7740,7741,7742,7743,7744,7745,7746,7747,7748]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7749,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7750,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7751,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7752,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7753,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7754,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7755,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7756,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7757,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7758,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7759,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7760,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7761,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7762,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7763,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7764,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7765,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7766,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7767,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7768,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7769,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7770,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7771,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7772,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7773,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7774,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7775,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7776,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7777,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7751,7752,7753,7754,7755,7756,7757,7758,7759,7760,7761,7762,7763,7764,7765,7766,7767,7768,7769,7770,7771,7772,7773,7774,7775,7776,7777]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7778,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7779,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7780,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7781,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7782,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7783,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7784,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7785,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7786,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7787,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7788,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7789,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7790,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7791,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7792,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7793,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7794,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7795,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7796,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7797,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7798,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7799,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7800,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7801,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7802,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7803,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7804,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7805,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7806,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7780,7781,7782,7783,7784,7785,7786,7787,7788,7789,7790,7791,7792,7793,7794,7795,7796,7797,7798,7799,7800,7801,7802,7803,7804,7805,7806]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7807,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7808,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7809,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7810,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7811,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7812,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7813,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7814,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7815,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7816,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7817,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7818,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7819,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7820,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7821,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7822,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7823,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7824,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7825,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7826,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7827,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7828,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7829,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7830,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7831,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7832,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7833,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7834,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7835,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7809,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,7824,7825,7826,7827,7828,7829,7830,7831,7832,7833,7834,7835]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7836,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7837,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7838,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7839,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7840,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7841,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7842,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7843,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7844,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7845,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7846,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7847,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7848,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7849,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7850,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7851,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7852,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7853,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7854,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7855,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7856,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7857,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7858,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7859,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7860,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7861,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7862,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7863,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7864,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7838,7839,7840,7841,7842,7843,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7854,7855,7856,7857,7858,7859,7860,7861,7862,7863,7864]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7865,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7866,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7867,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7868,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7869,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7870,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7871,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7872,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7873,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7874,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7875,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7876,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7877,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7878,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7879,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7880,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7881,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7882,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7883,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7884,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7885,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7886,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7887,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7888,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7889,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7890,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7891,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7892,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7893,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7867,7868,7869,7870,7871,7872,7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886,7887,7888,7889,7890,7891,7892,7893]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7894,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7895,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7896,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7897,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7898,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7899,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7900,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7901,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7902,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7903,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7904,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7905,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7906,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7907,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7908,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7909,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7910,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7911,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7912,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7913,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7914,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7915,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7916,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7917,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7918,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7919,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7920,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7921,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7922,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7896,7897,7898,7899,7900,7901,7902,7903,7904,7905,7906,7907,7908,7909,7910,7911,7912,7913,7914,7915,7916,7917,7918,7919,7920,7921,7922]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7923,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7924,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7925,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7926,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7927,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7928,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7929,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7930,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7931,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7932,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7933,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7934,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7935,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7936,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7937,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7938,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7939,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7940,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7941,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7942,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7943,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7944,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7945,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7946,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7947,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7948,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7949,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7950,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7951,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7925,7926,7927,7928,7929,7930,7931,7932,7933,7934,7935,7936,7937,7938,7939,7940,7941,7942,7943,7944,7945,7946,7947,7948,7949,7950,7951]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7952,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":7953,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7954,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7955,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7956,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7957,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7958,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7959,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7960,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7961,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7962,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7963,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7964,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7965,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7966,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7967,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7968,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7969,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7970,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7971,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7972,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7973,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7974,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7975,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7976,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7977,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7978,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7979,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7980,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7954,7955,7956,7957,7958,7959,7960,7961,7962,7963,7964,7965,7966,7967,7968,7969,7970,7971,7972,7973,7974,7975,7976,7977,7978,7979,7980]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7981,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":7982,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7983,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7984,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7985,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7986,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7987,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7988,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7989,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7990,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7991,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7992,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7993,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7994,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7995,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7996,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7997,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7998,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7999,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8000,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8001,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8002,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8003,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8004,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8005,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8006,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8007,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8008,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":8009,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7983,7984,7985,7986,7987,7988,7989,7990,7991,7992,7993,7994,7995,7996,7997,7998,7999,8000,8001,8002,8003,8004,8005,8006,8007,8008,8009]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":7662,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":7663,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":7664,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7665,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7666,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7667,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7668,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7669,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7670,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7671,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7672,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7673,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7674,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7675,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7676,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7677,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7678,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7679,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7680,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7681,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7682,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7683,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7684,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7685,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7686,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7687,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7688,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7689,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":7690,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[7664,7665,7666,7667,7668,7669,7670,7671,7672,7673,7674,7675,7676,7677,7678,7679,7680,7681,7682,7683,7684,7685,7686,7687,7688,7689,7690]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[7517,7546,7575,7604,7633,7691,7720,7749,7778,7807,7836,7865,7894,7923,7952,7981,7662]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8010,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8011,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8012,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8017,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8018,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8019,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8020,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8021,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8013,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8014,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8015,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8016,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[8017,8019,8020,8021,8013,8015]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":8022,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8023,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8024,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8025,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8026,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8027,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8028,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":8029,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8030,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8031,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8032,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8031,8032]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8033,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8034,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8035,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8036,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8037,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8038,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8039,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8040,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8041,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8042,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8043,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8044,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8045,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8046,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":8047,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8048,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8049,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8050,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8051,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8052,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":8053,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8054,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8055,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8056,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8057,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8058,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8059,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8060,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8059,8060]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8061,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8055,8056,8057,8061]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8062,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8063,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8064,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":8065,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8066,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8067,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[8067]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8068,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[8064,8065]},{"title":"Methods","children":[8068]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8069,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8070,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8071,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8072,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8073,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8074,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[8072,8073,8074]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8075,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8076,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8077,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8078,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8079,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8080,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8081,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8082,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8083,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[8077,8078,8080,8082]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8084,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8085,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8086,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8087,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8088,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[8087]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8089,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8090,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":8091,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8092,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8093,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8094,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8095,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[8091,8093,8094,8095]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":8096,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":8097,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":8098,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":8099,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8100,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":8101,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":8102,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":8103,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[7478,7479,7480,7481,7484,7487,8010,8011,8023,8024,8025,8026,8027,8029,8033,8034,8035,8036,8037,8039,8041,8042,8044,8045,8046,8047,8049,8050,8051,8052,8053,8062,8069,8070,8075,8084,8085,8089,8096,8097,8100,8102]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":6789,"name":"DeleteRequest","package":"@serenity-js/rest"}}]},{"id":8734,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":8735,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":8736,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14018,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14017,"name":"HTTPRequest.answeredBy"}}],"groups":[{"title":"Methods","children":[6790,8737,8740,8747,8757,7474,8734]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/DeleteRequest.ts","line":42,"character":13}],"extendedTypes":[{"type":"reference","target":12699,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/DeleteRequest","previousId":6693,"nextId":8759},{"id":8759,"name":"GetRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The HTTP GET method requests a representation of the specified resource.\\nIt is the most frequent type of request made by consumers of a typical HTTP API.\\nFor this reason it\'s important to test every known endpoint that responds to GET requests and ensure that it\\nbehaves correctly.\\n\\nSince the GET method is used to _retrieve_ data from a server, it should be implemented\\nas [safe](https://developer.mozilla.org/en-US/docs/Glossary/Safe)\\nand [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent).\\nThis means that an identical request can be made once or several times in a row with the same effect while leaving\\nthe server in the same state.\\n\\n## Verify response to a GET request\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n interface Book {\\n     title: string;\\n     author: string;\\n }\\n\\n await actorCalled(\'Apisitt\')\\n   .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n   .attemptsTo(\\n     Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n     Ensure.that(LastResponse.status(), equals(200)),\\n     Ensure.that(LastResponse.body<Book>(), equals({\\n         title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n         author: \'Robert M. Pirsig\',\\n     })),\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET\\n- https://tools.ietf.org/html/rfc7231#section-4.3.1"}]},"children":[{"id":8760,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":62,"character":11}],"signatures":[{"id":8761,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":62,"character":11}],"parameters":[{"id":8762,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":8759,"name":"GetRequest","package":"@serenity-js/rest"}}]},{"id":10707,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":10708,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":10709,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14021,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14020,"name":"HTTPRequest.describedAs"}},{"id":10710,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":10711,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":10712,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":10713,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":10714,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":10715,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":10716,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14024,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14023,"name":"HTTPRequest.as"}},{"id":10717,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":10718,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":10719,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10720,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10721,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[10721]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14031,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14030,"name":"HTTPRequest.describedBy"}},{"id":10727,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":10728,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14041,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14040,"name":"HTTPRequest.toString"}},{"id":9444,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":78,"character":4}],"signatures":[{"id":9445,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":78,"character":4}],"parameters":[{"id":9446,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reflection","declaration":{"id":9447,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9448,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":9449,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":9450,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":9451,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":9452,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":9453,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":9454,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":9455,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":9456,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":9457,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":9458,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9459,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9460,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9461,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9462,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9463,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9464,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9465,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9466,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9467,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9468,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9469,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9470,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9471,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9472,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9473,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9474,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9475,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9476,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9477,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9478,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9479,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9480,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9481,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9482,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9483,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9484,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9485,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9459,9460,9461,9462,9463,9464,9465,9466,9467,9468,9469,9470,9471,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":9486,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9487,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":9488,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9489,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9490,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9491,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9492,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9493,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9494,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9495,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9496,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9497,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9498,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9499,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9500,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9501,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9502,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9503,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9504,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9505,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9506,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9507,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9508,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9509,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9510,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9511,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9512,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9513,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9514,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9515,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":9516,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":9517,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9518,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9519,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9520,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9521,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9522,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9523,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9524,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9525,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9526,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9527,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9528,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9529,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9530,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9531,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9532,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9533,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9534,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9535,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9536,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9537,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9538,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9539,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9540,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9541,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9542,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9543,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9544,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":9545,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":9546,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9547,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9548,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9549,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9550,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9551,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9552,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9553,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9554,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9555,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9556,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9557,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9558,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9559,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9560,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9561,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9562,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9563,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9564,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9565,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9566,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9567,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9568,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9569,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9570,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9571,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9572,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9573,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9547,9548,9549,9550,9551,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":9574,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":9575,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9576,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9577,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9578,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9579,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9580,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9581,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9582,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9583,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9584,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9585,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9586,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9587,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9588,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9589,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9590,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9591,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9592,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9593,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9594,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9595,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9596,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9597,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9598,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9599,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9600,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9601,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9602,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9588,9589,9590,9591,9592,9593,9594,9595,9596,9597,9598,9599,9600,9601,9602]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":9603,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":9604,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9605,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9606,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9607,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9608,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9609,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9610,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9611,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9612,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9613,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9614,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9615,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9616,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9617,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9618,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9619,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9620,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9621,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9622,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9623,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9624,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9625,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9626,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9627,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9628,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9629,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9630,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9631,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9616,9617,9618,9619,9620,9621,9622,9623,9624,9625,9626,9627,9628,9629,9630,9631]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":9661,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9662,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9663,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9664,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9665,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9666,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9667,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9668,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9669,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9670,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9671,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9672,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9673,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9674,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9675,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9676,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9677,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9678,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9679,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9680,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9681,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9682,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9683,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9684,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9685,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9686,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9687,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9688,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9689,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9663,9664,9665,9666,9667,9668,9669,9670,9671,9672,9673,9674,9675,9676,9677,9678,9679,9680,9681,9682,9683,9684,9685,9686,9687,9688,9689]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9690,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9691,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9692,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9693,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9694,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9695,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9696,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9697,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9698,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9699,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9700,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9701,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9702,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9703,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9704,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9705,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9706,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9707,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9708,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9709,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9710,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9711,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9712,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9713,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9714,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9715,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9716,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9717,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9718,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9692,9693,9694,9695,9696,9697,9698,9699,9700,9701,9702,9703,9704,9705,9706,9707,9708,9709,9710,9711,9712,9713,9714,9715,9716,9717,9718]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9719,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9720,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9721,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9722,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9723,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9724,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9725,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9726,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9727,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9728,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9729,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9730,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9731,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9732,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9733,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9734,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9735,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9736,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9737,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9738,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9739,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9740,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9741,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9742,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9743,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9744,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9745,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9746,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9747,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9721,9722,9723,9724,9725,9726,9727,9728,9729,9730,9731,9732,9733,9734,9735,9736,9737,9738,9739,9740,9741,9742,9743,9744,9745,9746,9747]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9748,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9749,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9750,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9751,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9752,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9753,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9754,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9755,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9756,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9757,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9758,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9759,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9760,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9761,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9762,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9763,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9764,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9765,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9766,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9767,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9768,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9769,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9770,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9771,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9772,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9773,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9774,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9775,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9776,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9750,9751,9752,9753,9754,9755,9756,9757,9758,9759,9760,9761,9762,9763,9764,9765,9766,9767,9768,9769,9770,9771,9772,9773,9774,9775,9776]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9777,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9778,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9779,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9780,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9781,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9782,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9783,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9784,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9785,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9786,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9787,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9788,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9789,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9790,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9791,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9792,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9793,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9794,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9795,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9796,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9797,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9798,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9799,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9800,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9801,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9802,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9803,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9804,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9805,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9779,9780,9781,9782,9783,9784,9785,9786,9787,9788,9789,9790,9791,9792,9793,9794,9795,9796,9797,9798,9799,9800,9801,9802,9803,9804,9805]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9806,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9807,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9808,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9809,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9810,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9811,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9812,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9813,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9814,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9815,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9816,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9817,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9818,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9819,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9820,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9821,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9822,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9823,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9824,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9825,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9826,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9827,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9828,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9829,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9830,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9831,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9832,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9833,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9834,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9808,9809,9810,9811,9812,9813,9814,9815,9816,9817,9818,9819,9820,9821,9822,9823,9824,9825,9826,9827,9828,9829,9830,9831,9832,9833,9834]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9835,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9836,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9837,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9838,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9839,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9840,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9841,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9842,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9843,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9844,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9845,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9846,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9847,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9848,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9849,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9850,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9851,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9852,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9853,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9854,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9855,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9856,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9857,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9858,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9859,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9860,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9861,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9862,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9863,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9837,9838,9839,9840,9841,9842,9843,9844,9845,9846,9847,9848,9849,9850,9851,9852,9853,9854,9855,9856,9857,9858,9859,9860,9861,9862,9863]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9864,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9865,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9866,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9867,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9868,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9869,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9870,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9871,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9872,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9873,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9874,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9875,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9876,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9877,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9878,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9879,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9880,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9881,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9882,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9883,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9884,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9885,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9886,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9887,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9888,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9889,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9890,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9891,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9892,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9866,9867,9868,9869,9870,9871,9872,9873,9874,9875,9876,9877,9878,9879,9880,9881,9882,9883,9884,9885,9886,9887,9888,9889,9890,9891,9892]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9893,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9894,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9895,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9896,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9897,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9898,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9899,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9900,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9901,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9902,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9903,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9904,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9905,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9906,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9907,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9908,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9909,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9910,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9911,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9912,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9913,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9914,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9915,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9916,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9917,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9918,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9919,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9920,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9921,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9895,9896,9897,9898,9899,9900,9901,9902,9903,9904,9905,9906,9907,9908,9909,9910,9911,9912,9913,9914,9915,9916,9917,9918,9919,9920,9921]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9922,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":9923,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9924,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9925,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9926,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9927,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9928,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9929,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9930,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9931,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9932,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9933,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9934,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9935,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9936,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9937,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9938,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9939,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9940,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9941,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9942,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9943,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9944,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9945,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9946,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9947,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9948,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9949,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9950,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9924,9925,9926,9927,9928,9929,9930,9931,9932,9933,9934,9935,9936,9937,9938,9939,9940,9941,9942,9943,9944,9945,9946,9947,9948,9949,9950]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9951,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":9952,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9953,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9954,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9955,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9956,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9957,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9958,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9959,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9960,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9961,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9962,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9963,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9964,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9965,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9966,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9967,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9968,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9969,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9970,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9971,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9972,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9973,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9974,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9975,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9976,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9977,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9978,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9979,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9953,9954,9955,9956,9957,9958,9959,9960,9961,9962,9963,9964,9965,9966,9967,9968,9969,9970,9971,9972,9973,9974,9975,9976,9977,9978,9979]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9632,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":9633,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9634,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9635,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9636,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9637,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9638,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9639,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9640,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9641,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9642,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9643,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9644,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9645,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9646,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9647,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9648,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9649,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9650,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9651,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9652,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9653,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9654,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9655,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9656,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9657,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9658,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9659,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":9660,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[9634,9635,9636,9637,9638,9639,9640,9641,9642,9643,9644,9645,9646,9647,9648,9649,9650,9651,9652,9653,9654,9655,9656,9657,9658,9659,9660]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[9487,9516,9545,9574,9603,9661,9690,9719,9748,9777,9806,9835,9864,9893,9922,9951,9632]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":9980,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":9981,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":9982,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":9987,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":9988,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9989,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":9990,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":9991,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":9983,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":9984,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":9985,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":9986,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[9987,9989,9990,9991,9983,9985]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":9992,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":9993,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":9994,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":9995,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":9996,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":9997,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":9998,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":9999,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10000,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10001,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10002,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10001,10002]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10003,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10004,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10005,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10006,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10007,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10008,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10009,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10010,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10011,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10012,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10013,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10014,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10015,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10016,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":10017,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10018,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10019,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10020,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10021,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10022,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":10023,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10024,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10025,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10026,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10027,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10028,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10029,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10030,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10029,10030]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10031,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10025,10026,10027,10031]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10032,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10033,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10034,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":10035,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10036,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10037,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[10037]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10038,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[10034,10035]},{"title":"Methods","children":[10038]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10039,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10040,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10041,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10042,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10043,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10044,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[10042,10043,10044]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10045,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10046,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10047,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10048,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10049,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10050,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10051,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10052,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10053,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[10047,10048,10050,10052]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10054,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10055,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10056,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10057,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10058,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[10057]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10059,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10060,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":10061,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10062,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10063,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10064,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10065,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[10061,10063,10064,10065]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":10066,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":10067,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":10068,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":10069,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10070,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":10071,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":10072,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":10073,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[9448,9449,9450,9451,9454,9457,9980,9981,9993,9994,9995,9996,9997,9999,10003,10004,10005,10006,10007,10009,10011,10012,10014,10015,10016,10017,10019,10020,10021,10022,10023,10032,10039,10040,10045,10054,10055,10059,10066,10067,10070,10072]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":8759,"name":"GetRequest","package":"@serenity-js/rest"}}]},{"id":10704,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":10705,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":10706,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14018,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14017,"name":"HTTPRequest.answeredBy"}}],"groups":[{"title":"Methods","children":[8760,10707,10710,10717,10727,9444,10704]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/GetRequest.ts","line":49,"character":13}],"extendedTypes":[{"type":"reference","target":12699,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/GetRequest","previousId":6789,"nextId":12699},{"id":12699,"name":"HTTPRequest","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"HTTP Request sent by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nusing the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Send`"},{"kind":"text","text":"](/api/rest/class/Send/)"}]},"children":[{"id":14020,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":14021,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":14022,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":14023,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":14024,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":14025,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":14026,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":14027,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":14028,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":14029,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":14030,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":14031,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":14032,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":14033,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14034,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[14034]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":14040,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":14041,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"}},{"id":14017,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":14018,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":14019,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"groups":[{"title":"Methods","children":[14020,14023,14030,14040,14017]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":12,"character":22}],"extendedTypes":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":6789,"name":"DeleteRequest"},{"type":"reference","target":8759,"name":"GetRequest"},{"type":"reference","target":10729,"name":"HeadRequest"},{"type":"reference","target":14042,"name":"OptionsRequest"},{"type":"reference","target":16012,"name":"PatchRequest"},{"type":"reference","target":17985,"name":"PostRequest"},{"type":"reference","target":19958,"name":"PutRequest"}],"permalink":"/api/rest/class/HTTPRequest","previousId":8759,"nextId":10729},{"id":10729,"name":"HeadRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The HTTP HEAD method requests the headers that are returned if the specified resource\\nwould be requested with an HTTP GET method.\\nSuch a request can be done before deciding to download a large resource to save bandwidth, for example.\\n\\n## File download test\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, HeadRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(HeadRequest.to(\'/downloads/my-test-document.pdf\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Content-Length\'), equals(256)), // assuming we know the size of the document\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD\\n- https://tools.ietf.org/html/rfc7231#section-4.3.2"}]},"children":[{"id":10730,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":47,"character":11}],"signatures":[{"id":10731,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":47,"character":11}],"parameters":[{"id":10732,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":10729,"name":"HeadRequest","package":"@serenity-js/rest"}}]},{"id":12677,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":12678,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":12679,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14021,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14020,"name":"HTTPRequest.describedAs"}},{"id":12680,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":12681,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":12682,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":12683,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":12684,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":12685,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":12686,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14024,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14023,"name":"HTTPRequest.as"}},{"id":12687,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":12688,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":12689,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12690,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12691,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[12691]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14031,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14030,"name":"HTTPRequest.describedBy"}},{"id":12697,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":12698,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14041,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14040,"name":"HTTPRequest.toString"}},{"id":12674,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":12675,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":12676,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14018,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14017,"name":"HTTPRequest.answeredBy"}},{"id":11414,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":63,"character":4}],"signatures":[{"id":11415,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":63,"character":4}],"parameters":[{"id":11416,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reflection","declaration":{"id":11417,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11418,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11419,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11420,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11421,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":11422,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":11423,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":11424,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":11425,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":11426,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":11427,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":11428,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11429,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11430,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11431,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11432,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11433,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11434,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11435,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11436,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11437,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11438,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11439,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11440,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11441,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11442,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11443,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11444,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11445,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11446,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11447,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11448,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11449,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11450,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11451,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11452,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11453,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11454,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11455,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11429,11430,11431,11432,11433,11434,11435,11436,11437,11438,11439,11440,11441,11442,11443,11444,11445,11446,11447,11448,11449,11450,11451,11452,11453,11454,11455]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":11456,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11457,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11458,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11459,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11460,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11461,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11462,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11463,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11464,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11465,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11466,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11467,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11468,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11469,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11470,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11471,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11472,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11473,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11474,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11475,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11476,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11477,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11478,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11479,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11480,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11481,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11482,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11483,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11484,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11485,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11459,11460,11461,11462,11463,11464,11465,11466,11467,11468,11469,11470,11471,11472,11473,11474,11475,11476,11477,11478,11479,11480,11481,11482,11483,11484,11485]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":11486,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11487,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11488,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11489,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11490,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11491,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11492,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11493,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11494,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11495,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11496,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11497,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11498,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11499,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11500,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11501,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11502,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11503,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11504,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11505,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11506,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11507,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11508,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11509,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11510,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11511,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11512,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11513,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11514,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11488,11489,11490,11491,11492,11493,11494,11495,11496,11497,11498,11499,11500,11501,11502,11503,11504,11505,11506,11507,11508,11509,11510,11511,11512,11513,11514]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":11515,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11516,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11517,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11518,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11519,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11520,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11521,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11522,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11523,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11524,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11525,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11526,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11527,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11528,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11529,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11530,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11531,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11532,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11533,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11534,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11535,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11536,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11537,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11538,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11539,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11540,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11541,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11542,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11543,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11517,11518,11519,11520,11521,11522,11523,11524,11525,11526,11527,11528,11529,11530,11531,11532,11533,11534,11535,11536,11537,11538,11539,11540,11541,11542,11543]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":11544,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11545,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11546,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11547,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11548,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11549,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11550,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11551,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11552,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11553,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11554,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11555,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11556,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11557,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11558,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11559,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11560,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11561,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11562,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11563,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11564,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11565,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11566,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11567,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11568,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11569,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11570,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11571,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11572,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11546,11547,11548,11549,11550,11551,11552,11553,11554,11555,11556,11557,11558,11559,11560,11561,11562,11563,11564,11565,11566,11567,11568,11569,11570,11571,11572]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":11573,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11574,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11575,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11576,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11577,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11578,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11579,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11580,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11581,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11582,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11583,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11584,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11585,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11586,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11587,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11588,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11589,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11590,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11591,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11592,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11593,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11594,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11595,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11596,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11597,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11598,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11599,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11600,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11601,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11575,11576,11577,11578,11579,11580,11581,11582,11583,11584,11585,11586,11587,11588,11589,11590,11591,11592,11593,11594,11595,11596,11597,11598,11599,11600,11601]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":11631,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11632,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11633,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11634,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11635,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11636,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11637,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11638,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11639,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11640,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11641,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11642,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11643,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11644,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11645,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11646,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11647,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11648,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11649,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11650,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11651,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11652,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11653,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11654,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11655,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11656,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11657,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11658,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11659,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11633,11634,11635,11636,11637,11638,11639,11640,11641,11642,11643,11644,11645,11646,11647,11648,11649,11650,11651,11652,11653,11654,11655,11656,11657,11658,11659]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11660,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11661,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11662,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11663,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11664,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11665,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11666,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11667,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11668,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11669,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11670,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11671,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11672,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11673,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11674,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11675,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11676,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11677,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11678,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11679,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11680,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11681,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11682,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11683,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11684,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11685,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11686,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11687,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11688,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11662,11663,11664,11665,11666,11667,11668,11669,11670,11671,11672,11673,11674,11675,11676,11677,11678,11679,11680,11681,11682,11683,11684,11685,11686,11687,11688]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11689,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11690,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11691,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11692,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11693,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11694,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11695,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11696,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11697,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11698,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11699,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11700,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11701,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11702,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11703,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11704,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11705,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11706,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11707,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11708,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11709,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11710,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11711,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11712,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11713,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11714,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11715,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11716,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11717,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11691,11692,11693,11694,11695,11696,11697,11698,11699,11700,11701,11702,11703,11704,11705,11706,11707,11708,11709,11710,11711,11712,11713,11714,11715,11716,11717]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11718,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11719,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11720,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11721,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11722,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11723,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11724,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11725,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11726,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11727,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11728,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11729,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11730,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11731,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11732,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11733,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11734,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11735,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11736,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11737,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11738,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11739,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11740,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11741,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11742,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11743,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11744,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11745,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11746,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11720,11721,11722,11723,11724,11725,11726,11727,11728,11729,11730,11731,11732,11733,11734,11735,11736,11737,11738,11739,11740,11741,11742,11743,11744,11745,11746]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11747,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11748,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11749,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11750,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11751,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11752,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11753,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11754,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11755,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11756,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11757,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11758,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11759,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11760,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11761,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11762,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11763,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11764,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11765,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11766,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11767,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11768,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11769,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11770,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11771,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11772,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11773,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11774,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11775,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11749,11750,11751,11752,11753,11754,11755,11756,11757,11758,11759,11760,11761,11762,11763,11764,11765,11766,11767,11768,11769,11770,11771,11772,11773,11774,11775]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11776,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11777,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11778,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11779,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11780,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11781,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11782,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11783,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11784,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11785,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11786,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11787,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11788,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11789,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11790,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11791,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11792,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11793,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11794,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11795,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11796,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11797,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11798,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11799,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11800,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11801,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11802,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11803,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11804,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11778,11779,11780,11781,11782,11783,11784,11785,11786,11787,11788,11789,11790,11791,11792,11793,11794,11795,11796,11797,11798,11799,11800,11801,11802,11803,11804]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11805,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11806,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11807,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11808,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11809,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11810,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11811,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11812,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11813,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11814,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11815,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11816,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11817,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11818,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11819,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11820,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11821,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11822,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11823,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11824,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11825,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11826,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11827,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11828,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11829,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11830,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11831,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11832,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11833,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11807,11808,11809,11810,11811,11812,11813,11814,11815,11816,11817,11818,11819,11820,11821,11822,11823,11824,11825,11826,11827,11828,11829,11830,11831,11832,11833]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11834,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11835,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11836,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11837,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11838,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11839,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11840,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11841,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11842,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11843,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11844,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11845,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11846,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11847,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11848,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11849,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11850,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11851,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11852,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11853,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11854,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11855,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11856,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11857,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11858,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11859,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11860,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11861,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11862,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11836,11837,11838,11839,11840,11841,11842,11843,11844,11845,11846,11847,11848,11849,11850,11851,11852,11853,11854,11855,11856,11857,11858,11859,11860,11861,11862]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11863,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11864,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11865,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11866,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11867,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11868,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11869,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11870,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11871,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11872,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11873,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11874,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11875,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11876,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11877,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11878,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11879,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11880,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11881,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11882,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11883,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11884,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11885,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11886,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11887,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11888,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11889,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11890,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11891,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11865,11866,11867,11868,11869,11870,11871,11872,11873,11874,11875,11876,11877,11878,11879,11880,11881,11882,11883,11884,11885,11886,11887,11888,11889,11890,11891]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11892,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":11893,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11894,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11895,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11896,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11897,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11898,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11899,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11900,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11901,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11902,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11903,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11904,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11905,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11906,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11907,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11908,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11909,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11910,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11911,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11912,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11913,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11914,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11915,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11916,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11917,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11918,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11919,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11920,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11894,11895,11896,11897,11898,11899,11900,11901,11902,11903,11904,11905,11906,11907,11908,11909,11910,11911,11912,11913,11914,11915,11916,11917,11918,11919,11920]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11921,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11922,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11923,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11924,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11925,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11926,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11927,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11928,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11929,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11930,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11931,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11932,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11933,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11934,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11935,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11936,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11937,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11938,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11939,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11940,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11941,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11942,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11943,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11944,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11945,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11946,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11947,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11948,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11949,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11923,11924,11925,11926,11927,11928,11929,11930,11931,11932,11933,11934,11935,11936,11937,11938,11939,11940,11941,11942,11943,11944,11945,11946,11947,11948,11949]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11602,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11603,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11604,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11605,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11606,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11607,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11608,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11609,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11610,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11611,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11612,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11613,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11614,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11615,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11616,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11617,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11618,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11619,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11620,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11621,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11622,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11623,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11624,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11625,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11626,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11627,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11628,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11629,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":11630,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[11604,11605,11606,11607,11608,11609,11610,11611,11612,11613,11614,11615,11616,11617,11618,11619,11620,11621,11622,11623,11624,11625,11626,11627,11628,11629,11630]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[11457,11486,11515,11544,11573,11631,11660,11689,11718,11747,11776,11805,11834,11863,11892,11921,11602]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":11950,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":11951,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":11952,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11957,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11958,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11959,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11960,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11961,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11953,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11954,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11955,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11956,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[11957,11959,11960,11961,11953,11955]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":11962,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":11963,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":11964,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11965,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11966,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11967,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11968,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":11969,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11970,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11971,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11972,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[11971,11972]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11973,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":11974,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11975,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11976,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11977,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11978,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11979,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11980,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11981,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11982,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11983,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11984,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11985,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11986,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":11987,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11988,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":11989,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11990,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":11991,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":11992,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":11993,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":11994,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11995,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11996,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":11997,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":11998,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":11999,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12000,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[11999,12000]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12001,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[11995,11996,11997,12001]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":12002,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12003,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12004,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":12005,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12006,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12007,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[12007]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12008,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[12004,12005]},{"title":"Methods","children":[12008]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12009,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12010,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12011,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12012,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12013,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12014,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[12012,12013,12014]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12015,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12016,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12017,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12018,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12019,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12020,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12021,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12022,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12023,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[12017,12018,12020,12022]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12024,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12025,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12026,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12027,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12028,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[12027]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12029,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12030,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12031,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12032,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12033,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12034,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12035,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[12031,12033,12034,12035]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":12036,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":12037,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":12038,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":12039,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":12040,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":12041,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":12042,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":12043,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[11418,11419,11420,11421,11424,11427,11950,11951,11963,11964,11965,11966,11967,11969,11973,11974,11975,11976,11977,11979,11981,11982,11984,11985,11986,11987,11989,11990,11991,11992,11993,12002,12009,12010,12015,12024,12025,12029,12036,12037,12040,12042]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":10729,"name":"HeadRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[10730,12677,12680,12687,12697,12674,11414]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/HeadRequest.ts","line":34,"character":13}],"extendedTypes":[{"type":"reference","target":12699,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/HeadRequest","previousId":12699,"nextId":14042},{"id":14042,"name":"OptionsRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The OPTIONS method requests information about the communication\\noptions available for the target resource, at either the origin\\nserver or an intervening intermediary.  This method allows a client\\nto determine the options and/or requirements associated with a\\nresource, or the capabilities of a server, without implying a\\nresource action.\\n\\n## File download test\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, OptionsRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(OptionsRequest.to(\'/downloads/my-test-document.pdf\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Allow\'), equals(\'OPTIONS, GET, HEAD\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS\\n- https://tools.ietf.org/html/rfc7231#section-4.3.7"}]},"children":[{"id":14043,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":50,"character":11}],"signatures":[{"id":14044,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":50,"character":11}],"parameters":[{"id":14045,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":14042,"name":"OptionsRequest","package":"@serenity-js/rest"}}]},{"id":15990,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":15991,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":15992,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14021,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14020,"name":"HTTPRequest.describedAs"}},{"id":15993,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":15994,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":15995,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":15996,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15997,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":15998,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":15999,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14024,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14023,"name":"HTTPRequest.as"}},{"id":16000,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":16001,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":16002,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16003,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16004,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[16004]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14031,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14030,"name":"HTTPRequest.describedBy"}},{"id":16010,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":16011,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14041,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14040,"name":"HTTPRequest.toString"}},{"id":15987,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":15988,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":15989,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14018,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14017,"name":"HTTPRequest.answeredBy"}},{"id":14727,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":66,"character":4}],"signatures":[{"id":14728,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":66,"character":4}],"parameters":[{"id":14729,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reflection","declaration":{"id":14730,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14731,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":14732,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":14733,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":14734,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":14735,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":14736,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":14737,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":14738,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":14739,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":14740,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":14741,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14742,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14743,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14744,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14745,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14746,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14747,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14748,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14749,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14750,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14751,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14752,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14753,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14754,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14755,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14756,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14757,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14758,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14759,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14760,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14761,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14762,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14763,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14764,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14765,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14766,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14767,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14768,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[14742,14743,14744,14745,14746,14747,14748,14749,14750,14751,14752,14753,14754,14755,14756,14757,14758,14759,14760,14761,14762,14763,14764,14765,14766,14767,14768]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":14769,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14770,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":14771,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14772,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14773,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14774,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14775,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14776,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14777,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14778,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14779,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14780,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14781,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14782,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14783,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14784,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14785,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14786,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14787,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14788,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14789,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14790,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14791,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14792,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14793,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14794,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14795,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14796,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14797,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14798,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[14772,14773,14774,14775,14776,14777,14778,14779,14780,14781,14782,14783,14784,14785,14786,14787,14788,14789,14790,14791,14792,14793,14794,14795,14796,14797,14798]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":14799,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":14800,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14801,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14802,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14803,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14804,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14805,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14806,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14807,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14808,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14809,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14810,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14811,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14812,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14813,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14814,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14815,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14816,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14817,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14818,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14819,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14820,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14821,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14822,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14823,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14824,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14825,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14826,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14827,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[14801,14802,14803,14804,14805,14806,14807,14808,14809,14810,14811,14812,14813,14814,14815,14816,14817,14818,14819,14820,14821,14822,14823,14824,14825,14826,14827]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":14828,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":14829,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14830,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14831,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14832,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14833,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14834,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14835,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14836,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14837,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14838,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14839,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14840,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14841,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14842,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14843,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14844,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14845,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14846,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14847,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14848,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14849,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14850,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14851,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14852,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14853,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14854,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14855,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14856,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[14830,14831,14832,14833,14834,14835,14836,14837,14838,14839,14840,14841,14842,14843,14844,14845,14846,14847,14848,14849,14850,14851,14852,14853,14854,14855,14856]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":14857,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":14858,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14859,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14860,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14861,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14862,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14863,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14864,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14865,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14866,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14867,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14868,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14869,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14870,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14871,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14872,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14873,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14874,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14875,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14876,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14877,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14878,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14879,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14880,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14881,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14882,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14883,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14884,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14885,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[14859,14860,14861,14862,14863,14864,14865,14866,14867,14868,14869,14870,14871,14872,14873,14874,14875,14876,14877,14878,14879,14880,14881,14882,14883,14884,14885]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":14886,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":14887,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14888,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14889,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14890,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14891,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14892,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14893,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14894,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14895,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14896,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14897,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14898,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14899,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14900,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14901,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14902,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14903,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14904,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14905,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14906,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14907,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14908,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14909,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14910,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14911,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14912,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14913,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14914,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[14888,14889,14890,14891,14892,14893,14894,14895,14896,14897,14898,14899,14900,14901,14902,14903,14904,14905,14906,14907,14908,14909,14910,14911,14912,14913,14914]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":14944,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":14945,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14946,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14947,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14948,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14949,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14950,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14951,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14952,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14953,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14954,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14955,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14956,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14957,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14958,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14959,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14960,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14961,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14962,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14963,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14964,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14965,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14966,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14967,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14968,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14969,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14970,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14971,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14972,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[14946,14947,14948,14949,14950,14951,14952,14953,14954,14955,14956,14957,14958,14959,14960,14961,14962,14963,14964,14965,14966,14967,14968,14969,14970,14971,14972]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":14973,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":14974,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14975,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14976,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14977,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14978,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14979,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14980,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14981,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14982,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14983,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14984,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14985,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14986,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14987,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14988,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14989,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14990,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14991,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14992,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14993,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14994,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14995,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14996,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14997,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14998,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14999,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15000,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15001,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[14975,14976,14977,14978,14979,14980,14981,14982,14983,14984,14985,14986,14987,14988,14989,14990,14991,14992,14993,14994,14995,14996,14997,14998,14999,15000,15001]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15002,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15003,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15004,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15005,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15006,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15007,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15008,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15009,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15010,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15011,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15012,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15013,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15014,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15015,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15016,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15017,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15018,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15019,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15020,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15021,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15022,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15023,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15024,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15025,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15026,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15027,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15028,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15029,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15030,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15004,15005,15006,15007,15008,15009,15010,15011,15012,15013,15014,15015,15016,15017,15018,15019,15020,15021,15022,15023,15024,15025,15026,15027,15028,15029,15030]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15031,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15032,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15033,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15034,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15035,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15036,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15037,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15038,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15039,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15040,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15041,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15042,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15043,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15044,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15045,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15046,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15047,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15048,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15049,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15050,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15051,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15052,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15053,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15054,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15055,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15056,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15057,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15058,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15059,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15033,15034,15035,15036,15037,15038,15039,15040,15041,15042,15043,15044,15045,15046,15047,15048,15049,15050,15051,15052,15053,15054,15055,15056,15057,15058,15059]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15060,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15061,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15062,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15063,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15064,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15065,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15066,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15067,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15068,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15069,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15070,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15071,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15072,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15073,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15074,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15075,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15076,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15077,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15078,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15079,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15080,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15081,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15082,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15083,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15084,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15085,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15086,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15087,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15088,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15062,15063,15064,15065,15066,15067,15068,15069,15070,15071,15072,15073,15074,15075,15076,15077,15078,15079,15080,15081,15082,15083,15084,15085,15086,15087,15088]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15089,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15090,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15091,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15092,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15093,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15094,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15095,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15096,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15097,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15098,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15099,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15100,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15101,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15102,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15103,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15104,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15105,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15106,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15107,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15108,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15109,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15110,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15111,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15112,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15113,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15114,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15115,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15116,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15117,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15091,15092,15093,15094,15095,15096,15097,15098,15099,15100,15101,15102,15103,15104,15105,15106,15107,15108,15109,15110,15111,15112,15113,15114,15115,15116,15117]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15118,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15119,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15120,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15121,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15122,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15123,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15124,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15125,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15126,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15127,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15128,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15129,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15130,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15131,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15132,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15133,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15134,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15135,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15136,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15137,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15138,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15139,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15140,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15141,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15142,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15143,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15144,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15145,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15146,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15120,15121,15122,15123,15124,15125,15126,15127,15128,15129,15130,15131,15132,15133,15134,15135,15136,15137,15138,15139,15140,15141,15142,15143,15144,15145,15146]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15147,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15148,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15149,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15150,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15151,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15152,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15153,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15154,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15155,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15156,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15157,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15158,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15159,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15160,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15161,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15162,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15163,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15164,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15165,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15166,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15167,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15168,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15169,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15170,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15171,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15172,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15173,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15174,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15175,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15149,15150,15151,15152,15153,15154,15155,15156,15157,15158,15159,15160,15161,15162,15163,15164,15165,15166,15167,15168,15169,15170,15171,15172,15173,15174,15175]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15176,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15177,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15178,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15179,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15180,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15181,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15182,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15183,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15184,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15185,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15186,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15187,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15188,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15189,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15190,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15191,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15192,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15193,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15194,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15195,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15196,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15197,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15198,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15199,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15200,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15201,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15202,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15203,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15204,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15178,15179,15180,15181,15182,15183,15184,15185,15186,15187,15188,15189,15190,15191,15192,15193,15194,15195,15196,15197,15198,15199,15200,15201,15202,15203,15204]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15205,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":15206,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15207,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15208,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15209,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15210,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15211,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15212,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15213,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15214,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15215,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15216,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15217,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15218,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15219,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15220,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15221,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15222,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15223,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15224,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15225,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15226,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15227,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15228,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15229,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15230,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15231,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15232,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15233,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15207,15208,15209,15210,15211,15212,15213,15214,15215,15216,15217,15218,15219,15220,15221,15222,15223,15224,15225,15226,15227,15228,15229,15230,15231,15232,15233]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15234,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15235,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15236,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15237,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15238,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15239,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15240,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15241,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15242,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15243,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15244,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15245,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15246,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15247,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15248,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15249,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15250,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15251,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15252,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15253,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15254,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15255,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15256,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15257,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15258,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15259,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15260,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15261,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":15262,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[15236,15237,15238,15239,15240,15241,15242,15243,15244,15245,15246,15247,15248,15249,15250,15251,15252,15253,15254,15255,15256,15257,15258,15259,15260,15261,15262]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":14915,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":14916,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":14917,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14918,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14919,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14920,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14921,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14922,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14923,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14924,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14925,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14926,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14927,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14928,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14929,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14930,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14931,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14932,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14933,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14934,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14935,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14936,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14937,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14938,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14939,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14940,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14941,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14942,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":14943,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[14917,14918,14919,14920,14921,14922,14923,14924,14925,14926,14927,14928,14929,14930,14931,14932,14933,14934,14935,14936,14937,14938,14939,14940,14941,14942,14943]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[14770,14799,14828,14857,14886,14944,14973,15002,15031,15060,15089,15118,15147,15176,15205,15234,14915]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":15263,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":15264,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":15265,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15270,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15271,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15272,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15273,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15274,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15266,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15267,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15268,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15269,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[15270,15272,15273,15274,15266,15268]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":15275,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":15276,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":15277,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15278,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15279,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15280,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15281,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":15282,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15283,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15284,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15285,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[15284,15285]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15286,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15287,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15288,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15289,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15290,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15291,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15292,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15293,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15294,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15295,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15296,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15297,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15298,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15299,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":15300,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15301,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15302,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15303,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":15304,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":15305,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":15306,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15307,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15308,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15309,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15310,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15311,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15312,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15313,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[15312,15313]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15314,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[15308,15309,15310,15314]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":15315,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15316,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15317,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":15318,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15319,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15320,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[15320]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15321,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[15317,15318]},{"title":"Methods","children":[15321]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15322,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15323,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15324,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15325,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15326,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15327,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[15325,15326,15327]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15328,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15329,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15330,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15331,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15332,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15333,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15334,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15335,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15336,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[15330,15331,15333,15335]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15337,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15338,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15339,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15340,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15341,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[15340]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15342,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15343,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":15344,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15345,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15346,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15347,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15348,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[15344,15346,15347,15348]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":15349,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":15350,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":15351,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":15352,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":15353,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":15354,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":15355,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":15356,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[14731,14732,14733,14734,14737,14740,15263,15264,15276,15277,15278,15279,15280,15282,15286,15287,15288,15289,15290,15292,15294,15295,15297,15298,15299,15300,15302,15303,15304,15305,15306,15315,15322,15323,15328,15337,15338,15342,15349,15350,15353,15355]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":14042,"name":"OptionsRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[14043,15990,15993,16000,16010,15987,14727]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/OptionsRequest.ts","line":37,"character":13}],"extendedTypes":[{"type":"reference","target":12699,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/OptionsRequest","previousId":10729,"nextId":16012},{"id":16012,"name":"PatchRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The PATCH method requests that a set of changes described in the\\nrequest entity be applied to the resource identified by the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":".\\n\\n## Add new resource to a collection\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse, PatchRequest, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PatchRequest.to(\'/books/0-688-00230-7\').with({\\n      lastReadOn: \'2016-06-16\',\\n    })),\\n    Ensure.that(LastResponse.status(), equals(204)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH\\n- https://tools.ietf.org/html/rfc5789"}]},"children":[{"id":16013,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":47,"character":11}],"signatures":[{"id":16014,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":47,"character":11}],"parameters":[{"id":16015,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":16012,"name":"PatchRequest","package":"@serenity-js/rest"}}]},{"id":17963,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":17964,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":17965,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14021,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14020,"name":"HTTPRequest.describedAs"}},{"id":17966,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":17967,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":17968,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":17969,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17970,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":17971,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":17972,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14024,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14023,"name":"HTTPRequest.as"}},{"id":17973,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":17974,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":17975,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17976,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17977,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[17977]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14031,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14030,"name":"HTTPRequest.describedBy"}},{"id":17983,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":17984,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14041,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14040,"name":"HTTPRequest.toString"}},{"id":17960,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":17961,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":17962,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14018,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14017,"name":"HTTPRequest.answeredBy"}},{"id":16697,"name":"with","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":57,"character":4}],"signatures":[{"id":16698,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a request body."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":57,"character":4}],"parameters":[{"id":16699,"name":"data","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Data to be sent to the "},{"kind":"code","text":"`resourceUri`"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":16012,"name":"PatchRequest","package":"@serenity-js/rest"}}]},{"id":16700,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":73,"character":4}],"signatures":[{"id":16701,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":73,"character":4}],"parameters":[{"id":16702,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reflection","declaration":{"id":16703,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16704,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16705,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16706,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":16707,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":16708,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":16709,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":16710,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":16711,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":16712,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":16713,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":16714,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16715,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16716,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16717,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16718,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16719,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16720,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16721,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16722,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16723,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16724,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16725,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16726,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16727,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16728,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16729,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16730,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16731,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16732,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16733,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16734,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16735,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16736,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16737,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16738,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16739,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16740,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16741,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16715,16716,16717,16718,16719,16720,16721,16722,16723,16724,16725,16726,16727,16728,16729,16730,16731,16732,16733,16734,16735,16736,16737,16738,16739,16740,16741]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":16742,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16743,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16744,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16745,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16746,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16747,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16748,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16749,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16750,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16751,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16752,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16753,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16754,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16755,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16756,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16757,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16758,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16759,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16760,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16761,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16762,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16763,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16764,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16765,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16766,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16767,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16768,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16769,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16770,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16771,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16745,16746,16747,16748,16749,16750,16751,16752,16753,16754,16755,16756,16757,16758,16759,16760,16761,16762,16763,16764,16765,16766,16767,16768,16769,16770,16771]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":16772,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16773,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16774,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16775,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16776,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16777,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16778,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16779,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16780,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16781,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16782,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16783,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16784,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16785,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16786,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16787,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16788,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16789,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16790,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16791,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16792,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16793,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16794,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16795,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16796,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16797,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16798,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16799,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16800,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16774,16775,16776,16777,16778,16779,16780,16781,16782,16783,16784,16785,16786,16787,16788,16789,16790,16791,16792,16793,16794,16795,16796,16797,16798,16799,16800]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":16801,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16802,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16803,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16804,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16805,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16806,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16807,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16808,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16809,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16810,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16811,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16812,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16813,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16814,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16815,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16816,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16817,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16818,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16819,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16820,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16821,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16822,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16823,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16824,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16825,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16826,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16827,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16828,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16829,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16803,16804,16805,16806,16807,16808,16809,16810,16811,16812,16813,16814,16815,16816,16817,16818,16819,16820,16821,16822,16823,16824,16825,16826,16827,16828,16829]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":16830,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16831,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16832,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16833,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16834,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16835,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16836,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16837,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16838,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16839,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16840,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16841,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16842,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16843,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16844,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16845,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16846,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16847,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16848,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16849,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16850,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16851,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16852,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16853,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16854,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16855,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16856,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16857,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16858,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16832,16833,16834,16835,16836,16837,16838,16839,16840,16841,16842,16843,16844,16845,16846,16847,16848,16849,16850,16851,16852,16853,16854,16855,16856,16857,16858]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":16859,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16860,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16861,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16862,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16863,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16864,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16865,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16866,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16867,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16868,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16869,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16870,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16871,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16872,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16873,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16874,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16875,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16876,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16877,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16878,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16879,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16880,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16881,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16882,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16883,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16884,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16885,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16886,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16887,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16861,16862,16863,16864,16865,16866,16867,16868,16869,16870,16871,16872,16873,16874,16875,16876,16877,16878,16879,16880,16881,16882,16883,16884,16885,16886,16887]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":16917,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":16918,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16919,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16920,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16921,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16922,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16923,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16924,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16925,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16926,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16927,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16928,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16929,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16930,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16931,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16932,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16933,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16934,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16935,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16936,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16937,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16938,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16939,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16940,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16941,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16942,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16943,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16944,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16945,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16919,16920,16921,16922,16923,16924,16925,16926,16927,16928,16929,16930,16931,16932,16933,16934,16935,16936,16937,16938,16939,16940,16941,16942,16943,16944,16945]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16946,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":16947,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16948,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16949,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16950,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16951,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16952,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16953,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16954,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16955,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16956,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16957,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16958,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16959,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16960,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16961,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16962,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16963,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16964,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16965,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16966,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16967,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16968,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16969,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16970,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16971,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16972,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16973,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16974,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16948,16949,16950,16951,16952,16953,16954,16955,16956,16957,16958,16959,16960,16961,16962,16963,16964,16965,16966,16967,16968,16969,16970,16971,16972,16973,16974]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16975,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":16976,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16977,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16978,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16979,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16980,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16981,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16982,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16983,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16984,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16985,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16986,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16987,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16988,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16989,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16990,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16991,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16992,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16993,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16994,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16995,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16996,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16997,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16998,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16999,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17000,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17001,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17002,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17003,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16977,16978,16979,16980,16981,16982,16983,16984,16985,16986,16987,16988,16989,16990,16991,16992,16993,16994,16995,16996,16997,16998,16999,17000,17001,17002,17003]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17004,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17005,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17006,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17007,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17008,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17009,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17010,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17011,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17012,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17013,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17014,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17015,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17016,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17017,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17018,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17019,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17020,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17021,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17022,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17023,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17024,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17025,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17026,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17027,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17028,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17029,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17030,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17031,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17032,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17006,17007,17008,17009,17010,17011,17012,17013,17014,17015,17016,17017,17018,17019,17020,17021,17022,17023,17024,17025,17026,17027,17028,17029,17030,17031,17032]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17033,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17034,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17035,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17036,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17037,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17038,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17039,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17040,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17041,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17042,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17043,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17044,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17045,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17046,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17047,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17048,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17049,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17050,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17051,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17052,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17053,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17054,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17055,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17056,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17057,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17058,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17059,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17060,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17061,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17035,17036,17037,17038,17039,17040,17041,17042,17043,17044,17045,17046,17047,17048,17049,17050,17051,17052,17053,17054,17055,17056,17057,17058,17059,17060,17061]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17062,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17063,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17064,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17065,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17066,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17067,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17068,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17069,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17070,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17071,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17072,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17073,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17074,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17075,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17076,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17077,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17078,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17079,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17080,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17081,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17082,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17083,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17084,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17085,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17086,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17087,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17088,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17089,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17090,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17064,17065,17066,17067,17068,17069,17070,17071,17072,17073,17074,17075,17076,17077,17078,17079,17080,17081,17082,17083,17084,17085,17086,17087,17088,17089,17090]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17091,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17092,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17093,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17094,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17095,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17096,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17097,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17098,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17099,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17100,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17101,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17102,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17103,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17104,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17105,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17106,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17107,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17108,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17109,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17110,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17111,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17112,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17113,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17114,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17115,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17116,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17117,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17118,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17119,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17093,17094,17095,17096,17097,17098,17099,17100,17101,17102,17103,17104,17105,17106,17107,17108,17109,17110,17111,17112,17113,17114,17115,17116,17117,17118,17119]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17120,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17121,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17122,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17123,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17124,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17125,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17126,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17127,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17128,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17129,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17130,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17131,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17132,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17133,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17134,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17135,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17136,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17137,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17138,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17139,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17140,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17141,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17142,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17143,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17144,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17145,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17146,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17147,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17148,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17122,17123,17124,17125,17126,17127,17128,17129,17130,17131,17132,17133,17134,17135,17136,17137,17138,17139,17140,17141,17142,17143,17144,17145,17146,17147,17148]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17149,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17150,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17151,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17152,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17153,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17154,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17155,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17156,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17157,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17158,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17159,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17160,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17161,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17162,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17163,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17164,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17165,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17166,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17167,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17168,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17169,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17170,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17171,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17172,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17173,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17174,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17175,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17176,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17177,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17151,17152,17153,17154,17155,17156,17157,17158,17159,17160,17161,17162,17163,17164,17165,17166,17167,17168,17169,17170,17171,17172,17173,17174,17175,17176,17177]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17178,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":17179,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17180,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17181,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17182,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17183,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17184,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17185,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17186,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17187,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17188,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17189,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17190,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17191,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17192,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17193,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17194,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17195,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17196,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17197,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17198,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17199,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17200,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17201,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17202,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17203,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17204,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17205,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17206,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17180,17181,17182,17183,17184,17185,17186,17187,17188,17189,17190,17191,17192,17193,17194,17195,17196,17197,17198,17199,17200,17201,17202,17203,17204,17205,17206]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17207,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17208,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17209,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17210,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17211,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17212,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17213,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17214,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17215,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17216,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17217,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17218,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17219,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17220,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17221,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17222,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17223,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17224,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17225,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17226,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17227,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17228,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17229,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17230,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17231,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17232,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17233,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17234,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":17235,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[17209,17210,17211,17212,17213,17214,17215,17216,17217,17218,17219,17220,17221,17222,17223,17224,17225,17226,17227,17228,17229,17230,17231,17232,17233,17234,17235]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":16888,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":16889,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":16890,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16891,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16892,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16893,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16894,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16895,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16896,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16897,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16898,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16899,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16900,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16901,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16902,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16903,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16904,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16905,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16906,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16907,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16908,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16909,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16910,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16911,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16912,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16913,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16914,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16915,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":16916,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[16890,16891,16892,16893,16894,16895,16896,16897,16898,16899,16900,16901,16902,16903,16904,16905,16906,16907,16908,16909,16910,16911,16912,16913,16914,16915,16916]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[16743,16772,16801,16830,16859,16917,16946,16975,17004,17033,17062,17091,17120,17149,17178,17207,16888]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":17236,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":17237,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":17238,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17243,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17244,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17245,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17246,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17247,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17239,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17240,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17241,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17242,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[17243,17245,17246,17247,17239,17241]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":17248,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":17249,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":17250,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17251,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17252,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17253,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17254,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":17255,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17256,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17257,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17258,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[17257,17258]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17259,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17260,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17261,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17262,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17263,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17264,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17265,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17266,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17267,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17268,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17269,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17270,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17271,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17272,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":17273,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17274,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17275,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17276,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":17277,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":17278,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":17279,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17280,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17281,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17282,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17283,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17284,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17285,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17286,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[17285,17286]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17287,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[17281,17282,17283,17287]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":17288,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17289,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17290,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":17291,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17292,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17293,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[17293]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17294,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[17290,17291]},{"title":"Methods","children":[17294]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17295,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17296,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17297,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17298,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17299,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17300,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[17298,17299,17300]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17301,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17302,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17303,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17304,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17305,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17306,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17307,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17308,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17309,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[17303,17304,17306,17308]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17310,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17311,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17312,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17313,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17314,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[17313]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17315,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17316,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":17317,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17318,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17319,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17320,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17321,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[17317,17319,17320,17321]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":17322,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":17323,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":17324,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":17325,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":17326,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":17327,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":17328,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":17329,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[16704,16705,16706,16707,16710,16713,17236,17237,17249,17250,17251,17252,17253,17255,17259,17260,17261,17262,17263,17265,17267,17268,17270,17271,17272,17273,17275,17276,17277,17278,17279,17288,17295,17296,17301,17310,17311,17315,17322,17323,17326,17328]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":16012,"name":"PatchRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[16013,17963,17966,17973,17983,17960,16697,16700]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/PatchRequest.ts","line":34,"character":13}],"extendedTypes":[{"type":"reference","target":12699,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/PatchRequest","previousId":14042,"nextId":17985},{"id":17985,"name":"PostRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The HTTP POST method requests that the origin server accepts\\nthe entity enclosed in the request as a new subordinate of the resource\\nidentified by the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":".\\n\\nThis means that the POST should be used when you want to create a child resource under\\na collection of resources.\\n\\nPOST request is neither [safe](https://developer.mozilla.org/en-US/docs/Glossary/Safe),\\nnor [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent).\\nThis means that if you retry a POST request N times,\\na correctly implemented HTTP REST API will create N resources with N different URIs.\\n\\n## Add new resource to a collection\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse, PostRequest, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PostRequest.to(\'/books\').with({\\n      isbn: \'0-688-00230-7\',\\n      title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n      author: \'Robert M. Pirsig\',\\n    })),\\n    Ensure.that(LastResponse.status(), equals(201)),\\n    Ensure.that(LastResponse.header(\'Location\'), equals(\'/books/0-688-00230-7\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Submit an HTML form\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse, PostRequest, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { stringify } from \'querystring\'\\n\\nconst formData = stringify({\\n    name: actor.name,\\n    email: `${ actor.name }@example.com`,\\n    text: \'Your website is great! Learnt a lot :-)\'\\n});\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PostRequest.to(\'/feedback\').with(formData).using({\\n      headers: {\\n        \'Content-Type\': \'application/x-www-form-urlencoded\',\\n        \'Content-Length\': formData.length\\n      }\\n    })),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Location\'), equals(\'/feedback/thank-you.html\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST\\n- https://tools.ietf.org/html/rfc7231#section-4.3.3"}]},"children":[{"id":17986,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":87,"character":11}],"signatures":[{"id":17987,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":87,"character":11}],"parameters":[{"id":17988,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":17985,"name":"PostRequest","package":"@serenity-js/rest"}}]},{"id":19936,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":19937,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":19938,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14021,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14020,"name":"HTTPRequest.describedAs"}},{"id":19939,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":19940,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":19941,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":19942,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19943,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":19944,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":19945,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14024,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14023,"name":"HTTPRequest.as"}},{"id":19946,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":19947,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":19948,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19949,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19950,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[19950]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14031,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14030,"name":"HTTPRequest.describedBy"}},{"id":19956,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":19957,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14041,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14040,"name":"HTTPRequest.toString"}},{"id":19933,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":19934,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":19935,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14018,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14017,"name":"HTTPRequest.answeredBy"}},{"id":18670,"name":"with","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":97,"character":4}],"signatures":[{"id":18671,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a request body."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":97,"character":4}],"parameters":[{"id":18672,"name":"data","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Data to be sent to the "},{"kind":"code","text":"`resourceUri`"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":17985,"name":"PostRequest","package":"@serenity-js/rest"}}]},{"id":18673,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":113,"character":4}],"signatures":[{"id":18674,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":113,"character":4}],"parameters":[{"id":18675,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reflection","declaration":{"id":18676,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18677,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":18678,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":18679,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":18680,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":18681,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":18682,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":18683,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":18684,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":18685,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":18686,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":18687,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18688,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18689,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18690,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18691,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18692,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18693,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18694,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18695,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18696,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18697,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18698,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18699,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18700,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18701,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18702,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18703,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18704,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18705,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18706,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18707,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18708,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18709,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18710,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18711,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18712,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18713,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18714,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18688,18689,18690,18691,18692,18693,18694,18695,18696,18697,18698,18699,18700,18701,18702,18703,18704,18705,18706,18707,18708,18709,18710,18711,18712,18713,18714]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":18715,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18716,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18717,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18718,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18719,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18720,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18721,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18722,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18723,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18724,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18725,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18726,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18727,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18728,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18729,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18730,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18731,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18732,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18733,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18734,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18735,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18736,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18737,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18738,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18739,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18740,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18741,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18742,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18743,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18744,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18718,18719,18720,18721,18722,18723,18724,18725,18726,18727,18728,18729,18730,18731,18732,18733,18734,18735,18736,18737,18738,18739,18740,18741,18742,18743,18744]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":18745,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18746,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18747,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18748,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18749,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18750,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18751,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18752,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18753,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18754,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18755,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18756,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18757,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18758,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18759,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18760,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18761,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18762,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18763,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18764,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18765,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18766,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18767,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18768,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18769,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18770,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18771,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18772,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18773,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18747,18748,18749,18750,18751,18752,18753,18754,18755,18756,18757,18758,18759,18760,18761,18762,18763,18764,18765,18766,18767,18768,18769,18770,18771,18772,18773]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":18774,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18775,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18776,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18777,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18778,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18779,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18780,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18781,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18782,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18783,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18784,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18785,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18786,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18787,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18788,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18789,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18790,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18791,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18792,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18793,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18794,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18795,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18796,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18797,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18798,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18799,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18800,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18801,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18802,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18776,18777,18778,18779,18780,18781,18782,18783,18784,18785,18786,18787,18788,18789,18790,18791,18792,18793,18794,18795,18796,18797,18798,18799,18800,18801,18802]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":18803,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18804,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18805,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18806,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18807,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18808,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18809,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18810,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18811,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18812,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18813,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18814,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18815,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18816,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18817,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18818,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18819,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18820,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18821,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18822,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18823,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18824,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18825,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18826,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18827,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18828,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18829,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18830,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18831,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18805,18806,18807,18808,18809,18810,18811,18812,18813,18814,18815,18816,18817,18818,18819,18820,18821,18822,18823,18824,18825,18826,18827,18828,18829,18830,18831]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":18832,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18833,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18834,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18835,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18836,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18837,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18838,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18839,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18840,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18841,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18842,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18843,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18844,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18845,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18846,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18847,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18848,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18849,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18850,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18851,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18852,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18853,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18854,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18855,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18856,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18857,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18858,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18859,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18860,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18834,18835,18836,18837,18838,18839,18840,18841,18842,18843,18844,18845,18846,18847,18848,18849,18850,18851,18852,18853,18854,18855,18856,18857,18858,18859,18860]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":18890,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18891,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18892,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18893,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18894,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18895,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18896,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18897,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18898,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18899,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18900,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18901,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18902,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18903,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18904,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18905,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18906,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18907,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18908,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18909,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18910,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18911,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18912,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18913,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18914,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18915,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18916,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18917,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18918,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18892,18893,18894,18895,18896,18897,18898,18899,18900,18901,18902,18903,18904,18905,18906,18907,18908,18909,18910,18911,18912,18913,18914,18915,18916,18917,18918]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":18919,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18920,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18921,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18922,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18923,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18924,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18925,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18926,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18927,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18928,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18929,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18930,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18931,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18932,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18933,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18934,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18935,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18936,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18937,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18938,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18939,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18940,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18941,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18942,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18943,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18944,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18945,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18946,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18947,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18921,18922,18923,18924,18925,18926,18927,18928,18929,18930,18931,18932,18933,18934,18935,18936,18937,18938,18939,18940,18941,18942,18943,18944,18945,18946,18947]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":18948,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18949,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18950,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18951,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18952,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18953,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18954,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18955,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18956,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18957,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18958,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18959,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18960,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18961,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18962,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18963,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18964,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18965,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18966,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18967,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18968,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18969,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18970,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18971,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18972,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18973,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18974,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18975,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18976,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18950,18951,18952,18953,18954,18955,18956,18957,18958,18959,18960,18961,18962,18963,18964,18965,18966,18967,18968,18969,18970,18971,18972,18973,18974,18975,18976]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":18977,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":18978,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18979,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18980,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18981,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18982,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18983,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18984,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18985,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18986,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18987,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18988,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18989,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18990,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18991,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18992,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18993,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18994,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18995,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18996,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18997,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18998,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18999,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19000,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19001,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19002,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19003,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19004,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19005,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18979,18980,18981,18982,18983,18984,18985,18986,18987,18988,18989,18990,18991,18992,18993,18994,18995,18996,18997,18998,18999,19000,19001,19002,19003,19004,19005]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19006,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19007,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19008,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19009,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19010,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19011,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19012,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19013,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19014,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19015,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19016,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19017,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19018,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19019,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19020,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19021,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19022,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19023,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19024,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19025,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19026,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19027,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19028,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19029,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19030,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19031,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19032,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19033,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19034,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19008,19009,19010,19011,19012,19013,19014,19015,19016,19017,19018,19019,19020,19021,19022,19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19035,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19036,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19037,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19038,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19039,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19040,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19041,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19042,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19043,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19044,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19045,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19046,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19047,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19048,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19049,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19050,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19051,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19052,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19053,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19054,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19055,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19056,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19057,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19058,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19059,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19060,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19061,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19062,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19063,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053,19054,19055,19056,19057,19058,19059,19060,19061,19062,19063]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19064,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19065,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19066,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19067,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19068,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19069,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19070,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19071,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19072,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19073,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19074,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19075,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19076,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19077,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19078,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19079,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19080,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19081,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19082,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19083,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19084,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19085,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19086,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19087,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19088,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19089,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19090,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19091,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19092,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19066,19067,19068,19069,19070,19071,19072,19073,19074,19075,19076,19077,19078,19079,19080,19081,19082,19083,19084,19085,19086,19087,19088,19089,19090,19091,19092]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19093,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19094,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19095,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19096,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19097,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19098,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19099,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19100,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19101,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19102,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19103,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19104,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19105,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19106,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19107,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19108,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19109,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19110,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19111,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19112,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19113,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19114,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19115,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19116,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19117,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19118,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19119,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19120,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19121,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19095,19096,19097,19098,19099,19100,19101,19102,19103,19104,19105,19106,19107,19108,19109,19110,19111,19112,19113,19114,19115,19116,19117,19118,19119,19120,19121]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19122,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19123,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19124,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19125,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19126,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19127,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19128,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19129,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19130,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19131,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19132,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19133,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19134,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19135,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19136,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19137,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19138,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19139,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19140,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19141,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19142,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19143,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19144,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19145,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19146,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19147,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19148,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19149,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19150,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19124,19125,19126,19127,19128,19129,19130,19131,19132,19133,19134,19135,19136,19137,19138,19139,19140,19141,19142,19143,19144,19145,19146,19147,19148,19149,19150]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19151,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":19152,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19153,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19154,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19155,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19156,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19157,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19158,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19159,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19160,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19161,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19162,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19163,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19164,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19165,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19166,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19167,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19168,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19169,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19170,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19171,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19172,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19173,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19174,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19175,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19176,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19177,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19178,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19179,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19153,19154,19155,19156,19157,19158,19159,19160,19161,19162,19163,19164,19165,19166,19167,19168,19169,19170,19171,19172,19173,19174,19175,19176,19177,19178,19179]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19180,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19181,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19182,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19183,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19184,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19185,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19186,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19187,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19188,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19189,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19190,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19191,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19192,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19193,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19194,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19195,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19196,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19197,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19198,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19199,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19200,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19201,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19202,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19203,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19204,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19205,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19206,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19207,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":19208,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[19182,19183,19184,19185,19186,19187,19188,19189,19190,19191,19192,19193,19194,19195,19196,19197,19198,19199,19200,19201,19202,19203,19204,19205,19206,19207,19208]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":18861,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":18862,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":18863,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18864,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18865,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18866,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18867,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18868,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18869,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18870,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18871,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18872,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18873,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18874,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18875,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18876,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18877,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18878,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18879,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18880,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18881,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18882,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18883,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18884,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18885,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18886,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18887,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18888,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":18889,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[18863,18864,18865,18866,18867,18868,18869,18870,18871,18872,18873,18874,18875,18876,18877,18878,18879,18880,18881,18882,18883,18884,18885,18886,18887,18888,18889]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[18716,18745,18774,18803,18832,18890,18919,18948,18977,19006,19035,19064,19093,19122,19151,19180,18861]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19209,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19210,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":19211,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19216,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19217,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19218,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19219,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19220,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19212,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19213,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19214,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19215,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[19216,19218,19219,19220,19212,19214]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":19221,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19222,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19223,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19224,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19225,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19226,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19227,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":19228,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19229,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19230,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19231,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19230,19231]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19232,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19233,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19234,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19235,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19236,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19237,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19238,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19239,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19240,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19241,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19242,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19243,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19244,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19245,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":19246,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19247,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19248,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19249,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19250,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19251,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":19252,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19253,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19254,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19255,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19256,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19257,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19258,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19259,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19258,19259]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19260,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19254,19255,19256,19260]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19261,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19262,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19263,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":19264,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19265,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19266,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[19266]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19267,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[19263,19264]},{"title":"Methods","children":[19267]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19268,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19269,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19270,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19271,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19272,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19273,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[19271,19272,19273]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19274,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19275,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19276,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19277,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19278,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19279,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19280,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19281,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19282,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[19276,19277,19279,19281]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19283,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19284,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19285,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19286,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19287,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[19286]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19288,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19289,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":19290,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19291,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19292,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19293,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19294,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[19290,19292,19293,19294]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":19295,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":19296,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":19297,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":19298,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19299,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":19300,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":19301,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":19302,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[18677,18678,18679,18680,18683,18686,19209,19210,19222,19223,19224,19225,19226,19228,19232,19233,19234,19235,19236,19238,19240,19241,19243,19244,19245,19246,19248,19249,19250,19251,19252,19261,19268,19269,19274,19283,19284,19288,19295,19296,19299,19301]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":17985,"name":"PostRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[17986,19936,19939,19946,19956,19933,18670,18673]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/PostRequest.ts","line":74,"character":13}],"extendedTypes":[{"type":"reference","target":12699,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/PostRequest","previousId":16012,"nextId":19958},{"id":19958,"name":"PutRequest","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The PUT method requests that the state of the target resource be\\ncreated or replaced with the state defined by the representation\\nenclosed in the request message payload.\\n\\nPUT request should be used when you want to create\\na new resource at a known "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" (e.g. "},{"kind":"code","text":"`/books/0-688-00230-7`"},{"kind":"text","text":")\\nor replace an existing resource at such "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":".\\n\\nPUT request is [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent):\\ncalling it once or several times successively has the same effect (that is no _side effect_).\\n\\n## Create a new resource at a known location\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { CallAnApi, LastResponse, PutRequest, Send } from \'@serenity-js/rest\';\\nimport { Ensure, equals } from \'@serenity-js/assertions\';\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PutRequest.to(\'/books/0-688-00230-7\').with({\\n      isbn: \'0-688-00230-7\',\\n      title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n      author: \'Robert M. Pirsig\',\\n    })),\\n    Ensure.that(LastResponse.status(), equals(201)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT\\n- https://tools.ietf.org/html/rfc7231#section-4.3.4"}]},"children":[{"id":19959,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":57,"character":11}],"signatures":[{"id":19960,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":57,"character":11}],"parameters":[{"id":19961,"name":"resourceUri","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URI where the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should send the ["},{"kind":"code","text":"`HTTPRequest`"},{"kind":"text","text":"](/api/rest/class/HTTPRequest/)"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":19958,"name":"PutRequest","package":"@serenity-js/rest"}}]},{"id":21909,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":21910,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":21911,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":14021,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","target":14020,"name":"HTTPRequest.describedAs"}},{"id":21912,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":21913,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":21914,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":21915,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21916,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":21917,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":21918,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":14024,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","target":14023,"name":"HTTPRequest.as"}},{"id":21919,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":21920,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":21921,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21922,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21923,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[21923]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14031,"name":"HTTPRequest.describedBy"}}],"inheritedFrom":{"type":"reference","target":14030,"name":"HTTPRequest.describedBy"}},{"id":21929,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":21930,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":14041,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","target":14040,"name":"HTTPRequest.toString"}},{"id":21906,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"signatures":[{"id":21907,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/HTTPRequest.ts","line":36,"character":4}],"parameters":[{"id":21908,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosRequestConfig"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","package":"axios"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":14018,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","target":14017,"name":"HTTPRequest.answeredBy"}},{"id":20643,"name":"with","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":67,"character":4}],"signatures":[{"id":20644,"name":"with","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the object with a request body."}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":67,"character":4}],"parameters":[{"id":20645,"name":"data","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Data to be sent to the "},{"kind":"code","text":"`resourceUri`"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":19958,"name":"PutRequest","package":"@serenity-js/rest"}}]},{"id":20646,"name":"using","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":83,"character":4}],"signatures":[{"id":20647,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/) was instantiated.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable)\\n- ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties)\\n- [AxiosRequestConfig](https://axios-http.com/docs/req_config)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":83,"character":4}],"parameters":[{"id":20648,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reflection","declaration":{"id":20649,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20650,"name":"url","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":20651,"name":"method","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":20652,"name":"baseURL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":20653,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":20654,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":20655,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":20656,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":20657,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reflection","declaration":{"id":20658,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}]}},{"id":20659,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":20660,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20661,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20662,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20663,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20664,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20665,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20666,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20667,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20668,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20669,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20670,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20671,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20672,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20673,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20674,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20675,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20676,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20677,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20678,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20679,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20680,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20681,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20682,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20683,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20684,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20685,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20686,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20687,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20661,20662,20663,20664,20665,20666,20667,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20687]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":20688,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20689,"name":"Accept","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20690,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20691,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20692,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20693,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20694,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20695,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20696,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20697,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20698,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20699,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20700,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20701,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20702,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20703,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20704,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20705,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20706,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20707,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20708,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20709,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20710,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20711,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20712,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20713,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20714,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20715,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20716,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20717,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20691,20692,20693,20694,20695,20696,20697,20698,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20710,20711,20712,20713,20714,20715,20716,20717]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":20718,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20719,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20720,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20721,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20722,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20723,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20724,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20725,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20726,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20727,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20728,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20729,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20730,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20731,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20732,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20733,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20734,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20735,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20736,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20737,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20738,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20739,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20740,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20741,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20742,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20743,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20744,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20745,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20746,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20720,20721,20722,20723,20724,20725,20726,20727,20728,20729,20730,20731,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20742,20743,20744,20745,20746]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":20747,"name":"User-Agent","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20748,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20749,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20750,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20751,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20752,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20753,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20754,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20755,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20756,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20757,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20758,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20759,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20760,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20761,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20762,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20763,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20764,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20765,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20766,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20767,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20768,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20769,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20770,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20771,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20772,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20773,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20774,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20775,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20749,20750,20751,20752,20753,20754,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20769,20770,20771,20772,20773,20774,20775]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":20776,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20777,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20778,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20779,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20780,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20781,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20782,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20783,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20784,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20785,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20786,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20787,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20788,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20789,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20790,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20791,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20792,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20793,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20794,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20795,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20796,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20797,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20798,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20799,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20800,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20801,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20802,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20803,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20804,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20799,20800,20801,20802,20803,20804]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":20805,"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20806,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20807,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20808,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20809,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20810,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20811,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20812,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20813,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20814,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20815,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20816,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20817,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20818,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20819,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20820,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20821,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20822,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20823,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20824,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20825,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20826,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20827,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20828,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20829,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20830,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20831,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20832,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20833,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20807,20808,20809,20810,20811,20812,20813,20814,20815,20816,20817,20818,20819,20820,20821,20822,20823,20824,20825,20826,20827,20828,20829,20830,20831,20832,20833]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}},{"id":20863,"name":"link","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":20864,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20865,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20866,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20867,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20868,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20869,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20870,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20871,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20872,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20873,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20874,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20875,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20876,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20877,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20878,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20879,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20880,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20881,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20882,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20883,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20884,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20885,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20886,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20887,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20888,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20889,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20890,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20891,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20865,20866,20867,20868,20869,20870,20871,20872,20873,20874,20875,20876,20877,20878,20879,20880,20881,20882,20883,20884,20885,20886,20887,20888,20889,20890,20891]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":20892,"name":"delete","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":20893,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20894,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20895,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20896,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20897,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20898,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20899,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20900,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20901,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20902,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20903,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20904,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20905,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20906,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20907,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20908,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20909,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20910,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20911,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20912,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20913,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20914,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20915,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20916,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20917,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20918,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20919,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20920,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20894,20895,20896,20897,20898,20899,20900,20901,20902,20903,20904,20905,20906,20907,20908,20909,20910,20911,20912,20913,20914,20915,20916,20917,20918,20919,20920]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":20921,"name":"get","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":20922,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20923,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20924,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20925,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20926,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20927,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20928,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20929,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20930,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20931,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20932,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20933,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20934,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20935,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20936,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20937,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20938,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20939,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20940,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20941,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20942,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20943,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20944,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20945,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20946,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20947,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20948,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20949,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20923,20924,20925,20926,20927,20928,20929,20930,20931,20932,20933,20934,20935,20936,20937,20938,20939,20940,20941,20942,20943,20944,20945,20946,20947,20948,20949]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":20950,"name":"head","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":20951,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20952,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20953,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20954,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20955,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20956,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20957,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20958,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20959,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20960,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20961,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20962,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20963,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20964,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20965,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20966,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20967,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20968,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20969,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20970,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20971,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20972,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20973,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20974,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20975,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20976,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20977,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20978,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20952,20953,20954,20955,20956,20957,20958,20959,20960,20961,20962,20963,20964,20965,20966,20967,20968,20969,20970,20971,20972,20973,20974,20975,20976,20977,20978]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":20979,"name":"options","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":20980,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20981,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20982,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20983,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20984,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20985,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20986,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20987,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20988,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20989,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20990,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20991,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20992,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20993,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20994,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20995,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20996,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20997,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20998,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20999,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21000,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21001,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21002,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21003,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21004,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21005,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21006,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21007,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20981,20982,20983,20984,20985,20986,20987,20988,20989,20990,20991,20992,20993,20994,20995,20996,20997,20998,20999,21000,21001,21002,21003,21004,21005,21006,21007]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21008,"name":"post","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21009,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21010,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21011,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21012,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21013,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21014,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21015,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21016,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21017,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21018,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21019,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21020,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21021,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21022,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21023,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21024,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21025,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21026,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21027,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21028,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21029,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21030,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21031,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21032,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21033,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21034,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21035,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21036,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21010,21011,21012,21013,21014,21015,21016,21017,21018,21019,21020,21021,21022,21023,21024,21025,21026,21027,21028,21029,21030,21031,21032,21033,21034,21035,21036]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21037,"name":"put","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21038,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21039,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21040,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21041,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21042,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21043,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21044,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21045,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21046,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21047,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21048,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21049,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21050,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21051,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21052,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21053,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21054,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21055,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21056,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21057,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21058,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21059,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21060,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21061,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21062,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21063,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21064,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21065,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21039,21040,21041,21042,21043,21044,21045,21046,21047,21048,21049,21050,21051,21052,21053,21054,21055,21056,21057,21058,21059,21060,21061,21062,21063,21064,21065]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21066,"name":"patch","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21067,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21068,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21069,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21070,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21071,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21072,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21073,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21074,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21075,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21076,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21077,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21078,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21079,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21080,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21081,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21082,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21083,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21084,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21085,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21086,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21087,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21088,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21089,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21090,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21091,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21092,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21093,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21094,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21068,21069,21070,21071,21072,21073,21074,21075,21076,21077,21078,21079,21080,21081,21082,21083,21084,21085,21086,21087,21088,21089,21090,21091,21092,21093,21094]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21095,"name":"purge","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21096,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21097,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21098,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21099,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21100,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21101,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21102,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21103,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21104,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21105,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21106,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21107,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21108,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21109,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21110,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21111,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21112,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21113,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21114,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21115,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21116,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21117,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21118,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21119,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21120,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21121,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21122,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21123,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21097,21098,21099,21100,21101,21102,21103,21104,21105,21106,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21117,21118,21119,21120,21121,21122,21123]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21124,"name":"unlink","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":21125,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21126,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21127,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21128,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21129,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21130,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21131,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21132,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21133,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21134,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21135,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21136,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21137,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21138,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21139,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21140,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21141,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21142,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21143,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21144,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21145,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21146,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21147,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21148,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21149,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21150,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21151,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21152,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21126,21127,21128,21129,21130,21131,21132,21133,21134,21135,21136,21137,21138,21139,21140,21141,21142,21143,21144,21145,21146,21147,21148,21149,21150,21151,21152]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21153,"name":"common","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21154,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21155,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21156,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21157,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21158,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21159,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21160,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21161,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21162,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21163,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21164,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21165,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21166,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21167,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21168,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21169,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21170,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21171,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21172,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21173,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21174,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21175,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21176,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21177,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21178,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21179,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21180,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":21181,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[21155,21156,21157,21158,21159,21160,21161,21162,21163,21164,21165,21166,21167,21168,21169,21170,21171,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":20834,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":20835,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20836,"name":"set","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20837,"name":"get","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20838,"name":"has","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20839,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20840,"name":"clear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20841,"name":"normalize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20842,"name":"concat","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20843,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20844,"name":"setContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20845,"name":"getContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20846,"name":"hasContentType","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20847,"name":"setContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20848,"name":"getContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20849,"name":"hasContentLength","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20850,"name":"setAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20851,"name":"getAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20852,"name":"hasAccept","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20853,"name":"setUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20854,"name":"getUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20855,"name":"hasUserAgent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20856,"name":"setContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20857,"name":"getContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20858,"name":"hasContentEncoding","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20859,"name":"setAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20860,"name":"getAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20861,"name":"hasAuthorization","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":20862,"name":"[iterator]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[20836,20837,20838,20839,20840,20841,20842,20843,20844,20845,20846,20847,20848,20849,20850,20851,20852,20853,20854,20855,20856,20857,20858,20859,20860,20861,20862]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}]}}],"groups":[{"title":"Properties","children":[20689,20718,20747,20776,20805,20863,20892,20921,20950,20979,21008,21037,21066,21095,21124,21153,20834]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21182,"name":"params","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21183,"name":"paramsSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":21184,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21189,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21190,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21191,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21192,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21193,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21185,"name":"encode","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21186,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21187,"name":"serialize","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21188,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[21189,21191,21192,21193,21185,21187]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":21194,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21195,"name":"data","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21196,"name":"timeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21197,"name":"timeoutErrorMessage","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21198,"name":"withCredentials","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21199,"name":"adapter","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21200,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"array","elementType":{"type":"unknown","name":"Answerable<string> | {}"}}]}},{"id":21201,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21202,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21203,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21204,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21203,21204]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21205,"name":"responseType","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"formdata"}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21206,"name":"responseEncoding","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21207,"name":"xsrfCookieName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21208,"name":"xsrfHeaderName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21209,"name":"onUploadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21210,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21211,"name":"onDownloadProgress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21212,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21213,"name":"maxContentLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21214,"name":"validateStatus","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21215,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21216,"name":"maxBodyLength","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21217,"name":"maxRedirects","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21218,"name":"maxRate","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"tuple","elements":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}]}]}},{"id":21219,"name":"beforeRedirect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21220,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21221,"name":"socketPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21222,"name":"transport","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21223,"name":"httpAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21224,"name":"httpsAgent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"any"}},{"id":21225,"name":"proxy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21226,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21227,"name":"host","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21228,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21229,"name":"auth","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21230,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21231,"name":"username","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21232,"name":"password","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21231,21232]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21233,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21227,21228,21229,21233]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21234,"name":"cancelToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21235,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21236,"name":"promise","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"Cancel"},"name":"Cancel","package":"axios"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":21237,"name":"reason","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21238,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21239,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"groups":[{"title":"Properties","children":[21239]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21240,"name":"throwIfRequested","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[21236,21237]},{"title":"Methods","children":[21240]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21241,"name":"decompress","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21242,"name":"transitional","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21243,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21244,"name":"silentJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21245,"name":"forcedJSONParsing","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21246,"name":"clarifyTimeoutError","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[21244,21245,21246]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21247,"name":"signal","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21248,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21249,"name":"aborted","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21250,"name":"onabort","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21251,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21252,"name":"addEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21253,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21254,"name":"removeEventListener","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21255,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[21249,21250,21252,21254]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21256,"name":"insecureHTTPParser","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21257,"name":"env","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21258,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21259,"name":"FormData","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21260,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[21259]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21261,"name":"formSerializer","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21262,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21263,"name":"visitor","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21264,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21265,"name":"dots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21266,"name":"metaTokens","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21267,"name":"indexes","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[21263,21265,21266,21267]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":21268,"name":"family","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":4}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":6}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":21269,"name":"lookup","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":21270,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}},{"type":"reflection","declaration":{"id":21271,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21272,"name":"withXSRFToken","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":21273,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}]}},{"id":21274,"name":"fetchOptions","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reflection","declaration":{"id":21275,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}}],"groups":[{"title":"Properties","children":[20650,20651,20652,20653,20656,20659,21182,21183,21195,21196,21197,21198,21199,21201,21205,21206,21207,21208,21209,21211,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21234,21241,21242,21247,21256,21257,21261,21268,21269,21272,21274]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":19958,"name":"PutRequest","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Methods","children":[19959,21909,21912,21919,21929,21906,20643,20646]}],"sources":[{"fileName":"packages/rest/src/screenplay/models/PutRequest.ts","line":44,"character":13}],"extendedTypes":[{"type":"reference","target":12699,"name":"HTTPRequest","package":"@serenity-js/rest"}],"permalink":"/api/rest/class/PutRequest","previousId":17985,"nextId":21931},{"id":21931,"name":"LastResponse","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Provides access to the properties of the last ["},{"kind":"code","text":"`AxiosResponse`"},{"kind":"text","text":"](https://axios-http.com/docs/res_schema) object,\\ncached on the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi/).\\n\\n## Verify response to a GET request\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Book {\\n    title: string;\\n    author: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Content-Type\'), equals(\'application/json\')),\\n    Ensure.that(LastResponse.body<Book>(), equals({\\n        title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n        author: \'Robert M. Pirsig\',\\n    })),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Use Serenity/JS adapters to navigate complex response objects\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Developer {\\n    name: string;\\n    id: string;\\n    projects: Project[];\\n}\\n\\ninterface Project {\\n    name: string;\\n    repoUrl: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/developers/jan-molak\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.body<Developer>().name, equals(\'Jan Molak\')),\\n    Ensure.that(LastResponse.body<Developer>().projects[0].name, equals(\'Serenity/JS\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [AxiosResponse](https://axios-http.com/docs/res_schema)"}]},"children":[{"id":21932,"name":"status","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":77,"character":11}],"signatures":[{"id":21933,"name":"status","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the status code of the [last response](/api/rest/class/LastResponse/)\\n\\n#### Learn more\\n- [HTTP response status codes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status)"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":77,"character":11}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":21934,"name":"body","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":157,"character":11}],"signatures":[{"id":21935,"name":"body","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the body of the [last response](/api/rest/class/LastResponse/)\\n\\n#### A type-safe approach using generics\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Book {\\n  title: string;\\n  author: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n     // ...\\n\\n     // note body<T>() parameterised with type \\"Book\\"\\n     Ensure.that(LastResponse.body<Book>(), equals({\\n       title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n       author: \'Robert M. Pirsig\',\\n     })),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## A not type-safe approach using "},{"kind":"code","text":"`any`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n     // ...\\n\\n     // note body<T>() parameterised with \\"any\\" or with no parameter is not type-safe!\\n     Ensure.that(LastResponse.body<any>(), equals({\\n       title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n       author: \'Robert M. Pirsig\',\\n     })),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Iterating over the items in the response body\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Product {\\n  id: number;\\n  name: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(`/products`)),\\n    List.of<Product>(LastResponse.body<{ products: Product[] }>().products)\\n      .forEach(({ item, actor }) =>\\n        actor.attemptsTo(\\n          Send.a(GetRequest.to(`/products/${ item.id }`)),\\n          Ensure.that(LastResponse.body<Product>().id, equals(item.id)),\\n        )\\n      ),\\n  )\\n```"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":157,"character":11}],"typeParameter":[{"id":21936,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":21936,"name":"T","package":"@serenity-js/rest","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":21937,"name":"header","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":183,"character":11}],"signatures":[{"id":21938,"name":"header","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a header of the [last response](/api/rest/class/LastResponse/), identified by "},{"kind":"code","text":"`name`"},{"kind":"text","text":"\\n\\n## Asserting on a header\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(`/products`)),\\n    Ensure.that(LastResponse.header(\'Content-Type\'), equals(\'application/json\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":183,"character":11}],"parameters":[{"id":21939,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":21940,"name":"headers","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":207,"character":11}],"signatures":[{"id":21941,"name":"headers","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves all the headers of the [last response](/api/rest/class/LastResponse/).\\n\\n## Asserting on a header\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(`/products`)),\\n    Ensure.that(LastResponse.headers()[\'Content-Type\'], equals(\'application/json\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":207,"character":11}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"RawAxiosHeaders"},"name":"RawAxiosHeaders","package":"axios"},{"type":"reflection","declaration":{"id":21942,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21943,"name":"Content-Length","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":21944,"name":"Content-Encoding","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":21945,"name":"Content-Type","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":21946,"name":"Server","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}},{"id":21947,"name":"Cache-Control","variant":"declaration","kind":1024,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/axios/index.d.ts","qualifiedName":"AxiosHeaderValue"},"name":"AxiosHeaderValue","package":"axios"}}],"groups":[{"title":"Properties","children":[21943,21944,21945,21946,21947]}],"sources":[]}},{"type":"reflection","declaration":{"id":21948,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":21949,"name":"set-cookie","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","children":[21949]}],"sources":[]}}]}],"name":"Partial","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":21950,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":21951,"name":"new LastResponse","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":21931,"name":"LastResponse","package":"@serenity-js/rest"}}]}],"groups":[{"title":"Constructors","children":[21950]},{"title":"Methods","children":[21932,21934,21937,21940]}],"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":69,"character":13}],"permalink":"/api/rest/class/LastResponse","previousId":19958,"nextId":6680}],"groups":[{"title":"Abilities","children":[6696]},{"title":"Activities","children":[6732,6745]},{"title":"Functions","children":[6693]},{"title":"Models","children":[6789,8759,12699,10729,14042,16012,17985,19958]},{"title":"Questions","children":[21931]},{"title":"Type Aliases","children":[6680,6689]}],"sources":[{"fileName":"packages/rest/src/index.ts","line":1,"character":0}],"permalink":"/api/rest"},"urlSlug":"rest"}],"packageName":"@serenity-js/rest","packageVersion":"3.25.4"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":33,"name":"@serenity-js/serenity-bdd","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":34,"name":"default","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/index.ts","line":8,"character":24}],"signatures":[{"id":35,"name":"default","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/index.ts","line":8,"character":24}],"parameters":[{"id":36,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22144,"name":"SerenityBDDReporterConfig","package":"@serenity-js/serenity-bdd"},"defaultValue":"{}"}],"type":{"type":"reference","target":2126,"typeArguments":[{"type":"reference","target":22121,"name":"SerenityBDDReporter","package":"@serenity-js/serenity-bdd"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}],"permalink":"/api/serenity-bdd/function/default","nextId":22121},{"id":22121,"name":"SerenityBDDReporter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) that produces [Serenity BDD](http://serenity-bdd.info/)-standard JSON reports\\nto be parsed by [Serenity BDD CLI Reporter](https://github.com/serenity-bdd/serenity-cli)\\nto produce HTML reports and living documentation.\\n\\n## Registering Serenity BDD Reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { ArtifactArchiver, configure } from \'@serenity-js/core\';\\nimport { SerenityBDDReporter } from \'@serenity-js/serenity-bdd\';\\n\\nconfigure({\\n  crew: [\\n    ArtifactArchiver.fromJSON({\\n      outputDirectory: \'./target/site/serenity\'\\n    }),\\n    SerenityBDDReporter.fromJSON({\\n      specDirectory: \'./features\'            // optional configuration\\n    })\\n  ],\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Serenity BDD Reporter with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport { devices } from \'@playwright/test\';\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\';\\n\\nconst config: PlaywrightTestConfig = {\\n\\n  reporter: [\\n    [ \'line\' ],\\n    [ \'html\', { open: \'never\' } ],\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        \'@serenity-js/serenity-bdd\',\\n        [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n      ]\\n    }]\\n  ],\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Serenity BDD Reporter with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\';\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n       [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ],\\n    // other Serenity/JS config\\n  },\\n  // other Protractor config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Serenity BDD Reporter with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n        \'@serenity-js/serenity-bdd\',\\n         [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ],\\n    // other Serenity/JS config\\n  },\\n\\n  // other Protractor config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Configuring Serenity BDD Reporter\\n\\nTo override Serenity BDD Reporter default configuration, provide a ["},{"kind":"code","text":"`SerenityBDDReporterConfig`"},{"kind":"text","text":"](/api/serenity-bdd/interface/SerenityBDDReporterConfig/)\\nas the second element of the ["},{"kind":"code","text":"`SerenityBDDReporterConfig`"},{"kind":"text","text":"](/api/serenity-bdd/interface/SerenityBDDReporterConfig/) array\\nusing your test runner-specific configuration mechanism.\\n\\nFor example, to change the default location\\nof the [requirements hierarchy root directory](https://serenity-bdd.github.io/docs/reporting/living_documentation#the-requirements-hierarchy),\\nspecify the "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" property:\\n\\n"},{"kind":"code","text":"```js\\n    crew: [\\n      [ \'@serenity-js/serenity-bdd\', { specDirectory: \'./features\' } ],\\n      // ...\\n    ],\\n```"},{"kind":"text","text":"\\n\\n### Learn more:\\n- [Serenity BDD Reporter integration documentation](/handbook/reporting/serenity-bdd-reporter/)\\n- [Serenity/JS examples on GitHub](https://github.com/serenity-js/serenity-js/tree/main/examples)"}]},"children":[{"id":22122,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":125,"character":11}],"signatures":[{"id":22123,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":125,"character":11}],"parameters":[{"id":22124,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":22144,"name":"SerenityBDDReporterConfig","package":"@serenity-js/serenity-bdd"}}],"type":{"type":"reference","target":2126,"typeArguments":[{"type":"reference","target":22121,"name":"SerenityBDDReporter","package":"@serenity-js/serenity-bdd"}],"name":"StageCrewMemberBuilder","package":"@serenity-js/core"}}]},{"id":22125,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":134,"character":4}],"signatures":[{"id":22126,"name":"new SerenityBDDReporter","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":134,"character":4}],"parameters":[{"id":22127,"name":"requirementsHierarchy","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"RequirementsHierarchy","package":"@serenity-js/core"}},{"id":22128,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The stage this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) should be assigned to"}]},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":22121,"name":"SerenityBDDReporter","package":"@serenity-js/serenity-bdd"}}]},{"id":22133,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":144,"character":4}],"signatures":[{"id":22134,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":144,"character":4}],"parameters":[{"id":22135,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}},{"id":22136,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":152,"character":4}],"signatures":[{"id":22137,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":152,"character":4}],"parameters":[{"id":22138,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[22125]},{"title":"Methods","children":[22122,22133,22136]}],"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":121,"character":13}],"implementedTypes":[{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/serenity-bdd/class/SerenityBDDReporter","previousId":34,"nextId":22144},{"id":22144,"name":"SerenityBDDReporterConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configuration options for the ["},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":"](/api/serenity-bdd/class/SerenityBDDReporter/)."}]},"children":[{"id":22145,"name":"specDirectory","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root directory that ["},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":"](/api/serenity-bdd/class/SerenityBDDReporter/) should recursively scan for test scenario files\\nto determine the [requirements hierarchy](https://serenity-bdd.github.io/docs/reporting/living_documentation#the-requirements-hierarchy),\\nrelative to the current working directory.\\n\\nIf not specified, "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" defaults to the first one of the following subdirectories that\'s present in the current working\\ndirectory:\\n- "},{"kind":"code","text":"`features`"},{"kind":"text","text":" - typically used by [Serenity/JS + Cucumber.js](/handbook/test-runners/cucumber/) projects to store "},{"kind":"code","text":"`.feature`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`specs`"},{"kind":"text","text":" - typically used by [Serenity/JS + Jasmine](/handbook/test-runners/jasmine/) and [Mocha](/handbook/test-runners/mocha/) projects to store "},{"kind":"code","text":"`.spec.js`"},{"kind":"text","text":" or "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`spec`"},{"kind":"text","text":" - another popular naming convention seen in [Serenity/JS + Jasmine](/handbook/test-runners/jasmine/) and [Mocha](/handbook/test-runners/mocha/) projects\\n- "},{"kind":"code","text":"`tests`"},{"kind":"text","text":" - typically used by [Serenity/JS + Playwright Test](/handbook/test-runners/playwright-test/) projects to store "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`test`"},{"kind":"text","text":" - typically used by [Serenity/JS + WebdriverIO](/handbook/test-runners/webdriverio/) projects to store "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files\\n- "},{"kind":"code","text":"`src`"},{"kind":"text","text":" - typically used by [Serenity/JS + Playwright Component Test](/api/playwright-test/#ui-component-testing) projects to store "},{"kind":"code","text":"`.spec.ts`"},{"kind":"text","text":" files alongside the source code\\n\\nIf not specified and none of the above subdirectories are present, "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" defaults to the current working directory.\\n\\nIf "},{"kind":"code","text":"`specDirectory`"},{"kind":"text","text":" _is_ specified, but the directory doesn\'t exist, SerenityBDDReporter throws a ["},{"kind":"code","text":"`ConfigurationError`"},{"kind":"text","text":"](/api/core/class/ConfigurationError/).\\n\\n**IMPORTANT**: For the Serenity BDD CLI Reporter to correctly parse the requirements hierarchy and recognise your test scenarios,\\nyour test scenario files must be named using either:\\n- "},{"kind":"code","text":"`<feature name>.feature`"},{"kind":"text","text":" naming convention for Cucumber.js projects\\n- "},{"kind":"code","text":"`<feature name>.<suffix>.<extension>`"},{"kind":"text","text":" naming convention for non-Cucumber.js projects\\n\\nIn the naming conventions above:\\n- "},{"kind":"code","text":"`<feature name>`"},{"kind":"text","text":" is the name of the feature or component the scenario exercises; e.g. "},{"kind":"code","text":"`checkout.feature`"},{"kind":"text","text":", "},{"kind":"code","text":"`checkout.spec.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`LoginForm.spec.ts`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`<suffix>`"},{"kind":"text","text":" is one of the following: "},{"kind":"code","text":"`spec`"},{"kind":"text","text":", "},{"kind":"code","text":"`test`"},{"kind":"text","text":", "},{"kind":"code","text":"`integration`"},{"kind":"text","text":", "},{"kind":"code","text":"`it`"},{"kind":"text","text":", "},{"kind":"code","text":"`e2e`"},{"kind":"text","text":", "},{"kind":"code","text":"`spec.e2e`"},{"kind":"text","text":", "},{"kind":"code","text":"`spec-e2e`"},{"kind":"text","text":"; e.g. "},{"kind":"code","text":"`checkout.spec.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`payments.spec-e2e.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`user_registration.integration.ts`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`<extension>`"},{"kind":"text","text":" is one of the following: "},{"kind":"code","text":"`js`"},{"kind":"text","text":", "},{"kind":"code","text":"`jsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`mjs`"},{"kind":"text","text":", "},{"kind":"code","text":"`mjsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`cjs`"},{"kind":"text","text":", "},{"kind":"code","text":"`cjsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`tsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`mts`"},{"kind":"text","text":", "},{"kind":"code","text":"`mtsx`"},{"kind":"text","text":", "},{"kind":"code","text":"`cts`"},{"kind":"text","text":", "},{"kind":"code","text":"`ctxs`"},{"kind":"text","text":"; e.g. "},{"kind":"code","text":"`authentication.spec.ts`"},{"kind":"text","text":", "},{"kind":"code","text":"`FormValidator.spec.mtsx`"},{"kind":"text","text":"\\n\\nTo find out more about how [Serenity BDD CLI](https://github.com/serenity-bdd/serenity-core/tree/main/serenity-cli) parses the requirements hierarchy,\\nsee the [SpecFileFilters](https://github.com/serenity-bdd/serenity-core/blob/main/serenity-model/src/main/java/net/thucydides/model/requirements/SpecFileFilters.java)\\nclass."}]},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":40,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[22145]}],"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporterConfig.ts","line":7,"character":17}],"permalink":"/api/serenity-bdd/interface/SerenityBDDReporterConfig","previousId":22121}],"groups":[{"title":"Functions","children":[34]},{"title":"Stage","children":[22121,22144]}],"sources":[{"fileName":"packages/serenity-bdd/src/index.ts","line":1,"character":0}],"permalink":"/api/serenity-bdd"},"urlSlug":"serenity-bdd"}],"packageName":"@serenity-js/serenity-bdd","packageVersion":"3.25.4"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":5,"name":"@serenity-js/web","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":3007,"name":"BrowserWindowClosedError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown when you\'re trying to take a screenshot of a browser window\\nthat\'s already been closed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`TakeScreenshot`"},{"kind":"text","text":"](/api/web/class/TakeScreenshot/)\\n- ["},{"kind":"code","text":"`Page.takeScreenshot`"},{"kind":"text","text":"](/api/web/class/Page/#takeScreenshot)"}]},"children":[{"id":3025,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":67,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.cause"}},{"id":3026,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"signatures":[{"id":3027,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}},{"id":3028,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"signatures":[{"id":3029,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}},{"id":3021,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/BrowserWindowClosedError.ts","line":14,"character":4}],"signatures":[{"id":3022,"name":"new BrowserWindowClosedError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/BrowserWindowClosedError.ts","line":14,"character":4}],"parameters":[{"id":3023,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3024,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":3007,"name":"BrowserWindowClosedError","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}},{"id":3030,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.name"}},{"id":3031,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.message"}},{"id":3032,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.stack"}}],"groups":[{"title":"Constructors","children":[3021]},{"title":"Properties","children":[3025,3030,3031,3032]},{"title":"Methods","children":[3026,3028]}],"sources":[{"fileName":"packages/web/src/errors/BrowserWindowClosedError.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":297,"name":"LogicError","package":"@serenity-js/core"}],"permalink":"/api/web/class/BrowserWindowClosedError","previousId":3661,"nextId":3033},{"id":3033,"name":"CookieMissingError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown when the [cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies)\\nyou\'re trying to retrieve has not been set yet.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)\\n- ["},{"kind":"code","text":"`RuntimeError`"},{"kind":"text","text":"](/api/core/class/RuntimeError/)"}]},"children":[{"id":3048,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":67,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.cause"}},{"id":3049,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"signatures":[{"id":3050,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toString"}},{"id":3051,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"signatures":[{"id":3052,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.toJSON"}},{"id":3044,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/CookieMissingError.ts","line":14,"character":4}],"signatures":[{"id":3045,"name":"new CookieMissingError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/CookieMissingError.ts","line":14,"character":4}],"parameters":[{"id":3046,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3047,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":3033,"name":"CookieMissingError","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"RuntimeError.constructor"}},{"id":3053,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.name"}},{"id":3054,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.message"}},{"id":3055,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"RuntimeError.stack"}}],"groups":[{"title":"Constructors","children":[3044]},{"title":"Properties","children":[3048,3053,3054,3055]},{"title":"Methods","children":[3049,3051]}],"sources":[{"fileName":"packages/web/src/errors/CookieMissingError.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":349,"name":"RuntimeError","package":"@serenity-js/core"}],"permalink":"/api/web/class/CookieMissingError","previousId":3007,"nextId":3056},{"id":3056,"name":"ModalDialogObstructsScreenshotError","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Thrown when the presence of a JavaScript dialog obstructs taking a screenshot.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/)\\n- ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n- ["},{"kind":"code","text":"`TakeScreenshot`"},{"kind":"text","text":"](/api/web/class/TakeScreenshot/)"}]},"children":[{"id":3074,"name":"cause","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":67,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.cause"}},{"id":3075,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"signatures":[{"id":3076,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":77,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toString"}},{"id":3077,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"signatures":[{"id":3078,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.ts","line":78,"character":4}],"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.toJSON"}},{"id":3070,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/ModalDialogObstructsScreenshotError.ts","line":14,"character":4}],"signatures":[{"id":3071,"name":"new ModalDialogObstructsScreenshotError","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/errors/ModalDialogObstructsScreenshotError.ts","line":14,"character":4}],"parameters":[{"id":3072,"name":"message","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":3073,"name":"cause","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Error"},"name":"Error","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error"}}],"type":{"type":"reference","target":3056,"name":"ModalDialogObstructsScreenshotError","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"LogicError.constructor"}},{"id":3079,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.name"}},{"id":3080,"name":"message","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.message"}},{"id":3081,"name":"stack","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"LogicError.stack"}}],"groups":[{"title":"Constructors","children":[3070]},{"title":"Properties","children":[3074,3079,3080,3081]},{"title":"Methods","children":[3075,3077]}],"sources":[{"fileName":"packages/web/src/errors/ModalDialogObstructsScreenshotError.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":297,"name":"LogicError","package":"@serenity-js/core"}],"permalink":"/api/web/class/ModalDialogObstructsScreenshotError","previousId":3033,"nextId":3082},{"id":3082,"name":"isActive","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isActive.ts","line":27,"character":16}],"signatures":[{"id":3083,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is \\"active\\", which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isActive`"},{"kind":"text","text":"](/api/web/class/PageElement/#isActive) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isActive`"},{"kind":"text","text":"](/api/web/class/PageElement/#isActive)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isActive.ts","line":27,"character":16}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":4188,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isActive","previousId":3056,"nextId":3084},{"id":3084,"name":"isClickable","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isClickable.ts","line":27,"character":16}],"signatures":[{"id":3085,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is clickable, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isClickable`"},{"kind":"text","text":"](/api/web/class/PageElement/#isClickable) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isClickable`"},{"kind":"text","text":"](/api/web/class/PageElement/#isClickable)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isClickable.ts","line":27,"character":16}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":4188,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isClickable","previousId":3082,"nextId":3086},{"id":3086,"name":"isEnabled","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isEnabled.ts","line":27,"character":16}],"signatures":[{"id":3087,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is enabled, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isEnabled`"},{"kind":"text","text":"](/api/web/class/PageElement/#isEnabled) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isEnabled`"},{"kind":"text","text":"](/api/web/class/PageElement/#isEnabled)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isEnabled.ts","line":27,"character":16}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":4188,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isEnabled","previousId":3084,"nextId":3088},{"id":3088,"name":"isSelected","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isSelected.ts","line":27,"character":16}],"signatures":[{"id":3089,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an "},{"kind":"code","text":"`<option>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`<input>`"},{"kind":"text","text":" element is selected, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isSelected`"},{"kind":"text","text":"](/api/web/class/PageElement/#isSelected) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isSelected`"},{"kind":"text","text":"](/api/web/class/PageElement/#isSelected)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isSelected.ts","line":27,"character":16}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":4188,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isSelected","previousId":3086,"nextId":3090},{"id":3090,"name":"isVisible","variant":"declaration","kind":64,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/expectations/isVisible.ts","line":27,"character":16}],"signatures":[{"id":3091,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/) that an element is visible, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element [is present](/api/assertions/function/isPresent/) in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - ["},{"kind":"code","text":"`PageElement.isVisible`"},{"kind":"text","text":"](/api/web/class/PageElement/#isVisible) resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`PageElement.isVisible`"},{"kind":"text","text":"](/api/web/class/PageElement/#isVisible)\\n- ["},{"kind":"code","text":"`Expectation`"},{"kind":"text","text":"](/api/core/class/Expectation/)\\n- ["},{"kind":"code","text":"`Check`"},{"kind":"text","text":"](/api/core/class/Check/)\\n- ["},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"](/api/assertions/class/Ensure/)\\n- ["},{"kind":"code","text":"`Wait`"},{"kind":"text","text":"](/api/core/class/Wait/)"}]},"sources":[{"fileName":"packages/web/src/expectations/isVisible.ts","line":27,"character":16}],"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":4188,"name":"PageElement","package":"@serenity-js/web"}],"name":"Expectation","package":"@serenity-js/core"}}],"permalink":"/api/web/function/isVisible","previousId":3088,"nextId":3698},{"id":3092,"name":"BrowseTheWeb","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"The [ability](/api/core/class/Ability/) to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" enables an [actor](/api/core/class/Actor/)\\nto [interact with](/api/core/class/Interaction/) and [retrieve information from](/api/core/class/Question/) Web-based user interfaces.\\n\\n"},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" wraps test integration tools such as [Playwright](/api/playwright),\\n[Protractor](/api/protractor), or [WebdriverIO](/api/webdriverio),\\nand together with Serenity/JS Web models, such as ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) - offers a standardised way\\nto write Web-based tests following the Screenplay Pattern.\\n\\nThe consistent and portable design of abstractions provided by the ["},{"kind":"code","text":"`@serenity-js/web`"},{"kind":"text","text":" module](/api/web)\\nalso helps to make your tests portable across the various test integration tools and helps to make your test\\ncode easier to reuse across projects and teams.\\n\\n## Giving the actors an ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\nTo give an [actor](/api/core/class/Actor/) an ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":", provide the **integration tool-specific implementation**\\nvia ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan) in ["},{"kind":"code","text":"`Cast.prepare`"},{"kind":"text","text":"](/api/core/class/Cast/#prepare), or via ["},{"kind":"code","text":"`Cast.where`"},{"kind":"text","text":"](/api/core/class/Cast/#where).\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { engage, Actor, Cast } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nbeforeEach(async () => {\\n  const browser = await chromium.launch({ headless: true })\\n\\n  engage(\\n    BrowseTheWebWithPlaywright.using(browser),\\n  )\\n})\\n```"},{"kind":"text","text":"\\n\\n### Learn more\\n\\nTo learn more about using Serenity/JS with your chosen test integration tool, follow their respective documentation:\\n\\n- ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\n- ["},{"kind":"code","text":"`BrowseTheWebWithProtractor`"},{"kind":"text","text":"](/api/protractor/class/BrowseTheWebWithProtractor/)\\n- ["},{"kind":"code","text":"`BrowseTheWebWithWebdriverIO`"},{"kind":"text","text":"](/api/webdriverio/class/BrowseTheWebWithWebdriverIO/)\\n\\n## Using the ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\nTo use the ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" in a custom ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nor ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/), use the **generic** method ["},{"kind":"code","text":"`BrowseTheWeb.as`"},{"kind":"text","text":"](/api/core/class/Ability/#as)\\nto retrieve it.\\n\\nThis generic method retrieves the integration tool-specific implementation of ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) present on the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/),\\nsuch as ["},{"kind":"code","text":"`BrowseTheWebWithPlaywright`"},{"kind":"text","text":"](/api/playwright/class/BrowseTheWebWithPlaywright/)\\nor ["},{"kind":"code","text":"`BrowseTheWebWithWebdriverIO`"},{"kind":"text","text":"](/api/webdriverio/class/BrowseTheWebWithWebdriverIO/), using ["},{"kind":"code","text":"`Actor.abilityTo`"},{"kind":"text","text":"](/api/core/class/Actor/#abilityTo).\\n\\nThis decoupling mechanism helps to make your test code portable across test integration tools,\\nsince the only part of your test suite that needs to know about the test integration tool used are the actors.\\nThe rest of your test code, so [tasks](/api/core/class/Task/), [interactions](/api/core/class/Interaction/), and [questions](/api/core/class/Question/),\\nremain fully agnostic of the underlying tool.\\n\\n"},{"kind":"code","text":"```ts\\nimport { BrowseTheWeb, Question } from \'@serenity-js/web\'\\n\\nconst BrowserDetails = () =>\\n Question.about(\'browser details\', async actor => {\\n   const capabilities = await BrowseTheWeb.as(actor).browserCapabilities();\\n   return ${ capabilities.browserName } ${ capabilities.browserVersion }`;\\n })\\n```"},{"kind":"text","text":"\\n\\n**Pro tip:** Use the specific "},{"kind":"code","text":"`BrowseTheWebWith<test integration tool name>`"},{"kind":"text","text":" to give the actor the ability,\\nand generic "},{"kind":"code","text":"`BrowseTheWeb.as(actor)`"},{"kind":"text","text":" to retrieve it.\\n\\n### Learn more\\n\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor/#whoCan)\\n- ["},{"kind":"code","text":"`Cast.where`"},{"kind":"text","text":"](/api/core/class/Cast/#where)\\n- ["},{"kind":"code","text":"`Cast.prepare`"},{"kind":"text","text":"](/api/core/class/Cast/#prepare)"}]},"children":[{"id":3098,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":85,"character":4}],"signatures":[{"id":3099,"name":"new BrowseTheWeb","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":85,"character":4}],"typeParameter":[{"id":3100,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":3101,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3702,"typeArguments":[{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":3100,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}}],"type":{"type":"reference","target":3092,"typeArguments":[{"type":"reference","target":3100,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"BrowseTheWeb","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Ability.constructor"}},{"id":3103,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":10}],"signatures":[{"id":3104,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":3100,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3105,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":100,"character":4}],"signatures":[{"id":3106,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":100,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":3100,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"BrowseTheWeb.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3107,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":107,"character":10}],"signatures":[{"id":3108,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":107,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3698,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[3098]},{"title":"Methods","children":[3103,3105,3107]}],"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":22}],"typeParameters":[{"id":3109,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":484,"name":"Ability","package":"@serenity-js/core"}],"permalink":"/api/web/class/BrowseTheWeb","nextId":3110},{"id":3110,"name":"Clear","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto clear the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" of a [form "},{"kind":"code","text":"`input`"},{"kind":"text","text":" field](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<form>\\n  <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst Form = {\\n  exampleInput: () =>\\n    PageElement.located(By.id(\'example\'))\\n     .describedAs(\'example input\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Clearing the value of an input field\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Clear, Enter, Value } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'In\xe9s\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Enter.theValue(\'Hello world!\').into(Form.exampleInput()),\\n    Ensure.that(Value.of(Form.exampleInput()), equals(\'Hello world!\')),\\n\\n    Clear.theValueOf(Form.exampleInput()),\\n    Ensure.that(Value.of(Form.exampleInput()), equals(\'\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Enter`"},{"kind":"text","text":"](/api/web/class/Enter/)\\n- ["},{"kind":"code","text":"`Value`"},{"kind":"text","text":"](/api/web/class/Value/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3111,"name":"theValueOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":68,"character":11}],"signatures":[{"id":3112,"name":"theValueOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto clear the value of an input "},{"kind":"code","text":"`field`"},{"kind":"text","text":","}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":68,"character":11}],"parameters":[{"id":3113,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The field which value should be cleared"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3142,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3143,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3414,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3413,"name":"PageElementInteraction.instantiationLocation"}},{"id":3144,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3145,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3146,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3147,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3148,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3148]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3416,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3415,"name":"PageElementInteraction.describedBy"}},{"id":3154,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3155,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3426,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3425,"name":"PageElementInteraction.toString"}},{"id":3128,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":79,"character":10}],"signatures":[{"id":3129,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":79,"character":10}],"parameters":[{"id":3130,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3410,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3409,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3111,3142,3144,3154,3128]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":58,"character":13}],"extendedTypes":[{"type":"reference","target":3390,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Clear","previousId":3092,"nextId":3156},{"id":3156,"name":"Click","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto scroll the given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) into view and then [click](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event) on it.\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<form>\\n  <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/webdriverio\';\\n\\nclass Form {\\n  static exampleInput = () =>\\n    PageElement.located(by.id(\'example\'))\\n      .describedAs(\'example input\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Clicking on an element\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Click, isSelected } from \'@serenity-js/web\'\\nimport { Ensure } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Chlo\xe9\')\\n  .attemptsTo(\\n    Click.on(Form.exampleInput()),\\n    Ensure.that(Form.exampleInput(), isSelected()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3157,"name":"on","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":60,"character":11}],"signatures":[{"id":3158,"name":"on","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":60,"character":11}],"parameters":[{"id":3159,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be clicked on"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3182,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3183,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3414,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3413,"name":"PageElementInteraction.instantiationLocation"}},{"id":3184,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3185,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3186,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3187,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3188,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3188]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3416,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3415,"name":"PageElementInteraction.describedBy"}},{"id":3194,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3195,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3426,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3425,"name":"PageElementInteraction.toString"}},{"id":3174,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":71,"character":10}],"signatures":[{"id":3175,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":71,"character":10}],"parameters":[{"id":3176,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3410,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3409,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3157,3182,3184,3194,3174]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":52,"character":13}],"extendedTypes":[{"type":"reference","target":3390,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Click","previousId":3110,"nextId":3196},{"id":3196,"name":"DoubleClick","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto perform a double click on a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n\x3c!--\\n    The editor shows up when the user double-clicks\\n    on one of the properties of their profile\\n    and lets them change the value of that property.\\n--\x3e\\n<div id=\\"user-profile\\">\\n    <ul>\\n        <li id=\\"display-name\\" ondblclick=\\"edit(this)\\">User12345</li>\\n        <li id=\\"email-address\\" ondblclick=\\"edit(this)\\">tester@example.org</li>\\n    </ul>\\n    <form id=\\"editor\\" class=\\"hidden\\">\\n        <input type=\\"text\\" value=\\"\\" />\\n    </form>\\n</div>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass UserProfile {\\n  static displayName = () =>\\n    PageElement.located(by.id(\'display-name\'))\\n      .describedAs(\'display name\')\\n\\n  static emailAddress = () =>\\n    PageElement.located(by.id(\'email-address\'))\\n      .describedAs(\'email address\')\\n\\n  static editor = () =>\\n    PageElement.located(by.id(\'editor\'))\\n      .describedAs(\'editor\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Double-clicking on an element\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Wait } from \'@serenity-js/core\'\\nimport { DoubleClick, isVisible, Enter, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals, not } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Dorothy\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    DoubleClick.on(UserProfile.displayName),\\n    Wait.until(UserProfile.editor(), isVisible()),\\n\\n    Enter.theValue(\'New username\').into(UserProfile.editor),\\n\\n    Ensure.that(Text.of(UserProfile.displayName()), equals(\'New username\')),\\n    Ensure.that(UserProfile.editor, not(isVisible()))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3197,"name":"on","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":83,"character":11}],"signatures":[{"id":3198,"name":"on","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":83,"character":11}],"parameters":[{"id":3199,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be double-clicked on"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3222,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3223,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3414,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3413,"name":"PageElementInteraction.instantiationLocation"}},{"id":3224,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3225,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3226,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3227,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3228,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3228]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3416,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3415,"name":"PageElementInteraction.describedBy"}},{"id":3234,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3235,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3426,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3425,"name":"PageElementInteraction.toString"}},{"id":3214,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":94,"character":10}],"signatures":[{"id":3215,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":94,"character":10}],"parameters":[{"id":3216,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3410,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3409,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3197,3222,3224,3234,3214]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":75,"character":13}],"extendedTypes":[{"type":"reference","target":3390,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/DoubleClick","previousId":3156,"nextId":3236},{"id":3236,"name":"Enter","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto enter a value into a [form "},{"kind":"code","text":"`input`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input) field.\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n<form>\\n <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Form {\\n  static exampleInput = () =>\\n    PageElement.located(By.id(\'example\'))\\n      .describedAs(\'example input\')\\n }\\n```"},{"kind":"text","text":"\\n\\n## Entering the value into a form field\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Enter } from \'@serenity-js/web\';\\n\\nawait actorCalled(\'Esme\')\\n  .attemptsTo(\\n    Enter.theValue(\'Hello world!\').into(Form.exampleInput()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Handling sensitive information\\n\\nBy design, any data handled by an actor appears in Serenity/JS reports.\\nTo prevent the exposure of any sensitive information, such as passwords or tokens, you should use ["},{"kind":"code","text":"`Masked`"},{"kind":"text","text":"](/api/core/class/Masked/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Masked } from \'@serenity-js/core\'\\nimport { Enter } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esme\')\\n  .attemptsTo(\\n    Enter.theValue(Masked.valueOf(\'your little secret\').into(Form.exampleInputField()),\\n  )\\n\\n  // Gets reported as: \\"Esme enters [a masked value] into the example input field\\"\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3237,"name":"theValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":11}],"signatures":[{"id":3238,"name":"theValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":11}],"parameters":[{"id":3239,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"The text value to be entered"}]},"type":{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reflection","declaration":{"id":3240,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3241,"name":"into","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":92}],"type":{"type":"reflection","declaration":{"id":3242,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":98}],"signatures":[{"id":3243,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":98}],"parameters":[{"id":3244,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3241]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":90}]}}}]},{"id":3269,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3270,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3414,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3413,"name":"PageElementInteraction.instantiationLocation"}},{"id":3271,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3272,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3273,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3274,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3275,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3275]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3416,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3415,"name":"PageElementInteraction.describedBy"}},{"id":3281,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3282,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3426,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3425,"name":"PageElementInteraction.toString"}},{"id":3261,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":96,"character":10}],"signatures":[{"id":3262,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":96,"character":10}],"parameters":[{"id":3263,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3410,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3409,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3237,3269,3271,3281,3261]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":67,"character":13}],"extendedTypes":[{"type":"reference","target":3390,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Enter","previousId":3196,"nextId":3283},{"id":3283,"name":"ExecuteScript","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto inject a script into the browser and execute it in the context of the current browser tab.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result)"}]},"children":[{"id":3284,"name":"from","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":28,"character":11}],"signatures":[{"id":3285,"name":"from","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)\\nconfigured to load a script from "},{"kind":"code","text":"`sourceUrl`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":28,"character":11}],"parameters":[{"id":3286,"name":"sourceUrl","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The URL to load the script from"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3287,"name":"async","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":173,"character":11}],"signatures":[{"id":3288,"name":"async","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto execute an asynchronous script within the context of the current browser tab.\\n\\nThe script fragment will be executed as the body of an anonymous function.\\nIf the script is provided as a function object, that function will be converted to a string for injection\\ninto the target window.\\n\\nAny arguments provided in addition to the script will be included as script arguments and may be referenced\\nusing the "},{"kind":"code","text":"`arguments`"},{"kind":"text","text":" object. Arguments may be a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", "},{"kind":"code","text":"`string`"},{"kind":"text","text":"\\nor ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\nArrays and objects may also be used as script arguments as long as each item adheres\\nto the types previously mentioned.\\n\\nUnlike executing synchronous JavaScript with ["},{"kind":"code","text":"`ExecuteScript.sync`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/#sync),\\nscripts executed with this function must explicitly signal they are finished by invoking the provided callback.\\n\\nThis callback will always be injected into the executed function as the last argument,\\nand thus may be referenced with "},{"kind":"code","text":"`arguments[arguments.length - 1]`"},{"kind":"text","text":".\\n\\nIf the script invokes the "},{"kind":"code","text":"`callback`"},{"kind":"text","text":" with a return value, this will be made available\\nvia the ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result).\\n\\n**Please note** that in order to signal an error in the "},{"kind":"code","text":"`script`"},{"kind":"text","text":" you need to throw an ["},{"kind":"code","text":"`Error`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error)\\ninstead of passing it to the callback function.\\n\\n#### Executing an async script\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var callback = arguments[arguments.length - 1]\\n\\n    // do stuff\\n\\n    callback(result)\\n  `)\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Executing async script as function\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(function getText(header, callback) {\\n    callback(header.innerText)\\n  }).withArguments(MyPage.header())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Passing arguments to an async script\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var name = arguments[0];\\n    var age = arguments[1];\\n    var callback = arguments[arguments.length - 1]\\n\\n    // do stuff\\n\\n    callback(result)\\n  `).withArguments(\'Bob\', 24)\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Passing PageElement arguments to an async script\\n\\nSerenity/JS automatically converts ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects passed as arguments to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var header = arguments[0]\\n    var callback = arguments[arguments.length - 1]\\n\\n    callback(header.innerText)\\n  `).withArguments(MyPage.header())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using nested data structures containing PageElement objects\\n\\nSerenity/JS automatically converts any ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects\\ncontained in nested data structures passed to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n\\n  article: () =>\\n    PageElement.located(By.css(\'article\')).describedAs(\'article\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var { include, exclude }  = arguments[0]\\n    var callback = arguments[arguments.length - 1]\\n\\n    callback(include[0].innerText)\\n  `).withArguments({\\n    include: [ MyPage.article() ],\\n    exclude: [ MyPage.header() ],\\n  })\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":173,"character":11}],"parameters":[{"id":3289,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The script to be executed"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function"}]}}],"type":{"type":"reference","target":3295,"name":"ExecuteScriptWithArguments","package":"@serenity-js/web"}}]},{"id":3290,"name":"sync","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":285,"character":11}],"signatures":[{"id":3291,"name":"sync","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto execute a synchronous script within the context of the current browser tab.\\n\\nIf the script returns a value, it will be made available via ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result).\\n\\n#### Executing a sync script as string and reading the result\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, LastScriptExecution } from \'@serenity-js/web\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    ExecuteScript.sync(\'return navigator.userAgent\'),\\n    Ensure.that(LastScriptExecution.result<string>(), includes(\'Chrome\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Executing a sync script as function and retrieving the result\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Enter, ExecuteScript, LastScriptExecution, PageElement } from \'@serenity-js/web\'\\n\\nconst Checkout = {\\n  someOfferField: () =>\\n    PageElement.located(By.id(\'offer-code\'))\\n      .describedAs(\'offer code\')\\n\\n  applyOfferCodeField = () =>\\n    PageElement.located(By.id(\'apply-offer-code\'))\\n      .describedAs(\'apply offer field\')\\n}\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    // inject JavaScript to read some property of an element\\n    ExecuteScript.sync(function getValue(element) {\\n        return element.value;\\n    }).withArguments(Checkout.someOfferField()),\\n\\n    // use LastScriptExecution.result() to read the value\\n    // returned from the injected script\\n    // and pass it to another interaction\\n    Enter.theValue(LastScriptExecution.result<string>()).into(Checkout.applyOfferCodeField()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Passing PageElement arguments to a sync script\\n\\nSerenity/JS automatically converts ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects passed as arguments to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.sync(function getInnerHtml(element) {\\n    return element.innerHTML;\\n  }).withArguments(MyPage.header())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using nested data structures containing PageElement objects\\n\\nSerenity/JS automatically converts any ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects\\ncontained in nested data structures passed to the script\\ninto their corresponding DOM elements.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, PageElement } from \'@serenity-js/web\'\\n\\nconst MyPage = {\\n  header: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'header\'),\\n\\n  article: () =>\\n    PageElement.located(By.css(\'article\')).describedAs(\'article\'),\\n}\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(function getInnerHtml(scope) {\\n    return scope.include[0].innerHTML;\\n  `).withArguments({\\n    include: [ MyPage.article() ],\\n    exclude: [ MyPage.header() ],\\n  })\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`LastScriptExecution.result`"},{"kind":"text","text":"](/api/web/class/LastScriptExecution/#result)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":285,"character":11}],"parameters":[{"id":3292,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The script to be executed"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function"}]}}],"type":{"type":"reference","target":3295,"name":"ExecuteScriptWithArguments","package":"@serenity-js/web"}}]},{"id":3293,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3294,"name":"new ExecuteScript","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":3283,"name":"ExecuteScript","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[3293]},{"title":"Methods","children":[3284,3287,3290]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":19,"character":13}],"permalink":"/api/web/class/ExecuteScript","previousId":3236,"nextId":3295},{"id":3295,"name":"ExecuteScriptWithArguments","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Allows for a script to be executed to be parametrised.\\n\\n## Learn more\\n-  ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/)"}]},"children":[{"id":3324,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3325,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3326,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3327,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3328,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3329,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3330,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3330]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3336,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3337,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3306,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":303,"character":4}],"signatures":[{"id":3307,"name":"new ExecuteScriptWithArguments","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":303,"character":4}],"parameters":[{"id":3308,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3309,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Function"},"name":"Function","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function"}]}},{"id":3310,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"defaultValue":"[]"}],"type":{"type":"reference","target":3295,"name":"ExecuteScriptWithArguments","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.constructor"}},{"id":3313,"name":"withArguments","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":317,"character":20}],"signatures":[{"id":3314,"name":"withArguments","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":317,"character":20}],"parameters":[{"id":3315,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"Arguments to parametrise the script with"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3316,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":322,"character":10}],"signatures":[{"id":3317,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":322,"character":10}],"parameters":[{"id":3318,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":652,"name":"CollectsArtifacts","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Constructors","children":[3306]},{"title":"Methods","children":[3324,3326,3336,3313,3316]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":301,"character":22}],"extendedTypes":[{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/ExecuteScriptWithArguments","previousId":3283,"nextId":3338},{"id":3338,"name":"Hover","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto hover the mouse pointer over a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n <a data-test=\\"example-link\\"\\n     class=\\"off\\"\\n     onmouseover=\\"this.className=\'on\';\\"\\n     onmouseout=\\"this.className=\'off\';\\"\\n     href=\\"/\\">hover over me</a>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Example {\\n  static link = () =>\\n    PageElement.located(By.css(\'[data-test=\\"example-link\\"]\'))\\n      .describedAs(\'example link\')\\n }\\n```"},{"kind":"text","text":"\\n\\n## Hovering over an element\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Hover, CssClasses } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Hank\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n     Ensure.that(CssClasses.of(Example.link()), equals([ \'off\' ])),\\n\\n    Hover.over(Example.link),\\n    Ensure.that(CssClasses.of(Example.link()), equals([ \'on\' ])),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3339,"name":"over","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":64,"character":11}],"signatures":[{"id":3340,"name":"over","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":64,"character":11}],"parameters":[{"id":3341,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be hovered over"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3364,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3365,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3414,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3413,"name":"PageElementInteraction.instantiationLocation"}},{"id":3366,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3367,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3368,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3369,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3370,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3370]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3416,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3415,"name":"PageElementInteraction.describedBy"}},{"id":3376,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3377,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3426,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3425,"name":"PageElementInteraction.toString"}},{"id":3356,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":75,"character":10}],"signatures":[{"id":3357,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":75,"character":10}],"parameters":[{"id":3358,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3410,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3409,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3339,3364,3366,3376,3356]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":56,"character":13}],"extendedTypes":[{"type":"reference","target":3390,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Hover","previousId":3295,"nextId":3378},{"id":3378,"name":"Navigate","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate to a specific destination, as well as back and forth in the browser history,\\nor reload the current page.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)"}]},"children":[{"id":3379,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":68,"character":11}],"signatures":[{"id":3380,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate to a given URL.\\n\\nThe URL can be:\\n- absolute, e.g. "},{"kind":"code","text":"`https://example.org/search`"},{"kind":"text","text":"\\n- relative, e.g. "},{"kind":"code","text":"`/search`"},{"kind":"text","text":"\\n\\nIf the URL is relative, your Web test integration tool will append it to any base URL\\nspecified in its respective configuration file.\\n\\n\\n#### Navigate to path relative to baseUrl\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .attemptsTo(\\n    Navigate.to(\'/search\'),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Navigate to an absolute URL (overrides baseUrl)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'https://mycompany.org/login\'),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- ["},{"kind":"code","text":"`Page.navigateTo`"},{"kind":"text","text":"](/api/web/class/Page/#navigateTo)\\n- [WebdriverIO: Configuration Options](https://webdriver.io/docs/options/#baseurl)\\n- [Playwright: Browser](https://playwright.dev/docs/api/class-browser#browser-new-context)\\n- [Playwright: Test Options](https://playwright.dev/docs/api/class-testoptions#test-options-base-url)\\n- [Protractor: Configuration](https://github.com/angular/protractor/blob/master/lib/config.ts)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":68,"character":11}],"parameters":[{"id":3381,"name":"url","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An absolute URL or path an ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n should navigate to"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3382,"name":"back","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":95,"character":11}],"signatures":[{"id":3383,"name":"back","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate back one page in the joint session history of the current top-level browsing context.\\n\\n#### Navigate back in browsing history\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'/first\'),\\n    Navigate.to(\'/second\'),\\n\\n    Navigate.back(),\\n\\n    Ensure.that(Page.current().url().href, endsWith(\'/first\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":95,"character":11}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3384,"name":"forward","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":127,"character":11}],"signatures":[{"id":3385,"name":"forward","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto navigate forward one page in the joint session history of the current top-level browsing context.\\n\\n#### Navigate forward in browsing history\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'/first\'),\\n    Navigate.to(\'/second\'),\\n\\n    Navigate.back(),\\n    Navigate.forward(),\\n\\n    Ensure.that(Page.current().url().href, endsWith(\'/second\')),\\n  )\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":127,"character":11}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3386,"name":"reloadPage","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":156,"character":11}],"signatures":[{"id":3387,"name":"reloadPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto reload the current page.\\n\\n#### Navigate to path relative to baseUrl\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { browser } from \'@wdio/globals\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'/login\'),\\n    Cookie.called(\'session_id\').delete(),\\n    Navigate.reloadPage(),\\n  )\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":156,"character":11}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3388,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3389,"name":"new Navigate","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":3378,"name":"Navigate","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[3388]},{"title":"Methods","children":[3379,3382,3384,3386]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":17,"character":13}],"permalink":"/api/web/class/Navigate","previousId":3338,"nextId":3390},{"id":3390,"name":"PageElementInteraction","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"A base class for interactions with ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) objects.\\n\\n**Note:** The recommended way to implement custom interactions\\nin your code is to use the ["},{"kind":"code","text":"`Interaction.where`"},{"kind":"text","text":"](/api/core/class/Interaction/#where) factory method."}]},"children":[{"id":3413,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3414,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3409,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/core/lib/screenplay/Interaction.ts","line":89,"character":13}],"signatures":[{"id":3410,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Interaction.ts","line":89,"character":13}],"parameters":[{"id":3411,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.performAs"}},{"id":3415,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3416,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3417,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3418,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3419,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3419]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3425,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3426,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[3413,3409,3415,3425]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/PageElementInteraction.ts","line":15,"character":22}],"extendedTypes":[{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}],"extendedBy":[{"type":"reference","target":3110,"name":"Clear"},{"type":"reference","target":3156,"name":"Click"},{"type":"reference","target":3196,"name":"DoubleClick"},{"type":"reference","target":3236,"name":"Enter"},{"type":"reference","target":3338,"name":"Hover"},{"type":"reference","target":3427,"name":"Press"},{"type":"reference","target":3475,"name":"RightClick"}],"permalink":"/api/web/class/PageElementInteraction","previousId":3378,"nextId":3427},{"id":3427,"name":"Press","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto send a key press or a sequence of keys to a Web element.\\n\\n**Note:** On macOS, some keyboard shortcuts might not work\\nwith the ["},{"kind":"code","text":"`devtools`"},{"kind":"text","text":" protocol](https://webdriver.io/docs/automationProtocols/#devtools-protocol).\\n\\n For example:\\n - to *copy*, instead of ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta)+"},{"kind":"code","text":"`C`"},{"kind":"text","text":", use ["},{"kind":"code","text":"`Key.Control`"},{"kind":"text","text":"](/api/web/class/Key/#Control)+["},{"kind":"code","text":"`Key.Insert`"},{"kind":"text","text":"](/api/web/class/Key/#Insert)\\n - to *cut*, instead of ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta)+"},{"kind":"code","text":"`X`"},{"kind":"text","text":", use ["},{"kind":"code","text":"`Key.Control`"},{"kind":"text","text":"](/api/web/class/Key/#Control)+["},{"kind":"code","text":"`Key.Delete`"},{"kind":"text","text":"](/api/web/class/Key/#Delete)\\n - to *paste*, instead of ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta)+"},{"kind":"code","text":"`V`"},{"kind":"text","text":", use ["},{"kind":"code","text":"`Key.Shift`"},{"kind":"text","text":"](/api/web/class/Key/#Shift)+["},{"kind":"code","text":"`Key.Insert`"},{"kind":"text","text":"](/api/web/class/Key/#Insert)\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<form>\\n  <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Form {\\n  static exampleInput = () =>\\n    PageElement.located(By.id(\'example\'))\\n      .describedAs(\'example input\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Pressing keys\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Key, Press, Value } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Priyanka\')\\n  .attemptsTo(\\n    Press.the(\'H\', \'i\', \'!\', Key.ENTER).in(Form.exampleInput()),\\n    Ensure.that(Value.of(Form.exampleInput), equals(\'Hi!\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Key`"},{"kind":"text","text":"](/api/web/class/Key/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3428,"name":"the","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":11}],"signatures":[{"id":3429,"name":"the","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto press a sequence of [keys](/api/web/class/Key/),\\n\\nWhen no "},{"kind":"code","text":"`field`"},{"kind":"text","text":" is specified, the key sequence will be sent to the currently focused element,\\nand if no element is focused - to the "},{"kind":"code","text":"`document.body`"},{"kind":"text","text":" to handle."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":11}],"parameters":[{"id":3430,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of one or more keys to press"}]},"type":{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},{"type":"array","elementType":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"intersection","types":[{"type":"reference","target":567,"name":"Activity","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3431,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3432,"name":"in","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":90}],"type":{"type":"reflection","declaration":{"id":3433,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":94}],"signatures":[{"id":3434,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":94}],"parameters":[{"id":3435,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3432]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":88}]}}]}}]},{"id":3461,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3462,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3414,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3413,"name":"PageElementInteraction.instantiationLocation"}},{"id":3463,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3464,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3465,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3466,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3467,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3467]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3416,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3415,"name":"PageElementInteraction.describedBy"}},{"id":3473,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3474,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3426,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3425,"name":"PageElementInteraction.toString"}},{"id":3449,"name":"in","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":86,"character":4}],"signatures":[{"id":3450,"name":"in","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Send the key sequence to a specific element."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":86,"character":4}],"parameters":[{"id":3451,"name":"field","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3453,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":103,"character":10}],"signatures":[{"id":3454,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":103,"character":10}],"parameters":[{"id":3455,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3410,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3409,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3428,3461,3463,3473,3449,3453]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":64,"character":13}],"extendedTypes":[{"type":"reference","target":3390,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/Press","previousId":3390,"nextId":3475},{"id":3475,"name":"RightClick","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\r\\nto perform a right click on a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\r\\n\\r\\nThis is typically used to open a [custom context menu](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event)\\r\\non a given Web element, since it\'s not possible to interact with the standard context menu offered by your browser.\\r\\n\\r\\n## Example widget\\r\\n\\r\\n"},{"kind":"code","text":"```html\\r\\n<form>\\r\\n  <input type=\\"text\\" id=\\"field\\"\\r\\n    oncontextmenu=\\"showMenu(); return false;\\" />\\r\\n\\r\\n  <div id=\\"context-menu\\" style=\\"display:none\\">\\r\\n    Custom context menu\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<script>\\r\\n  function showMenu() {\\r\\n    document.getElementById(\\"context-menu\\").style.display = \'block\';\\r\\n  }\\r\\n<\/script>\\r\\n```"},{"kind":"text","text":"\\r\\n\\r\\n## Lean Page Object describing the widget\\r\\n\\r\\n"},{"kind":"code","text":"```ts\\r\\nimport { By, PageElement } from \'@serenity-js/web\'\\r\\n\\r\\nclass Form {\\r\\n  static exampleInput = () =>\\r\\n    PageElement.located(By.id(\'example\'))\\r\\n      .describedAs(\'example input\')\\r\\n\\r\\n  static exampleContextMenu = () =>\\r\\n    PageElement.located(By.id(\'context-menu\'))\\r\\n      .describedAs(\'example context menu\')\\r\\n}\\r\\n```"},{"kind":"text","text":"\\r\\n\\r\\n## Right-click on an element\\r\\n\\r\\n"},{"kind":"code","text":"```ts\\r\\nimport { actorCalled } from \'@serenity-js/core\'\\r\\nimport { RightClick, isVisible } from \'@serenity-js/web\'\\r\\nimport { Ensure } from \'@serenity-js/assertions\'\\r\\n\\r\\nawait actorCalled(\'Chlo\xe9\')\\r\\n  .whoCan(BrowseTheWeb.using(browser))\\r\\n  .attemptsTo(\\r\\n    RightClick.on(Form.exampleInput()),\\r\\n    Ensure.that(Form.exampleContextMenu(), isVisible()),\\r\\n  )\\r\\n```"},{"kind":"text","text":"\\r\\n\\r\\n## Learn more\\r\\n\\r\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\r\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3476,"name":"on","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":78,"character":11}],"signatures":[{"id":3477,"name":"on","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":78,"character":11}],"parameters":[{"id":3478,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to be right-clicked on"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3501,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3502,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":3414,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":3413,"name":"PageElementInteraction.instantiationLocation"}},{"id":3503,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3504,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3505,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3506,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3507,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3507]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":3416,"name":"PageElementInteraction.describedBy"}}],"inheritedFrom":{"type":"reference","target":3415,"name":"PageElementInteraction.describedBy"}},{"id":3513,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3514,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3426,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","target":3425,"name":"PageElementInteraction.toString"}},{"id":3493,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":89,"character":10}],"signatures":[{"id":3494,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the provided ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to perform this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\n- ["},{"kind":"code","text":"`PerformsActivities`"},{"kind":"text","text":"](/api/core/interface/PerformsActivities/)\\n- ["},{"kind":"code","text":"`UsesAbilities`"},{"kind":"text","text":"](/api/core/interface/UsesAbilities/)\\n- ["},{"kind":"code","text":"`AnswersQuestions`"},{"kind":"text","text":"](/api/core/interface/AnswersQuestions/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":89,"character":10}],"parameters":[{"id":3495,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3410,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","target":3409,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[3476,3501,3503,3513,3493]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":71,"character":13}],"extendedTypes":[{"type":"reference","target":3390,"name":"PageElementInteraction","package":"@serenity-js/web"}],"permalink":"/api/web/class/RightClick","previousId":3427,"nextId":3515},{"id":3515,"name":"Scroll","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto scroll until a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) comes into view.\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n\x3c!--\\n  an element somewhere at the bottom of the page,\\n  outside of the visible area\\n--\x3e\\n<input type=\\"submit\\" id=\\"submit\\" />\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Form {\\n  static submitButton = () => {\\n    PageElement.located(By.id(\'submit\'))\\n      .describedAs(\'submit button\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Scrolling to element\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure } from \'@serenity-js/assertions\'\\nimport { Scroll, isVisible } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Sara\')\\n  .attemptsTo(\\n    Scroll.to(Form.submitButton()),\\n    Ensure.that(Form.submitButton(), isVisible()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"children":[{"id":3516,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":61,"character":11}],"signatures":[{"id":3517,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":61,"character":11}],"parameters":[{"id":3518,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The element to scroll to"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3515,"name":"Scroll","package":"@serenity-js/web"}}]},{"id":3537,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3538,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3539,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3540,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3541,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3542,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3543,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3543]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3549,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3550,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3533,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":72,"character":10}],"signatures":[{"id":3534,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":72,"character":10}],"parameters":[{"id":3535,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[3516,3537,3539,3549,3533]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":53,"character":13}],"extendedTypes":[{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/Scroll","previousId":3475,"nextId":3551},{"id":3551,"name":"Select","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto select an option from a [HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select),\\neither by its display name, or by value.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Selected`"},{"kind":"text","text":"](/api/web/class/Selected/)"}]},"children":[{"id":3552,"name":"value","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":11}],"signatures":[{"id":3553,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select a single ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nwith a given ["},{"kind":"code","text":"`value`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#attr-value).,\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"C\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\';\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.value(\'UK\').from(Countries.dropdown()),\\n    Ensure.that(Selected.valueOf(Countries.dropdown()), equals(\'UK\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Selected.valueOf`"},{"kind":"text","text":"](/api/web/class/Selected/#valueOf)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":11}],"parameters":[{"id":3554,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A value of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":3555,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3556,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":47}],"type":{"type":"reflection","declaration":{"id":3557,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":53}],"signatures":[{"id":3558,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":53}],"parameters":[{"id":3559,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3556]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":70,"character":45}]}}}]},{"id":3560,"name":"values","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":11}],"signatures":[{"id":3561,"name":"values","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select multiple ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":" elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nidentified by their ["},{"kind":"code","text":"`value`"},{"kind":"text","text":"s](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#attr-value).\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```ts\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.values(\'UK\').from(Countries.dropdown()),\\n    Ensure.that(Selected.valuesOf(Countries.dropdown()), equals([ \'UK\' ])),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- ["},{"kind":"code","text":"`Selected.valuesOf`"},{"kind":"text","text":"](/api/web/class/Selected/#valuesOf)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":11}],"parameters":[{"id":3562,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"Values of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reflection","declaration":{"id":3563,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3564,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":70}],"type":{"type":"reflection","declaration":{"id":3565,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":76}],"signatures":[{"id":3566,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":76}],"parameters":[{"id":3567,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3564]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":133,"character":68}]}}}]},{"id":3568,"name":"option","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":11}],"signatures":[{"id":3569,"name":"option","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select a single ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nwith a given description.\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/by\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.option(\'Poland\').from(Countries.dropdown()),\\n    Ensure.that(\\n      Selected.optionIn(Countries.dropdown()),\\n      equals(\'Poland\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Selected.optionIn`"},{"kind":"text","text":"](/api/web/class/Selected/#optionIn)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":11}],"parameters":[{"id":3570,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Text of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reflection","declaration":{"id":3571,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3572,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":48}],"type":{"type":"reflection","declaration":{"id":3573,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":54}],"signatures":[{"id":3574,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":54}],"parameters":[{"id":3575,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3572]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":201,"character":46}]}}}]},{"id":3576,"name":"options","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":11}],"signatures":[{"id":3577,"name":"options","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates an [interaction](/api/core/class/Interaction/)\\nthat instructs the [actor](/api/core/class/Actor/)\\nto select multiple ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":" elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nidentified by their descriptions.\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n##### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.options(\'Poland\', \'United States\').from(Countries.dropdown()),\\n    Ensure.that(\\n      Selected.optionsIn(Countries.dropdown()),\\n      equals([ \'Poland\', \'United States\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Selected.optionsIn`"},{"kind":"text","text":"](/api/web/class/Selected/#optionsIn)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":11}],"parameters":[{"id":3578,"name":"values","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"Text of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" elements  ](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to select"}]},"type":{"type":"array","elementType":{"type":"reference","target":648,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}],"name":"Answerable","package":"@serenity-js/core"}}}],"type":{"type":"reflection","declaration":{"id":3579,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3580,"name":"from","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":71}],"type":{"type":"reflection","declaration":{"id":3581,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":77}],"signatures":[{"id":3582,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":77}],"parameters":[{"id":3583,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]}}}],"groups":[{"title":"Properties","children":[3580]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":267,"character":69}]}}}]},{"id":3584,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3585,"name":"new Select","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":3551,"name":"Select","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[3584]},{"title":"Methods","children":[3552,3560,3568,3576]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":18,"character":13}],"permalink":"/api/web/class/Select","previousId":3515,"nextId":3586},{"id":3586,"name":"Switch","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/) who has the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto switch the context for future activities to a ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/), such as a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\nPlease note that when the ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) implementing ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/) represents an ["},{"kind":"code","text":"`iframe`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe),\\nusing ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/) will result in switching the top-level browsing context to that ["},{"kind":"code","text":"`iframe`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe).\\n\\nWhen the ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) represents any other [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement),\\nusing ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/) sets ["},{"kind":"code","text":"`HTMLElement#focus`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus)\\non the specified element. Assuming it can be focused.\\n\\n**Note:** The focused element is the element which will receive keyboard [press](/api/web/class/Press/) events by default.\\n\\n## Perform activities in the context of an iframe\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Click, Enter, PageElement, Switch } from \'@serenity-js/web\'\\n\\n// Lean Page Object describing a login form, embedded in an iframe\\nclass LoginForm {\\n  static iframe = () =>\\n    PageElement.located(By.css(\'iframe\'))\\n      .describedAs(\'login form\')\\n\\n  static usernameField = () =>\\n    PageElement.located(By.css(\'[data-testid=\\"username\\"]\'))\\n      .describedAs(\'username field\')\\n\\n  static passwordField = () =>\\n    PageElement.located(By.css(\'[data-testid=\\"password\\"]\'))\\n      .describedAs(\'password field\')\\n\\n  static submitButton = () =>\\n    PageElement.located(By.css(\'button[type=\\"submit\\"]\'))\\n      .describedAs(\'submit button\')\\n }\\n\\n await actorCalled(\'Francesca\')\\n   .attemptsTo(\\n     Switch.to(LoginForm.iframe).and(\\n       Enter.theValue(\'francesca@example.org\').into(LoginForm.usernameField()),\\n       Enter.theValue(\'correct-horse-battery-staple\').into(LoginForm.passwordField()),\\n       Click.on(LoginForm.submitButton()),\\n     )\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Perform activities in the context of another page\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Click, Enter, Switch } from \'@serenity-js/web\'\\nimport { browser } from \'@wdio/globals\'\\n\\nawait actorCalled(\'Francesca\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Switch.to(Page.whichName(startsWith(\'popup\'))).and(\\n      // perform some activities in the context of the new window\\n\\n      // optionally, close the browser tab\\n      Page.current().close(),\\n    ),\\n\\n    // Note that switching back to the original page happens automatically\\n    // after the last activity from the list finishes\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Perform activities in the context of a focused page element\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Key, PageElement, Press, Switch, Value } from \'@serenity-js/web\'\\nimport { browser } from \'@wdio/globals\'\\n\\nconst inputField = () =>\\n  PageElement.located(By.css(\'input\'));\\n\\nawait actorCalled(\'Francesca\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Switch.to(inputField()).and(\\n      Press.the(\'h\', \'e\', \'l\', \'l\', \'o\'),\\n      Press.the(Key.Tab),\\n    ),\\n    Ensure.that(Value.of(inputField()), equals(\'hello\'))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)\\n- ["},{"kind":"code","text":"`SwitchableOrigin`"},{"kind":"text","text":"](/api/web/interface/SwitchableOrigin/)"}]},"children":[{"id":3587,"name":"to","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":115,"character":11}],"signatures":[{"id":3588,"name":"to","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto switch the context for future activities to a ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/),\\nsuch as a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":115,"character":11}],"parameters":[{"id":3589,"name":"switchable","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4633,"name":"Switchable","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":3586,"name":"Switch","package":"@serenity-js/web"}}]},{"id":3611,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3612,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3613,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3614,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3615,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3616,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3617,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3617]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3623,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3624,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3604,"name":"and","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":132,"character":4}],"signatures":[{"id":3605,"name":"and","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)\\nto switch the context for future activities to a ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/),\\nsuch as a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) or a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/),\\nperform a sequence of "},{"kind":"code","text":"`activities`"},{"kind":"text","text":", and then switch the context back."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":132,"character":4}],"parameters":[{"id":3606,"name":"activities","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of activities to perform"}]},"type":{"type":"array","elementType":{"type":"reference","target":567,"name":"Activity","package":"@serenity-js/core"}}}],"type":{"type":"reference","target":1538,"name":"Task","package":"@serenity-js/core"}}]},{"id":3607,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":139,"character":10}],"signatures":[{"id":3608,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":139,"character":10}],"parameters":[{"id":3609,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[3587,3611,3613,3623,3604,3607]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":106,"character":13}],"extendedTypes":[{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/Switch","previousId":3551,"nextId":3625},{"id":3625,"name":"TakeScreenshot","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instructs an [actor](/api/core/class/Actor/)\\nwho has the [ability](/api/core/class/Ability/)\\nto ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nto take a screenshot and emit an artifact,\\nwhich can then be persisted by ["},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":"](/api/core/class/ArtifactArchiver/)\\nand reported by [Serenity BDD reporter](/api/serenity-bdd).\\n\\n#### Taking a screenshot\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Navigate, TakeScreenshot } from \'@serenity-js/protractor\';\\n\\nawait actorCalled(\'Tania\')\\n  .attemptsTo(\\n    Navigate.to(\'/app\'),\\n    TakeScreenshot.of(\'my app\'),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`CollectsArtifacts`"},{"kind":"text","text":"](/api/core/interface/CollectsArtifacts/)\\n- ["},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":"](/api/core/class/ArtifactArchiver/)"}]},"children":[{"id":3626,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":44,"character":11}],"signatures":[{"id":3627,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates this ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":44,"character":11}],"parameters":[{"id":3628,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name to give the emitted artifact"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3647,"name":"instantiationLocation","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"signatures":[{"id":3648,"name":"instantiationLocation","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the location where this ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) was instantiated."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.ts","line":25,"character":4}],"type":{"type":"reference","name":"FileSystemLocation","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.instantiationLocation"}},{"id":3649,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":3650,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":3651,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":3652,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3653,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3653]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.describedBy"}},{"id":3659,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":3660,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Interaction.toString"}},{"id":3643,"name":"performAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":55,"character":10}],"signatures":[{"id":3644,"name":"performAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":55,"character":10}],"parameters":[{"id":3645,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":652,"name":"CollectsArtifacts","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","target":-1,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[3626,3647,3649,3659,3643]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":36,"character":13}],"extendedTypes":[{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}],"permalink":"/api/web/class/TakeScreenshot","previousId":3586,"nextId":3661},{"id":3661,"name":"ArgumentDehydrator","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":3662,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":13,"character":4}],"signatures":[{"id":3663,"name":"new ArgumentDehydrator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":13,"character":4}],"typeParameter":[{"id":3664,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":3665,"name":"U","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":3666,"name":"shouldReference","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":3667,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":14,"character":42}],"signatures":[{"id":3668,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":14,"character":42}],"parameters":[{"id":3669,"name":"item","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"predicate","name":"item","asserts":false,"targetType":{"type":"reference","target":3664,"name":"T","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.T","refersToTypeParameter":true}}}]}}},{"id":3670,"name":"transformation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":3671,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":15,"character":41}],"signatures":[{"id":3672,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":15,"character":41}],"parameters":[{"id":3673,"name":"item","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3664,"name":"T","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.T","refersToTypeParameter":true}}],"type":{"type":"union","types":[{"type":"reference","target":3665,"name":"U","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.U","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3665,"name":"U","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.U","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":3661,"typeArguments":[{"type":"reference","target":3664,"name":"T","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.T","refersToTypeParameter":true},{"type":"reference","target":3665,"name":"U","package":"@serenity-js/web","qualifiedName":"ArgumentDehydrator.U","refersToTypeParameter":true}],"name":"ArgumentDehydrator","package":"@serenity-js/web"}}]},{"id":3682,"name":"dehydrate","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":19,"character":17}],"signatures":[{"id":3683,"name":"dehydrate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":19,"character":17}],"parameters":[{"id":3684,"name":"inputArgs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"tuple","elements":[{"type":"reflection","declaration":{"id":3685,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3686,"name":"argsCount","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":19,"character":63}],"type":{"type":"intrinsic","name":"number"}},{"id":3687,"name":"refsCount","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":19,"character":82}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[3686,3687]}],"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":19,"character":61}]}},{"type":"rest","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}]}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[3662]},{"title":"Methods","children":[3682]}],"sources":[{"fileName":"packages/web/src/screenplay/models/ArgumentDehydrator.ts","line":12,"character":13}],"typeParameters":[{"id":3696,"name":"T","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":3697,"name":"U","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"permalink":"/api/web/class/ArgumentDehydrator","previousId":3625,"nextId":3007},{"id":3698,"name":"BrowserCapabilities","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Basic meta-data about the browser used in the test\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb.browserCapabilities`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/#browserCapabilities)"}]},"children":[{"id":3699,"name":"platformName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the operating system platform the test is executed on, like "},{"kind":"code","text":"`darwin`"},{"kind":"text","text":", "},{"kind":"code","text":"`linux`"},{"kind":"text","text":" or "},{"kind":"code","text":"`windows`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":15,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3700,"name":"browserName","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the Web browser the test is executed in, like "},{"kind":"code","text":"`chrome`"},{"kind":"text","text":", "},{"kind":"code","text":"`firefox`"},{"kind":"text","text":" or "},{"kind":"code","text":"`safari`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":20,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3701,"name":"browserVersion","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Version number of the browser the test is executed in."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":25,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3699,3700,3701]}],"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":10,"character":17}],"permalink":"/api/web/interface/BrowserCapabilities","previousId":3090,"nextId":3702},{"id":3702,"name":"BrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Represents the pages open in the current browsing context.\\n\\nYou\'ll need to use this class directly only if you\'re planning to integrate Serenity/JS\\nwith a new Web integration tool."}]},"children":[{"id":3703,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3704,"name":"new BrowsingSession","variant":"signature","kind":16384,"flags":{"isExternal":true},"typeParameter":[{"id":3705,"name":"Page_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":4072,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}}],"type":{"type":"reference","target":3702,"typeArguments":[{"type":"reference","target":3705,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}],"name":"BrowsingSession","package":"@serenity-js/web"}}]},{"id":3708,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":18,"character":10}],"signatures":[{"id":3709,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":18,"character":10}],"parameters":[{"id":3710,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3705,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3713,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":37,"character":20}],"signatures":[{"id":3714,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this browsing session."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":37,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3698,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3715,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":42,"character":10}],"signatures":[{"id":3716,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":42,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3705,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3717,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":55,"character":4}],"signatures":[{"id":3718,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":55,"character":4}],"parameters":[{"id":3719,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":3705,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":3720,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":67,"character":4}],"signatures":[{"id":3721,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":67,"character":4}],"parameters":[{"id":3722,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":3723,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":77,"character":10}],"signatures":[{"id":3724,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a [pages](/api/web/class/Page/) representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":77,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":3705,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3725,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":84,"character":4}],"signatures":[{"id":3726,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":84,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}]},{"id":3727,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":106,"character":10}],"signatures":[{"id":3728,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs the ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":106,"character":10}],"parameters":[{"id":3729,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3705,"name":"Page_Type","package":"@serenity-js/web","qualifiedName":"BrowsingSession.Page_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3730,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":113,"character":10}],"signatures":[{"id":3731,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":113,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[3703]},{"title":"Methods","children":[3708,3713,3715,3717,3720,3723,3725,3727,3730]}],"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":14,"character":22}],"typeParameters":[{"id":3732,"name":"Page_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"reference","target":4072,"name":"Page","package":"@serenity-js/web"}}],"permalink":"/api/web/class/BrowsingSession","previousId":3698,"nextId":3733},{"id":3733,"name":"Cookie","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"A Screenplay Pattern-style model responsible for managing cookies available to the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/).\\n\\n## Checking if a cookie exists\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { Ensure, isPresent } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Sid\')\\n  .attemptsTo(\\n    Navigate.to(\'https://example.org\'),\\n\\n    Ensure.that(\\n      Cookie.called(\'example-cookie-name\'),\\n      isPresent()\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Setting a cookie\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { Ensure, isPresent, not } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Sid\')\\n  .attemptsTo(\\n    Navigate.to(\'https://example.org\'),\\n\\n    Ensure.that(Cookie.called(\'example-cookie-name\'), not(isPresent())),\\n\\n    Cookie.set({\\n      name:  \'favourite\',\\n      value: \'triple chocolate\',\\n    }),\\n\\n    Ensure.that(Cookie.called(\'example-cookie-name\'), isPresent()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Reading a cookie\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Sid\')\\n  .attemptsTo(\\n    Navigate.to(\'https://example.org\'),\\n\\n    Ensure.that(\\n      Cookie.called(\'some-cookie-name\').value(),\\n      equals(\'triple chocolate\')\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`CookieData`"},{"kind":"text","text":"](/api/web/interface/CookieData/)\\n- ["},{"kind":"code","text":"`Page.cookie`"},{"kind":"text","text":"](/api/web/class/Page/#cookie)"}]},"children":[{"id":3734,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":84,"character":11}],"signatures":[{"id":3735,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/) identified by "},{"kind":"code","text":"`name`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":84,"character":11}],"parameters":[{"id":3736,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":3733,"name":"Cookie","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":3737,"name":"set","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":102,"character":11}],"signatures":[{"id":3738,"name":"set","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets a cookie for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/). Note that ["},{"kind":"code","text":"`CookieData`"},{"kind":"text","text":"](/api/web/interface/CookieData/) can be either a plain-old JavaScript object, or an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) ["},{"kind":"code","text":"`WithAnswerableProperties`"},{"kind":"text","text":"](/api/core/#WithAnswerableProperties).\\n\\n:::info\\nMake sure that the actor performing this interaction is on the page that should receive the cookie.\\nBecause of browser security restrictions, an actor can\'t set a cookie for an arbitrary page without being on that page.\\n:::"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":102,"character":11}],"parameters":[{"id":3739,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reflection","declaration":{"id":3740,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3741,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":18,"character":4}],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3742,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":23,"character":4}],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3743,"name":"domain","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The domain this cookie is visible to.\\n\\nDefaults to the current browsing context\'s document\'s URL when setting a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":30,"character":4}],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3744,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The cookie path. Defaults to \\"/\\" when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":35,"character":4}],"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":3745,"name":"expiry","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The [timestamp](/api/core/class/Timestamp/) describing the point in time when this cookie expires."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":40,"character":4}],"type":{"type":"reflection","declaration":{"id":3746,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3747,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":16,"character":13}],"type":{"type":"reflection","declaration":{"id":3748,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":3792,"name":"[toPrimitive]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3749,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3750,"name":"toDateString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3751,"name":"toTimeString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3752,"name":"toLocaleString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3753,"name":"toLocaleDateString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3754,"name":"toLocaleTimeString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3755,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3756,"name":"getTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3757,"name":"getFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3758,"name":"getUTCFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3759,"name":"getMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3760,"name":"getUTCMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3761,"name":"getDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3762,"name":"getUTCDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3763,"name":"getDay","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3764,"name":"getUTCDay","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3765,"name":"getHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3766,"name":"getUTCHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3767,"name":"getMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3768,"name":"getUTCMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3769,"name":"getSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3770,"name":"getUTCSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3771,"name":"getMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3772,"name":"getUTCMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3773,"name":"getTimezoneOffset","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3774,"name":"setTime","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3775,"name":"setMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3776,"name":"setUTCMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3777,"name":"setSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3778,"name":"setUTCSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3779,"name":"setMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3780,"name":"setUTCMinutes","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3781,"name":"setHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3782,"name":"setUTCHours","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3783,"name":"setDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3784,"name":"setUTCDate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3785,"name":"setMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3786,"name":"setUTCMonth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3787,"name":"setFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3788,"name":"setUTCFullYear","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3789,"name":"toUTCString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3790,"name":"toISOString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]},{"id":3791,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Methods","children":[3792,3749,3750,3751,3752,3753,3754,3755,3756,3757,3758,3759,3760,3761,3762,3763,3764,3765,3766,3767,3768,3769,3770,3771,3772,3773,3774,3775,3776,3777,3778,3779,3780,3781,3782,3783,3784,3785,3786,3787,3788,3789,3790,3791]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":3793,"name":"diff","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":22,"character":4}]},{"id":3794,"name":"plus","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":23,"character":4}]},{"id":3795,"name":"less","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":24,"character":4}]},{"id":3796,"name":"isBefore","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":25,"character":4}]},{"id":3797,"name":"isBeforeOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":26,"character":4}]},{"id":3798,"name":"isAfter","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":27,"character":4}]},{"id":3799,"name":"isAfterOrEqual","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":28,"character":4}]},{"id":3800,"name":"toMilliseconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":29,"character":4}]},{"id":3801,"name":"toSeconds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":30,"character":4}]},{"id":3802,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":31,"character":4}]},{"id":3803,"name":"toISOString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":32,"character":4}]},{"id":3804,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":33,"character":4}]},{"id":3805,"name":"[custom]","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/time/models/Timestamp.ts","line":34,"character":4}]},{"id":3806,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[]}],"groups":[{"title":"Properties","children":[3747]},{"title":"Methods","children":[3793,3794,3795,3796,3797,3798,3799,3800,3801,3802,3803,3804,3805,3806]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}},{"id":3807,"name":"httpOnly","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is an HTTP-only cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":46,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":3808,"name":"secure","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is a secure cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":52,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":false}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":true}],"name":"Answerable","package":"@serenity-js/core"}]}},{"id":3809,"name":"sameSite","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie applies to a "},{"kind":"code","text":"`SameSite`"},{"kind":"text","text":" policy.\\nDefaults to "},{"kind":"code","text":"`None`"},{"kind":"text","text":" if omitted when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":58,"character":4}],"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"Lax"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"Strict"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":648,"typeArguments":[{"type":"literal","value":"None"}],"name":"Answerable","package":"@serenity-js/core"}]}}],"groups":[{"title":"Properties","children":[3741,3742,3743,3744,3745,3807,3808,3809]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.ts","line":30,"character":188}]}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3810,"name":"deleteAll","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":127,"character":11}],"signatures":[{"id":3811,"name":"deleteAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates an [interaction](/api/core/class/Interaction/) to delete all cookies available to the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/).."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":127,"character":11}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3817,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":143,"character":4}],"signatures":[{"id":3818,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":143,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":3819,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":153,"character":10}],"signatures":[{"id":3820,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":153,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":3821,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":170,"character":10}],"signatures":[{"id":3822,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":170,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3823,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":178,"character":10}],"signatures":[{"id":3824,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":178,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3825,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":186,"character":10}],"signatures":[{"id":3826,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":186,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3827,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":197,"character":10}],"signatures":[{"id":3828,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":197,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3829,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":208,"character":10}],"signatures":[{"id":3830,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":208,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3831,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":219,"character":10}],"signatures":[{"id":3832,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":219,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3833,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":227,"character":13}],"signatures":[{"id":3834,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Deletes a given cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":227,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[3734,3737,3810,3817,3819,3821,3823,3825,3827,3829,3831,3833]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":77,"character":22}],"implementedTypes":[{"type":"reference","target":890,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/Cookie","previousId":3702,"nextId":3839},{"id":3839,"name":"CookieData","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A data structure describing a ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/) to be set, or one that\'s been read.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)\\n- ["},{"kind":"code","text":"`Page.cookie`"},{"kind":"text","text":"](/api/web/class/Page/#cookie)"}]},"children":[{"id":3840,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":18,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3841,"name":"value","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The value of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":23,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3842,"name":"domain","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The domain this cookie is visible to.\\n\\nDefaults to the current browsing context\'s document\'s URL when setting a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":30,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3843,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The cookie path. Defaults to \\"/\\" when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":35,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":3844,"name":"expiry","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The [timestamp](/api/core/class/Timestamp/) describing the point in time when this cookie expires."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":40,"character":4}],"type":{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}},{"id":3845,"name":"httpOnly","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is an HTTP-only cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":46,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3846,"name":"secure","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is a secure cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":52,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3847,"name":"sameSite","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie applies to a "},{"kind":"code","text":"`SameSite`"},{"kind":"text","text":" policy.\\nDefaults to "},{"kind":"code","text":"`None`"},{"kind":"text","text":" if omitted when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":58,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"Lax"},{"type":"literal","value":"Strict"},{"type":"literal","value":"None"}]}}],"groups":[{"title":"Properties","children":[3840,3841,3842,3843,3844,3845,3846,3847]}],"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":13,"character":17}],"permalink":"/api/web/interface/CookieData","previousId":3733,"nextId":3956},{"id":3956,"name":"Key","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Represents keyboard keys that aren\'t text, and that can be used with the [interaction](/api/core/class/Interaction/) to ["},{"kind":"code","text":"`Press`"},{"kind":"text","text":"](/api/web/class/Press/).\\n\\n**Note:** Modifier keys like ["},{"kind":"code","text":"`Key.Shift`"},{"kind":"text","text":"](/api/web/class/Key/#Shift), ["},{"kind":"code","text":"`Key.Alt`"},{"kind":"text","text":"](/api/web/class/Key/#Alt) and ["},{"kind":"code","text":"`Key.Meta`"},{"kind":"text","text":"](/api/web/class/Key/#Meta) (a.k.a. \\"Command\\" on Mac) will stay pressed,\\nso there\'s no need to depress them.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Press`"},{"kind":"text","text":"](/api/web/class/Press/)\\n- ["},{"kind":"code","text":"`Page.sendKeys`"},{"kind":"text","text":"](/api/web/class/Page/#sendKeys)\\n- [W3C WebDriver Spec: Keyboard Actions](https://w3c.github.io/webdriver/webdriver-spec.html#keyboard-actions)\\n- [Selenium WebDriver: Inputs](https://github.com/SeleniumHQ/selenium/blob/trunk/javascript/node/selenium-webdriver/lib/input.js#L46)\\n- [WebdriverIO: Constants](https://github.com/webdriverio/webdriverio/blob/main/packages/wdio-utils/src/constants.ts#L5)"}]},"children":[{"id":3957,"name":"Alt","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":18,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3958,"name":"ArrowDown","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":19,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3959,"name":"ArrowLeft","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":20,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3960,"name":"ArrowRight","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":21,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3961,"name":"ArrowUp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":22,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3962,"name":"Backspace","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":23,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3963,"name":"Cancel","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":24,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3964,"name":"Clear","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":25,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3965,"name":"Control","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":26,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3966,"name":"Delete","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":27,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3967,"name":"End","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":28,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3968,"name":"Enter","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":29,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3969,"name":"Escape","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":30,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3970,"name":"F1","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":31,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3971,"name":"F2","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":32,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3972,"name":"F3","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":33,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3973,"name":"F4","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":34,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3974,"name":"F5","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":35,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3975,"name":"F6","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":36,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3976,"name":"F7","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":37,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3977,"name":"F8","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":38,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3978,"name":"F9","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":39,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3979,"name":"F10","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":40,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3980,"name":"F11","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":41,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3981,"name":"F12","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":42,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3982,"name":"Help","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":43,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3983,"name":"Home","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":44,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3984,"name":"Insert","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":45,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3985,"name":"Meta","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":46,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3986,"name":"Numpad0","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":47,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3987,"name":"Numpad1","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":48,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3988,"name":"Numpad2","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":49,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3989,"name":"Numpad3","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":50,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3990,"name":"Numpad4","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":51,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3991,"name":"Numpad5","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":52,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3992,"name":"Numpad6","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":53,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3993,"name":"Numpad7","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":54,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3994,"name":"Numpad8","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":55,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3995,"name":"Numpad9","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":56,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3996,"name":"NumpadAdd","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":57,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3997,"name":"NumpadDecimal","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":58,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3998,"name":"NumpadDivide","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":59,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":3999,"name":"NumpadEqual","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":60,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4000,"name":"NumpadMultiply","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":61,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4001,"name":"NumpadSubtract","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":62,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4002,"name":"PageDown","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":63,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4003,"name":"PageUp","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":64,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4004,"name":"Pause","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":65,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4005,"name":"Semicolon","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":66,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4006,"name":"Shift","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":67,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4007,"name":"Space","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":68,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4008,"name":"Tab","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":69,"character":18}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"},"defaultValue":"..."},{"id":4009,"name":"isKey","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":71,"character":18}],"signatures":[{"id":4010,"name":"isKey","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":71,"character":18}],"parameters":[{"id":4011,"name":"maybeKey","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"maybeKey","asserts":false,"targetType":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"}}}]},{"id":4012,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":76,"character":4}],"signatures":[{"id":4013,"name":"new Key","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":76,"character":4}],"parameters":[{"id":4014,"name":"devtoolsName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":4015,"name":"utf16codePoint","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":4016,"name":"isModifier","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"}}]},{"id":4017,"name":"devtoolsName","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":77,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4018,"name":"utf16codePoint","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":78,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4019,"name":"isModifier","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":79,"character":24}],"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"id":4020,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":83,"character":4}],"signatures":[{"id":4021,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":83,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[4012]},{"title":"Properties","children":[3957,3958,3959,3960,3961,3962,3963,3964,3965,3966,3967,3968,3969,3970,3971,3972,3973,3974,3975,3976,3977,3978,3979,3980,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,3992,3993,3994,3995,3996,3997,3998,3999,4000,4001,4002,4003,4004,4005,4006,4007,4008,4017,4018,4019]},{"title":"Methods","children":[4009,4020]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":17,"character":13}],"permalink":"/api/web/class/Key","previousId":3839,"nextId":4022},{"id":4022,"name":"Locator","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/) uses a ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/) to locate a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\nwithin the ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`RootLocator`"},{"kind":"text","text":"](/api/web/class/RootLocator/)\\n- ["},{"kind":"code","text":"`Page.locate`"},{"kind":"text","text":"](/api/web/class/Page/#locate)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)"}]},"children":[{"id":4030,"name":"selector","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":26,"character":24}],"type":{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}},{"id":4031,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":31,"character":20}],"signatures":[{"id":4032,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":31,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4070,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4493,"name":"RootLocator.nativeElement"}}],"overwrites":{"type":"reference","target":4492,"name":"RootLocator.nativeElement"}},{"id":4033,"name":"allNativeElements","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":32,"character":20}],"signatures":[{"id":4034,"name":"allNativeElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":32,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4070,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4035,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":34,"character":10}],"signatures":[{"id":4036,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":34,"character":10}],"parameters":[{"id":4037,"name":"element","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4070,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4484,"name":"RootLocator.switchToFrame"}}],"overwrites":{"type":"reference","target":4483,"name":"RootLocator.switchToFrame"}},{"id":4038,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":38,"character":10}],"signatures":[{"id":4039,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":38,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4487,"name":"RootLocator.switchToParentFrame"}}],"overwrites":{"type":"reference","target":4486,"name":"RootLocator.switchToParentFrame"}},{"id":4040,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":42,"character":10}],"signatures":[{"id":4041,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":42,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":4489,"name":"RootLocator.switchToMainFrame"}}],"overwrites":{"type":"reference","target":4488,"name":"RootLocator.switchToMainFrame"}},{"id":4044,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":48,"character":13}],"signatures":[{"id":4045,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":48,"character":13}],"parameters":[{"id":4046,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4479,"typeArguments":[{"type":"reference","target":4070,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":4070,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}]},{"id":4047,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":49,"character":13}],"signatures":[{"id":4048,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":49,"character":13}],"parameters":[{"id":4049,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":4070,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":4070,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}]},{"id":4050,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":50,"character":13}],"signatures":[{"id":4051,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":50,"character":13}],"parameters":[{"id":4052,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":4070,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":4070,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}]},{"id":4056,"name":"element","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":77,"character":13}],"signatures":[{"id":4057,"name":"element","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":77,"character":13}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4070,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4058,"name":"allElements","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":79,"character":13}],"signatures":[{"id":4059,"name":"allElements","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":79,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4070,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4060,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":81,"character":4}],"signatures":[{"id":4061,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":81,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":4495,"name":"RootLocator.toString"}}],"overwrites":{"type":"reference","target":4494,"name":"RootLocator.toString"}},{"id":4062,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Custom [Node.js inspection method](https://nodejs.org/api/util.html#utilinspectcustom)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":88,"character":4}],"type":{"type":"reflection","declaration":{"id":4063,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"signatures":[{"id":4064,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"parameters":[{"id":4065,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":4066,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":4067,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"defaultValue":"...","overwrites":{"type":"reference","target":4496,"name":"RootLocator.[custom]"}},{"id":4068,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"signatures":[{"id":4069,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":4491,"name":"RootLocator.isPresent"}}],"inheritedFrom":{"type":"reference","target":4490,"name":"RootLocator.isPresent"}}],"groups":[{"title":"Properties","children":[4030,4062]},{"title":"Methods","children":[4031,4033,4035,4038,4040,4044,4047,4050,4056,4058,4060,4068]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":21,"character":22}],"typeParameters":[{"id":4070,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":4071,"name":"Native_Selector_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":4479,"typeArguments":[{"type":"reference","target":4070,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Locator.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}],"permalink":"/api/web/class/Locator","previousId":3956,"nextId":4072},{"id":4072,"name":"Page","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style model that enables interactions with a Web page\\nrendered in a Web browser tab.\\n\\n## Referring to the current page\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Ensure.that(Page.current().title(), endsWith(\'Serenity/JS\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Switching to another open page\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals, includes, startsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page, Switch, Text } from \'@serenity-js/web\'\\n\\nconst Navigation = {\\n  linkTo = (name: Answerable<string>) =>\\n    PageElements.located(By.css(\'nav a\'))\\n      .where(Text, includes(name))\\n      .first()\\n}\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Click.on(Navigation.linkTo(\'GitHub\')),\\n\\n  Switch.to(Page.whichUrl(startsWith(\'https://github.com\')))\\n\\n  Ensure.that(\\n    Page.current().url().href,\\n    equals(\'https://github.com/serenity-js/serenity-js\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Retrieving information about another open page\\n\\nYou can retrieve information about another open page without having to explicitly switch to it:\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals, includes, startsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page, Text } from \'@serenity-js/web\'\\n\\nconst Navigation = {\\n  linkTo = (name: Answerable<string>) =>\\n    PageElements.located(By.css(\'nav a\'))\\n      .where(Text, includes(name))\\n      .first()\\n}\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Click.on(Navigation.linkTo(\'GitHub\')),\\n  Ensure.that(\\n    Page.whichUrl(startsWith(\'https://github.com\')).url().href,\\n    equals(\'https://github.com/serenity-js/serenity-js\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Performing activities in the context of another page\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals, includes, startsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page, Text } from \'@serenity-js/web\'\\n\\nconst Navigation = {\\n  linkTo = (name: Answerable<string>) =>\\n    PageElements.located(By.css(\'nav a\'))\\n      .where(Text, includes(name))\\n      .first()\\n}\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n\\n  // Serenity/JS GitHub repository opens in a new browser tab\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Click.on(Navigation.linkTo(\'GitHub\')),\\n\\n  // Switch to the newly opened page and perform an assertion\\n  Switch.to(Page.whichUrl(startsWith(\'https://github.com\')))\\n    .and(\\n      Ensure.that(\\n        Page.current().url().href,\\n        equals(\'https://github.com/serenity-js/serenity-js\')\\n      )\\n    ),\\n  // Automatically switch back to the original page\\n\\n  Ensure.that(Page.current().url().href, equals(\'https://serenity-js.org\'),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"children":[{"id":4073,"name":"current","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":138,"character":11}],"signatures":[{"id":4074,"name":"current","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) representing the currently active ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":138,"character":11}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4072,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4075,"name":"whichName","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":162,"character":11}],"signatures":[{"id":4076,"name":"whichName","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) which ["},{"kind":"code","text":"`Page.name`"},{"kind":"text","text":"](/api/web/class/Page/#name)\\nmeets the [expectation](/api/core/class/Expectation/).\\n\\n#### Switching to a page with the desired name\\n\\n"},{"kind":"code","text":"```ts\\nimport { includes } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Switch } from \'@serenity-js/web\'\\n\\nactorCalled(\'Bernie\').attemptsTo(\\n  Switch.to(Page.whichName(includes(`photo-gallery`))),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":162,"character":11}],"parameters":[{"id":4077,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4072,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4078,"name":"whichTitle","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":192,"character":11}],"signatures":[{"id":4079,"name":"whichTitle","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) which ["},{"kind":"code","text":"`Page.title`"},{"kind":"text","text":"](/api/web/class/Page/#title)\\nmeets the [expectation](/api/core/class/Expectation/).\\n\\n#### Switching to a page with the desired title\\n\\n"},{"kind":"code","text":"```ts\\nimport { includes } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Switch } from \'@serenity-js/web\'\\n\\nactorCalled(\'Bernie\').attemptsTo(\\n  Switch.to(Page.whichTitle(includes(`Summer collection`))),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":192,"character":11}],"parameters":[{"id":4080,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4072,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4081,"name":"whichUrl","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":222,"character":11}],"signatures":[{"id":4082,"name":"whichUrl","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) which ["},{"kind":"code","text":"`Page.url`"},{"kind":"text","text":"](/api/web/class/Page/#url)\\nmeets the [expectation](/api/core/class/Expectation/).\\n\\n#### Switching to a page with the desired URL\\n\\n"},{"kind":"code","text":"```ts\\nimport { endsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Switch } from \'@serenity-js/web\'\\n\\nactorCalled(\'Bernie\').attemptsTo(\\n  Switch.to(Page.whichUrl(endsWith(`/gallery.html`))),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":222,"character":11}],"parameters":[{"id":4083,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4072,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4092,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":248,"character":4}],"signatures":[{"id":4093,"name":"new Page","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":248,"character":4}],"typeParameter":[{"id":4094,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4095,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3702,"typeArguments":[{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":4094,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}},{"id":4096,"name":"rootLocator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4479,"typeArguments":[{"type":"reference","target":4094,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}},{"id":4097,"name":"modalDialogHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3940,"name":"ModalDialogHandler","package":"@serenity-js/web"}},{"id":4098,"name":"id","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":4094,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"Page","package":"@serenity-js/web"}}]},{"id":4102,"name":"id","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":252,"character":24}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},{"id":4103,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":265,"character":13}],"signatures":[{"id":4104,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) wrapping a native element."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":265,"character":13}],"parameters":[{"id":4105,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4094,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4094,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4106,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":272,"character":13}],"signatures":[{"id":4107,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/), retrieving an element located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":272,"character":13}],"parameters":[{"id":4108,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4094,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4109,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":280,"character":13}],"signatures":[{"id":4110,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Creates ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/), retrieving a collection of elements located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":280,"character":13}],"parameters":[{"id":4111,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4264,"typeArguments":[{"type":"reference","target":4094,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Page.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElements","package":"@serenity-js/web"}}]},{"id":4112,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":295,"character":13}],"signatures":[{"id":4113,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Navigate to a given destination, specified as an absolute URL\\nor a path relative to any base URL configured in your web test integration tool.\\n\\n#### Learn more\\n\\n- [WebdriverIO: Configuration Options](https://webdriver.io/docs/options/#baseurl)\\n- [Playwright: Browser](https://playwright.dev/docs/api/class-browser#browser-new-context)\\n- [Playwright: Test Options](https://playwright.dev/docs/api/class-testoptions#test-options-base-url)\\n- [Protractor: Configuration](https://github.com/angular/protractor/blob/master/lib/config.ts)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":295,"character":13}],"parameters":[{"id":4114,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4115,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":304,"character":13}],"signatures":[{"id":4116,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Causes the browser to traverse one step backward in the joint session history\\nof the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) (the current top-level browsing context).\\n\\nThis is equivalent to pressing the back button in the browser UI,\\nor calling ["},{"kind":"code","text":"`window.history.back`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/History/back)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":304,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4117,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":313,"character":13}],"signatures":[{"id":4118,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Causes the browser to traverse one step forward in the joint session history\\nof the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) (the current top-level browsing context).\\n\\nThis is equivalent to pressing the back button in the browser UI,\\nor calling ["},{"kind":"code","text":"`window.history.forward`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/History/forward)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":313,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4119,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":318,"character":13}],"signatures":[{"id":4120,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Causes the browser to reload the ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) in the current top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":318,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4121,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":326,"character":13}],"signatures":[{"id":4122,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Send a sequence of ["},{"kind":"code","text":"`Key`"},{"kind":"text","text":"](/api/web/class/Key/) strokes to the active element."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":326,"character":13}],"parameters":[{"id":4123,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Keys to enter"}]},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4124,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":371,"character":13}],"signatures":[{"id":4125,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a command to execute JavaScript in the context of the currently selected frame or window.\\n\\nThe script fragment will be executed as the body of an anonymous function.\\nIf the script is provided as a function object, that function will be converted to a string for injection\\ninto the target window.\\n\\nAny arguments provided in addition to the script will be included as script arguments and may be referenced\\nusing the "},{"kind":"code","text":"`arguments`"},{"kind":"text","text":" object. Arguments may be a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", "},{"kind":"code","text":"`string`"},{"kind":"text","text":" or "},{"kind":"code","text":"`WebElement`"},{"kind":"text","text":".\\nArrays and objects may also be used as script arguments as long as each item adheres\\nto the types previously mentioned.\\n\\nThe script may refer to any variables accessible from the current window.\\nFurthermore, the script will execute in the window\'s context, thus "},{"kind":"code","text":"`document`"},{"kind":"text","text":" may be used to refer\\nto the current document. Any local variables will not be available once the script has finished executing,\\nthough global variables will persist.\\n\\nIf the script has a return value (i.e. if the script contains a "},{"kind":"code","text":"`return`"},{"kind":"text","text":" statement),\\nthen the following steps will be taken for resolving this functions return value:\\n\\n- For a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/), the value will resolve to a [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)\\n- "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" return values will resolve to "},{"kind":"code","text":"`null`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", and "},{"kind":"code","text":"`string`"},{"kind":"text","text":" values will resolve as is\\n- Functions will resolve to their string representation\\n- For arrays and objects, each member item will be converted according to the rules above\\n\\n#### Use injected JavaScript to retrieve information about a HTMLElement\\n\\n"},{"kind":"code","text":"```ts\\nBrowseTheWeb.as(actor).executeAsyncScript(`\\n  return arguments[0].tagName;\\n`, PageElement.located(By.css(\'h1\')).describedAs(\'header\'))\\n\\n// returns a Promise that resolves to \'h1\'\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Selenium WebDriver: JavaScript Executor](https://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/JavascriptExecutor.html#executeAsyncScript-java.lang.String-java.lang.Object...-)\\n- ["},{"kind":"code","text":"`Page.lastScriptExecutionResult`"},{"kind":"text","text":"](/api/web/class/Page/#lastScriptExecutionResult)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":371,"character":13}],"typeParameter":[{"id":4126,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":4127,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":4128,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":4129,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":372,"character":26}],"signatures":[{"id":4130,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":372,"character":26}],"parameters":[{"id":4131,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":4127,"name":"InnerArguments","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":4126,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}}]}}]}},{"id":4132,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":4127,"name":"InnerArguments","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4126,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4133,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":431,"character":13}],"signatures":[{"id":4134,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Schedules a command to execute asynchronous JavaScript in the context of the currently selected frame or window.\\n\\nThe script fragment will be executed as the body of an anonymous function.\\nIf the script is provided as a function object, that function will be converted to a string for injection\\ninto the target window.\\n\\nAny arguments provided in addition to the script will be included as script arguments and may be referenced\\nusing the "},{"kind":"code","text":"`arguments`"},{"kind":"text","text":" object. Arguments may be a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", "},{"kind":"code","text":"`string`"},{"kind":"text","text":" or "},{"kind":"code","text":"`WebElement`"},{"kind":"text","text":"\\nArrays and objects may also be used as script arguments as long as each item adheres\\nto the types previously mentioned.\\n\\nUnlike executing synchronous JavaScript with ["},{"kind":"code","text":"`Page.executeScript`"},{"kind":"text","text":"](/api/web/class/Page/#executeScript),\\nscripts executed with this function must explicitly signal they are finished by invoking the provided callback.\\n\\nThis callback will always be injected into the executed function as the last argument,\\nand thus may be referenced with "},{"kind":"code","text":"`arguments[arguments.length - 1]`"},{"kind":"text","text":".\\n\\nThe following steps will be taken for resolving this functions return value against\\nthe first argument to the script\'s callback function:\\n\\n- For a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/), the value will resolve to a [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)\\n- "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" return values will resolve to "},{"kind":"code","text":"`null`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", and "},{"kind":"code","text":"`string`"},{"kind":"text","text":" values will resolve as is\\n- Functions will resolve to their string representation\\n- For arrays and objects, each member item will be converted according to the rules above\\n\\n#### Perform a sleep in the browser under test>\\n\\n"},{"kind":"code","text":"```ts\\nBrowseTheWeb.as(actor).executeAsyncScript(`\\n  var delay    = arguments[0];\\n  var callback = arguments[arguments.length - 1];\\n\\n  window.setTimeout(callback, delay);\\n`, 500)\\n```"},{"kind":"text","text":"\\n\\n#### Return a value asynchronously\\n\\n"},{"kind":"code","text":"```ts\\nBrowseTheWeb.as(actor).executeAsyncScript(`\\n  var callback = arguments[arguments.length - 1];\\n\\n  callback(\'some return value\')\\n`).then(value => doSomethingWithThe(value))\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Selenium WebDriver: JavaScript Executor](https://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/JavascriptExecutor.html#executeAsyncScript-java.lang.String-java.lang.Object...-)\\n- ["},{"kind":"code","text":"`Page.lastScriptExecutionResult`"},{"kind":"text","text":"](/api/web/class/Page/#lastScriptExecutionResult)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":431,"character":13}],"typeParameter":[{"id":4135,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":4136,"name":"Parameters","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":4137,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":4138,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":26}],"signatures":[{"id":4139,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":26}],"parameters":[{"id":4140,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":4136,"name":"Parameters","package":"@serenity-js/web","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":4141,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":75}],"signatures":[{"id":4142,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":75}],"parameters":[{"id":4143,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4135,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":4144,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":4136,"name":"Parameters","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4135,"name":"Result","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4145,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":440,"character":13}],"signatures":[{"id":4146,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the last result of calling ["},{"kind":"code","text":"`Page.executeAsyncScript`"},{"kind":"text","text":"](/api/web/class/Page/#executeAsyncScript)\\nor ["},{"kind":"code","text":"`Page.executeScript`"},{"kind":"text","text":"](/api/web/class/Page/#executeScript)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":440,"character":13}],"typeParameter":[{"id":4147,"name":"R","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":4147,"name":"R","package":"@serenity-js/web","refersToTypeParameter":true}}]},{"id":4148,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":451,"character":13}],"signatures":[{"id":4149,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Take a screenshot of the top-level browsing context\'s viewport."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"["},{"kind":"code","text":"`BrowserWindowClosedError`"},{"kind":"text","text":"](/api/web/class/BrowserWindowClosedError/)\\n When the page you\'re trying to take the screenshot of has already been closed"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise that will resolve to a base64-encoded screenshot PNG"}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":451,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4150,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":458,"character":13}],"signatures":[{"id":4151,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves a cookie identified by "},{"kind":"code","text":"`name`"},{"kind":"text","text":" and visible to this ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":458,"character":13}],"parameters":[{"id":4152,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3733,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4153,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":466,"character":13}],"signatures":[{"id":4154,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Adds a single cookie with ["},{"kind":"code","text":"`CookieData`"},{"kind":"text","text":"](/api/web/interface/CookieData/) to the cookie store associated\\nwith the active ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)\'s address."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":466,"character":13}],"parameters":[{"id":4155,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3839,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4156,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":471,"character":13}],"signatures":[{"id":4157,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Removes all the cookies."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":471,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4158,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":479,"character":13}],"signatures":[{"id":4159,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the document title of the current top-level browsing context, equivalent to calling "},{"kind":"code","text":"`document.title`"},{"kind":"text","text":".\\n\\n#### Learn more\\n- [Mozilla Developer Network: Document title](https://developer.mozilla.org/en-US/docs/Web/API/Document/title)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":479,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4160,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":484,"character":13}],"signatures":[{"id":4161,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the [URL](https://nodejs.org/api/url.html) of the current top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":484,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4162,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":489,"character":13}],"signatures":[{"id":4163,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Retrieves the name of the current top-level browsing context."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":489,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4164,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":494,"character":13}],"signatures":[{"id":4165,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given window / tab / page is open and can be switched to, e.g. it\'s not closed."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":494,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4166,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":13}],"signatures":[{"id":4167,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the actual viewport size available for the given page,\\nexcluding any scrollbars."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":4168,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4169,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":39}],"type":{"type":"intrinsic","name":"number"}},{"id":4170,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":54}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4169,4170]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":37}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4171,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":13}],"signatures":[{"id":4172,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Sets ths size of the visible viewport to desired dimensions."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":13}],"parameters":[{"id":4173,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4174,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4175,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":37}],"type":{"type":"intrinsic","name":"number"}},{"id":4176,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":52}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4175,4176]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":35}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4177,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":518,"character":10}],"signatures":[{"id":4178,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":518,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4636,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":4635,"name":"Switchable.switchTo"}}],"implementationOf":{"type":"reference","target":4634,"name":"Switchable.switchTo"}},{"id":4179,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":534,"character":13}],"signatures":[{"id":4180,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes this page."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":534,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4181,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":539,"character":13}],"signatures":[{"id":4182,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes any open pages, except for this one."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":539,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4183,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":544,"character":4}],"signatures":[{"id":4184,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":544,"character":4}],"type":{"type":"reference","target":3940,"name":"ModalDialogHandler","package":"@serenity-js/web"}}]},{"id":4185,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":551,"character":4}],"signatures":[{"id":4186,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":551,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[4092]},{"title":"Properties","children":[4102]},{"title":"Methods","children":[4073,4075,4078,4081,4103,4106,4109,4112,4115,4117,4119,4121,4124,4133,4145,4148,4150,4153,4156,4158,4160,4162,4164,4166,4171,4177,4179,4181,4183,4185]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":133,"character":22}],"typeParameters":[{"id":4187,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"implementedTypes":[{"type":"reference","target":890,"name":"Optional","package":"@serenity-js/core"},{"type":"reference","target":4633,"name":"Switchable","package":"@serenity-js/web"}],"permalink":"/api/web/class/Page","previousId":4022,"nextId":4188},{"id":4188,"name":"PageElement","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to identify\\na single Web element located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/).\\n\\n## Learn more\\n- [Page Element Query Language](/handbook/web-testing/page-element-query-language)\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"children":[{"id":4189,"name":"from","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":25,"character":11}],"signatures":[{"id":4190,"name":"from","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":25,"character":11}],"typeParameter":[{"id":4191,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4192,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4191,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4191,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4191,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4193,"name":"located","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":33,"character":11}],"signatures":[{"id":4194,"name":"located","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":33,"character":11}],"typeParameter":[{"id":4195,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4196,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4195,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4195,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4197,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":42,"character":11}],"signatures":[{"id":4198,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":42,"character":11}],"typeParameter":[{"id":4199,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4200,"name":"childElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4199,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4199,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4199,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}]}},{"id":4201,"name":"parentElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4199,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4199,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4199,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4202,"name":"html","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":76,"character":11}],"signatures":[{"id":4203,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A static method producing a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/) that can be used with ["},{"kind":"code","text":"`PageElements.eachMappedTo`"},{"kind":"text","text":"](/api/web/class/PageElements/#eachMappedTo) method\\nto extract the HTML of each element in a collection.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Log } from \'@serenity-js/core\'\\nimport { Navigate, PageElement, By, Text } from \'@serenity-js/web\'\\nimport { includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Debbie\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n\\n  Log.the(\\n    PageElements.located(By.css(\'a\'))\\n      .where(Text, includes(\'modular\'))\\n      .eachMappedTo(PageElement.html())\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":76,"character":11}],"typeParameter":[{"id":4204,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4204,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}]},{"id":4205,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":86,"character":4}],"signatures":[{"id":4206,"name":"new PageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":86,"character":4}],"typeParameter":[{"id":4207,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4208,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":4207,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4207,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4209,"name":"locator","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":86,"character":32}],"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":4207,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}},{"id":4210,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":97,"character":13}],"signatures":[{"id":4211,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a child element that:\\n- matches the given selector\\n- is located within the "},{"kind":"code","text":"`parentElement`"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":97,"character":13}],"parameters":[{"id":4212,"name":"parentElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4207,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4207,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4213,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":147,"character":13}],"signatures":[{"id":4214,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Traverses the element and its parents, heading toward the document root,\\nuntil it finds a parent ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) that matches its associated CSS selector.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```html\\n<div class=\\"form-entry\\">\\n    <input id=\\"username\\" />\\n    <ul class=\\"warnings\\">\\n        <li>Username should be an email address</li>\\n    </ul>\\n</div>\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```typescript\\nclass Username {\\n  static field = () =>\\n    PageElement.located(By.id(\'username\'))\\n      .describedAs(\'username field\')\\n\\n  private static container = () =>\\n    PageElement.located(By.css(\'.form-entry\'))\\n      .describedAs(\'form entry container\')\\n\\n  static warnings = () =>\\n    PageElements.located(By.css(\'ul.warnings li\'))\\n      .describedAs(\'warnings\')\\n      .of(\\n        Username.container().closestTo(Username.field())\\n      )\\n}\\n```"},{"kind":"text","text":"\\n\\n:::info\\nThis method relies on [Element: closest() API](https://developer.mozilla.org/en-US/docs/Web/API/Element/closest),\\nand so is only compatible with locating parent elements specified using the following CSS selectors:\\n- ["},{"kind":"code","text":"`ByCss`"},{"kind":"text","text":"](/api/web/class/ByCss/)\\n- ["},{"kind":"code","text":"`ById`"},{"kind":"text","text":"](/api/web/class/ById/)\\n- ["},{"kind":"code","text":"`ByTagName`"},{"kind":"text","text":"](/api/web/class/ByTagName/)\\n:::"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"#### Learn more\\n- [Element: closest() method](https://developer.mozilla.org/en-US/docs/Web/API/Element/closest)"}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":147,"character":13}],"parameters":[{"id":4215,"name":"childElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4207,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4207,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}]},{"id":4216,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":152,"character":10}],"signatures":[{"id":4217,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":152,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4207,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElement.Native_Element_Type","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4218,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":156,"character":4}],"signatures":[{"id":4219,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":156,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":4220,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":160,"character":13}],"signatures":[{"id":4221,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":160,"character":13}],"parameters":[{"id":4222,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4223,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":161,"character":13}],"signatures":[{"id":4224,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":161,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4225,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":162,"character":13}],"signatures":[{"id":4226,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":162,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4227,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":163,"character":13}],"signatures":[{"id":4228,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":163,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4229,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":164,"character":13}],"signatures":[{"id":4230,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":164,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4231,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":165,"character":13}],"signatures":[{"id":4232,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":165,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4233,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":166,"character":13}],"signatures":[{"id":4234,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":166,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4235,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":167,"character":13}],"signatures":[{"id":4236,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":167,"character":13}],"parameters":[{"id":4237,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4503,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4238,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":168,"character":13}],"signatures":[{"id":4239,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":168,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4503,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4240,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":170,"character":13}],"signatures":[{"id":4241,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":170,"character":13}],"parameters":[{"id":4242,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4243,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":171,"character":13}],"signatures":[{"id":4244,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":171,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4245,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":172,"character":13}],"signatures":[{"id":4246,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":172,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4247,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":193,"character":13}],"signatures":[{"id":4248,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance method that resolves to the value of the ["},{"kind":"code","text":"`outerHTML`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML) property\\nof the underlying element.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Log } from \'@serenity-js/core\'\\nimport { Navigate, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Debbie\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n\\n  Log.the(\\n    PageElement.located(By.css(\'h1\')).html()\\n  ),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":193,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4249,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":210,"character":13}],"signatures":[{"id":4250,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"When the element represents an ["},{"kind":"code","text":"`iframe`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe),\\ncalling this method switches the current browsing context to the given "},{"kind":"code","text":"`iframe`"},{"kind":"text","text":" context.\\n\\nWhen used with other types of [Web "},{"kind":"code","text":"`Element`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Element),\\ncalling this method will have the same result as calling ["},{"kind":"code","text":"`Element.focus()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns an object that allows the caller to switch back\\n to the previous context if needed.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":210,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4636,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":4635,"name":"Switchable.switchTo"}}],"implementationOf":{"type":"reference","target":4634,"name":"Switchable.switchTo"}},{"id":4251,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":216,"character":13}],"signatures":[{"id":4252,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element [has focus](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus).\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":216,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4253,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":224,"character":13}],"signatures":[{"id":4254,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element can be clicked on.\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\nPlease refer to test integration tool-specific documentation for details."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":224,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4255,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":232,"character":13}],"signatures":[{"id":4256,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying\\nelement is not [explicitly disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\\n\\nPlease refer to test integration tool-specific documentation for details."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":232,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4257,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":239,"character":10}],"signatures":[{"id":4258,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the element\\nis present in the [Document Object Model (DOM)](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model),\\n"},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":239,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4259,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":250,"character":13}],"signatures":[{"id":4260,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element:\\n- has a ["},{"kind":"code","text":"`selected`"},{"kind":"text","text":" attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#attr-selected) for "},{"kind":"code","text":"`<option />`"},{"kind":"text","text":" elements\\n- has a ["},{"kind":"code","text":"`checked`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox) attribute for checkboxes\\n\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":250,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4261,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":260,"character":13}],"signatures":[{"id":4262,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element:\\n- is not hidden, so doesn\'t have CSS style like "},{"kind":"code","text":"`display: none`"},{"kind":"text","text":", "},{"kind":"code","text":"`visibility: hidden`"},{"kind":"text","text":" or "},{"kind":"code","text":"`opacity: 0`"},{"kind":"text","text":"\\n- is within the browser viewport\\n- doesn\'t have its centre covered by other elements\\n\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":260,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[4205]},{"title":"Properties","children":[4209]},{"title":"Methods","children":[4189,4193,4197,4202,4210,4213,4216,4218,4220,4223,4225,4227,4229,4231,4233,4235,4238,4240,4243,4245,4247,4249,4251,4253,4255,4257,4259,4261]}],"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":23,"character":22}],"typeParameters":[{"id":4263,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"implementedTypes":[{"type":"reference","target":890,"name":"Optional","package":"@serenity-js/core"},{"type":"reference","target":4633,"name":"Switchable","package":"@serenity-js/web"}],"permalink":"/api/web/class/PageElement","previousId":4072,"nextId":4264},{"id":4264,"name":"PageElements","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to identify\\na group of Web elements located by ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/).\\n\\n## Learn more\\n\\n- [Page Element Query Language](/handbook/web-testing/page-element-query-language)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)}\\n- ["},{"kind":"code","text":"`List`"},{"kind":"text","text":"](/api/core/class/List/)\\n- ["},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":"](/api/core/interface/ChainableMetaQuestion/)"}]},"children":[{"id":4265,"name":"located","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElements.ts","line":24,"character":11}],"signatures":[{"id":4266,"name":"located","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElements.ts","line":24,"character":11}],"typeParameter":[{"id":4267,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4268,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4264,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElements","package":"@serenity-js/web"}}]},{"id":4368,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":4369,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":4370,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedAs"}},{"id":4371,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":4372,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":4373,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4374,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4375,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":4376,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":4377,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}}],"type":{"type":"union","types":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.as"}},{"id":4378,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":4379,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":4380,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":4381,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4382,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4382]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.describedBy"}},{"id":4388,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":4389,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.toString"}},{"id":4354,"name":"forEach","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":4}],"signatures":[{"id":4355,"name":"forEach","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":4}],"parameters":[{"id":4356,"name":"callback","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4357,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":22}],"signatures":[{"id":4358,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":21,"character":22}],"parameters":[{"id":4359,"name":"current","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1487,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"CurrentItem","package":"@serenity-js/core"}},{"id":4360,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":4361,"name":"items","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":1538,"name":"Task","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.forEach"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.forEach"}},{"id":4362,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":28,"character":4}],"signatures":[{"id":4363,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":28,"character":4}],"parameters":[{"id":4364,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.answeredBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.answeredBy"}},{"id":4327,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":68,"character":4}],"signatures":[{"id":4328,"name":"new PageElements","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":68,"character":4}],"typeParameter":[{"id":4329,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4330,"name":"collection","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":648,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1008,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"union","types":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":893,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Question","package":"@serenity-js/core"}]}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":4264,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElements","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList<PageElement<Native_Element_Type>, PageElement<Native_Element_Type>>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList<PageElement<Native_Element_Type>, PageElement<Native_Element_Type>>.constructor"}},{"id":4332,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":69,"character":4}],"signatures":[{"id":4333,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":69,"character":4}],"parameters":[{"id":4334,"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1362,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaList","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.of"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.of"}},{"id":4335,"name":"eachMappedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":70,"character":4}],"signatures":[{"id":4336,"name":"eachMappedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":70,"character":4}],"typeParameter":[{"id":4337,"name":"Mapped_Item_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4338,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":893,"typeArguments":[{"type":"union","types":[{"type":"reference","target":4337,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4337,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1362,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4337,"name":"Mapped_Item_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"MetaList","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.eachMappedTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.eachMappedTo"}},{"id":4339,"name":"where","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":71,"character":4}],"signatures":[{"id":4340,"name":"where","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":71,"character":4}],"typeParameter":[{"id":4341,"name":"Answer_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4342,"name":"question","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":893,"typeArguments":[{"type":"union","types":[{"type":"reference","target":4341,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4341,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}},{"id":4343,"name":"expectation","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1092,"typeArguments":[{"type":"reference","target":4341,"name":"Answer_Type","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Expectation","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1362,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaList","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.where"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.where"}},{"id":4344,"name":"count","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":72,"character":4}],"signatures":[{"id":4345,"name":"count","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":72,"character":4}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"number"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.count"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.count"}},{"id":4346,"name":"first","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":73,"character":4}],"signatures":[{"id":4347,"name":"first","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":73,"character":4}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.first"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.first"}},{"id":4348,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":74,"character":4}],"signatures":[{"id":4349,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":74,"character":4}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.last"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.last"}},{"id":4350,"name":"nth","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":75,"character":4}],"signatures":[{"id":4351,"name":"nth","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.ts","line":75,"character":4}],"parameters":[{"id":4352,"name":"index","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.nth"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"MetaList.nth"}}],"groups":[{"title":"Constructors","children":[4327]},{"title":"Methods","children":[4265,4368,4371,4378,4388,4354,4362,4332,4335,4339,4344,4346,4348,4350]}],"sources":[{"fileName":"packages/web/src/screenplay/models/PageElements.ts","line":21,"character":13}],"typeParameters":[{"id":4390,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":1362,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4329,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElements.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"MetaList","package":"@serenity-js/core"}],"permalink":"/api/web/class/PageElements","previousId":4188,"nextId":4391},{"id":4391,"name":"PageElementsLocator","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":4392,"name":"fromDocumentRoot","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":16,"character":11}],"signatures":[{"id":4393,"name":"fromDocumentRoot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":16,"character":11}],"typeParameter":[{"id":4394,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4395,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4391,"typeArguments":[{"type":"reference","target":4394,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"PageElementsLocator","package":"@serenity-js/web"}}]},{"id":4456,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":4457,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":4458,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4447,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":4459,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":4460,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":4461,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4462,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4463,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":4464,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":4465,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4447,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}}],"type":{"type":"union","types":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":4466,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":4467,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":4468,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":4469,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4470,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4470]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":4476,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":4477,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.toString"}},{"id":4445,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":27,"character":4}],"signatures":[{"id":4446,"name":"new PageElementsLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":27,"character":4}],"typeParameter":[{"id":4447,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4448,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":4447,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4391,"typeArguments":[{"type":"reference","target":4447,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElementsLocator","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<PageElement<Native_Element_Type>>>>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Question<Promise<Array<PageElement<Native_Element_Type>>>>.constructor"}},{"id":4450,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":31,"character":4}],"signatures":[{"id":4451,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":31,"character":4}],"parameters":[{"id":4452,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4447,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"intersection","types":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4447,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"},{"type":"reference","target":1008,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4447,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4447,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}]},"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.of"}}],"implementationOf":{"type":"reference","target":-1,"name":"ChainableMetaQuestion.of"}},{"id":4453,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":42,"character":10}],"signatures":[{"id":4454,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":42,"character":10}],"parameters":[{"id":4455,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4447,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"groups":[{"title":"Constructors","children":[4445]},{"title":"Methods","children":[4392,4456,4459,4466,4476,4450,4453]}],"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":12,"character":13}],"typeParameters":[{"id":4478,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4447,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1008,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4447,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4447,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"PageElementsLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"ChainableMetaQuestion","package":"@serenity-js/core"}],"permalink":"/api/web/class/PageElementsLocator","previousId":4264,"nextId":4479},{"id":4479,"name":"RootLocator","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`RootLocator`"},{"kind":"text","text":"](/api/web/class/RootLocator/) represents the context in which ["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/) looks for ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/).\\nThis context is either a parent element, or some representation of the top-level browsing context.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Locator`"},{"kind":"text","text":"](/api/web/class/Locator/)\\n- ["},{"kind":"code","text":"`Page.locate`"},{"kind":"text","text":"](/api/web/class/Page/#locate)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)"}]},"children":[{"id":4480,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4481,"name":"new RootLocator","variant":"signature","kind":16384,"flags":{"isExternal":true},"typeParameter":[{"id":4482,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":4479,"typeArguments":[{"type":"reference","target":4482,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"RootLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"RootLocator","package":"@serenity-js/web"}}]},{"id":4483,"name":"switchToFrame","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":18,"character":20}],"signatures":[{"id":4484,"name":"switchToFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":18,"character":20}],"parameters":[{"id":4485,"name":"element","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4482,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"RootLocator.Native_Element_Type","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4486,"name":"switchToParentFrame","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":19,"character":20}],"signatures":[{"id":4487,"name":"switchToParentFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":19,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4488,"name":"switchToMainFrame","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":20,"character":20}],"signatures":[{"id":4489,"name":"switchToMainFrame","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":20,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4490,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"signatures":[{"id":4491,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":4492,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":23,"character":20}],"signatures":[{"id":4493,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":23,"character":20}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Partial"},"typeArguments":[{"type":"reference","target":4482,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"RootLocator.Native_Element_Type","refersToTypeParameter":true}],"name":"Partial","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":4494,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":25,"character":4}],"signatures":[{"id":4495,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":25,"character":4}],"type":{"type":"intrinsic","name":"string"}}]},{"id":4496,"name":"[custom]","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":29,"character":4}],"type":{"type":"reflection","declaration":{"id":4497,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"signatures":[{"id":4498,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.ts","line":2,"character":84}],"parameters":[{"id":4499,"name":"depth","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}},{"id":4500,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".InspectOptionsStylized"},"name":"InspectOptionsStylized","package":"@types/node","qualifiedName":"\\"util\\".InspectOptionsStylized"}},{"id":4501,"name":"inspect","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/util.d.ts","qualifiedName":"\\"util\\".inspect"},"name":"inspect","package":"@types/node","qualifiedName":"\\"util\\".inspect","preferValues":true}}}],"type":{"type":"intrinsic","name":"string"}}]}},"defaultValue":"..."}],"groups":[{"title":"Constructors","children":[4480]},{"title":"Properties","children":[4496]},{"title":"Methods","children":[4483,4486,4488,4490,4492,4494]}],"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":17,"character":22}],"typeParameters":[{"id":4502,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedBy":[{"type":"reference","target":4022,"name":"Locator"}],"implementedTypes":[{"type":"reference","target":890,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/RootLocator","previousId":4391,"nextId":4503},{"id":4503,"name":"SelectOption","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes the ["},{"kind":"code","text":"`<option />`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nelements to select.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Select`"},{"kind":"text","text":"](/api/web/class/Select/)\\n- ["},{"kind":"code","text":"`Selected`"},{"kind":"text","text":"](/api/web/class/Selected/)\\n- ["},{"kind":"code","text":"`PageElement.selectOptions`"},{"kind":"text","text":"](/api/web/class/PageElement/#selectOptions)\\n- ["},{"kind":"code","text":"`PageElement.selectedOptions`"},{"kind":"text","text":"](/api/web/class/PageElement/#selectedOptions)"}]},"children":[{"id":4504,"name":"withLabel","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":18,"character":11}],"signatures":[{"id":4505,"name":"withLabel","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":18,"character":11}],"parameters":[{"id":4506,"name":"label","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4503,"name":"SelectOption","package":"@serenity-js/web"}}]},{"id":4507,"name":"withValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":22,"character":11}],"signatures":[{"id":4508,"name":"withValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":22,"character":11}],"parameters":[{"id":4509,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4503,"name":"SelectOption","package":"@serenity-js/web"}}]},{"id":4510,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":26,"character":4}],"signatures":[{"id":4511,"name":"new SelectOption","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":26,"character":4}],"parameters":[{"id":4512,"name":"label","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":4513,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":4514,"name":"selected","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":4515,"name":"disabled","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","target":4503,"name":"SelectOption","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":4516,"name":"label","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":27,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4517,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":28,"character":24}],"type":{"type":"intrinsic","name":"string"}},{"id":4518,"name":"selected","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":29,"character":24}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4519,"name":"disabled","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":30,"character":24}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4520,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":35,"character":4}],"signatures":[{"id":4521,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":35,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":4522,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4523,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4524,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":4525,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4526,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Constructors","children":[4510]},{"title":"Properties","children":[4516,4517,4518,4519]},{"title":"Methods","children":[4504,4507,4520,4522,4525]}],"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"permalink":"/api/web/class/SelectOption","previousId":4479,"nextId":4633},{"id":4633,"name":"Switchable","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Describes a Serenity/JS model object that can be switched _to_ and switched back _from_\\nusing the [task](/api/core/class/Task/) to ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/).\\n\\nExamples of switchable models include a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) and ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)"}]},"children":[{"id":4634,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Switchable.ts","line":23,"character":4}],"signatures":[{"id":4635,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the context to the object implementing this interface\\nand returns ["},{"kind":"code","text":"`SwitchableOrigin`"},{"kind":"text","text":"](/api/web/interface/SwitchableOrigin/) that allows for the context to be switched\\nback when needed."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/Switchable.ts","line":23,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4636,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[4634]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Switchable.ts","line":16,"character":17}],"implementedBy":[{"type":"reference","target":4072,"name":"Page"},{"type":"reference","target":4188,"name":"PageElement"}],"permalink":"/api/web/interface/Switchable","previousId":4503,"nextId":4636},{"id":4636,"name":"SwitchableOrigin","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Enables the ["},{"kind":"code","text":"`Task`"},{"kind":"text","text":"](/api/core/class/Task/) to ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/) to perform a sequence of activities\\nand switch back to the original context afterwards.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"children":[{"id":4637,"name":"switchBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SwitchableOrigin.ts","line":17,"character":4}],"signatures":[{"id":4638,"name":"switchBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the context back to the original ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/SwitchableOrigin.ts","line":17,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[4637]}],"sources":[{"fileName":"packages/web/src/screenplay/models/SwitchableOrigin.ts","line":12,"character":17}],"permalink":"/api/web/interface/SwitchableOrigin","previousId":4633,"nextId":3848},{"id":3848,"name":"AbsentModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`AbsentModalDialog`"},{"kind":"text","text":" is a [null object](https://en.wikipedia.org/wiki/Null_object_pattern)\\nrepresenting a ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) that hasn\'t appeared yet.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)"}]},"children":[{"id":3862,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3863,"name":"new AbsentModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":3848,"name":"AbsentModalDialog","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":3933,"name":"ModalDialog.constructor"}}],"inheritedFrom":{"type":"reference","target":3932,"name":"ModalDialog.constructor"}},{"id":3864,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":15,"character":10}],"signatures":[{"id":3865,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":15,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3937,"name":"ModalDialog.isPresent"}}],"overwrites":{"type":"reference","target":3936,"name":"ModalDialog.isPresent"}},{"id":3866,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":19,"character":10}],"signatures":[{"id":3867,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":19,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3935,"name":"ModalDialog.message"}}],"overwrites":{"type":"reference","target":3934,"name":"ModalDialog.message"}},{"id":3868,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":3869,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3939,"name":"ModalDialog.state"}}],"inheritedFrom":{"type":"reference","target":3938,"name":"ModalDialog.state"}}],"groups":[{"title":"Constructors","children":[3862]},{"title":"Methods","children":[3864,3866,3868]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":3918,"name":"ModalDialog","package":"@serenity-js/web"}],"permalink":"/api/web/class/AbsentModalDialog","previousId":4636,"nextId":3870},{"id":3870,"name":"AcceptedModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`AcceptedModalDialog`"},{"kind":"text","text":" represents a ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) that has been accepted\\nvia ["},{"kind":"code","text":"`ModalDialog.acceptNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNext).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)"}]},"children":[{"id":3884,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":15,"character":4}],"signatures":[{"id":3885,"name":"new AcceptedModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":15,"character":4}],"parameters":[{"id":3886,"name":"dialogMessage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":3870,"name":"AcceptedModalDialog","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":3933,"name":"ModalDialog.constructor"}}],"overwrites":{"type":"reference","target":3932,"name":"ModalDialog.constructor"}},{"id":3888,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":20,"character":10}],"signatures":[{"id":3889,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":20,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3937,"name":"ModalDialog.isPresent"}}],"overwrites":{"type":"reference","target":3936,"name":"ModalDialog.isPresent"}},{"id":3890,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":24,"character":10}],"signatures":[{"id":3891,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":24,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3935,"name":"ModalDialog.message"}}],"overwrites":{"type":"reference","target":3934,"name":"ModalDialog.message"}},{"id":3892,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":3893,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3939,"name":"ModalDialog.state"}}],"inheritedFrom":{"type":"reference","target":3938,"name":"ModalDialog.state"}}],"groups":[{"title":"Constructors","children":[3884]},{"title":"Methods","children":[3888,3890,3892]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":3918,"name":"ModalDialog","package":"@serenity-js/web"}],"permalink":"/api/web/class/AcceptedModalDialog","previousId":3848,"nextId":3894},{"id":3894,"name":"DismissedModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`DismissedModalDialog`"},{"kind":"text","text":" represents a ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) that has been dismissed\\nvia ["},{"kind":"code","text":"`ModalDialog.dismissNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#dismissNext).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)"}]},"children":[{"id":3908,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":15,"character":4}],"signatures":[{"id":3909,"name":"new DismissedModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":15,"character":4}],"parameters":[{"id":3910,"name":"dialogMessage","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":3894,"name":"DismissedModalDialog","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":3933,"name":"ModalDialog.constructor"}}],"overwrites":{"type":"reference","target":3932,"name":"ModalDialog.constructor"}},{"id":3912,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":20,"character":10}],"signatures":[{"id":3913,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":20,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3937,"name":"ModalDialog.isPresent"}}],"overwrites":{"type":"reference","target":3936,"name":"ModalDialog.isPresent"}},{"id":3914,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":24,"character":10}],"signatures":[{"id":3915,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":24,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":3935,"name":"ModalDialog.message"}}],"overwrites":{"type":"reference","target":3934,"name":"ModalDialog.message"}},{"id":3916,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":3917,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":3939,"name":"ModalDialog.state"}}],"inheritedFrom":{"type":"reference","target":3938,"name":"ModalDialog.state"}}],"groups":[{"title":"Constructors","children":[3908]},{"title":"Methods","children":[3912,3914,3916]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":14,"character":13}],"extendedTypes":[{"type":"reference","target":3918,"name":"ModalDialog","package":"@serenity-js/web"}],"permalink":"/api/web/class/DismissedModalDialog","previousId":3870,"nextId":3918},{"id":3918,"name":"ModalDialog","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Manages interactions with JavaScript modal dialog windows,\\ntriggered by [window.alert](https://developer.mozilla.org/en-US/docs/Web/API/Window/alert),\\n[window.confirm](https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm),\\nor ["},{"kind":"code","text":"`window.prompt`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt),\\nand stores their "},{"kind":"code","text":"`message`"},{"kind":"text","text":" so that it can be asserted on once the dialog is handled.\\n\\nNote that in order to make handling modal windows\\nconsistent across the various Web integration tools (such as Playwright, Puppeteer,\\nWebdriverIO or Selenium), Serenity/JS works as follows:\\n- Serenity/JS dismisses any modal dialogs by default and stores their message so that it can be asserted on.\\n- This behaviour can be changed by invoking ["},{"kind":"code","text":"`ModalDialog.acceptNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNext),\\n  ["},{"kind":"code","text":"`ModalDialog.acceptNextWithValue`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNextWithValue),\\n  or ["},{"kind":"code","text":"`ModalDialog.dismissNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#dismissNext)\\n  before the dialog is triggered, as per the below examples.\\n- Serenity/JS also allows you to "},{"kind":"code","text":"`Wait.until(ModalDialog, isPresent())`"},{"kind":"text","text":" so that you can synchronise your tests\\n  with modal dialogs that appear after a delay.\\n\\n## Example HTML widget\\n\\nIn the below example widget, clicking on the button results in a [confirmation dialog](https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm)\\nappearing.\\n\\n"},{"kind":"code","text":"```html\\n<button id=\\"trigger\\" onclick=\\"trigger()\\">Trigger Alert</button>\\n<p id=\\"result\\"></p>\\n\\n<script>\\n  function trigger() {\\n    document.getElementById(\\"result\\").innerHTML = (\\n      function () {\\n        return confirm(\'Continue?\')\\n          ? \'accepted\'\\n          : \'dismissed\';\\n      }\\n    )();\\n  }\\n<\/script>\\n```"},{"kind":"text","text":"\\n\\n## Modal dialog gets dismissed by default\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Click, Text, PageElement, ModalDialog } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst Example = {\\n  trigger: () =>\\n    PageElement.located(By.id(\'trigger\')).describedAs(\'the modal dialog trigger\'),\\n\\n  result: () =>\\n    PageElement.located(By.id(\'result\')).describedAs(\'result\'),\\n}\\n\\nawait actorCalled(\'Nick\').attemptsTo(\\n  Click.on(Example.trigger()),\\n\\n  Ensure.that(ModalDialog.lastDialogState(), equals(\'dismissed\')),\\n\\n  Ensure.that(Text.of(Example.result()), equals(\'dismissed\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Changing modal dialog handler\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Click, Text, PageElement, ModalDialog } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst Example = {\\n  trigger: () =>\\n    PageElement.located(By.id(\'trigger\')).describedAs(\'the modal dialog trigger\'),\\n\\n  result: () =>\\n    PageElement.located(By.id(\'result\')).describedAs(\'result\'),\\n}\\n\\nawait actorCalled(\'Nick\').attemptsTo(\\n  ModalDialog.acceptNext(),\\n  // or: ModalDialog.acceptNextWithValue(\'some value\'),\\n  // or: ModalDialog.dismissNext(),\\n\\n  Click.on(Example.trigger),\\n\\n  Ensure.that(ModalDialog.lastDialogState(), equals(\'accepted\')),\\n\\n  Ensure.that(Text.of(Example.result), equals(\'accepted\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"children":[{"id":3919,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":127,"character":11}],"signatures":[{"id":3920,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":".\\n\\n#### Example usage\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Wait } from \'@serenity-js/core\'\\nimport { Ensure, equals, isPresent } from \'@serenity-js/assertions\'\\nimport { ModalDialog } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Nick\').attemptsTo(\\n  ModalDialog.acceptNext(),\\n  Wait.until(ModalDialog, isPresent()),\\n  Ensure.that(ModalDialog.lastDialogState(), equals(\'accepted\')),\\n)\\n```"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":127,"character":11}],"type":{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":3921,"name":"acceptNext","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":134,"character":11}],"signatures":[{"id":3922,"name":"acceptNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [interaction](/api/core/class/Interaction/) that invokes ["},{"kind":"code","text":"`ModalDialog.acceptNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNext)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":134,"character":11}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3923,"name":"acceptNextWithValue","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":144,"character":11}],"signatures":[{"id":3924,"name":"acceptNextWithValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [interaction](/api/core/class/Interaction/) that invokes ["},{"kind":"code","text":"`ModalDialog.acceptNextWithValue`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#acceptNextWithValue)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":144,"character":11}],"parameters":[{"id":3925,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3926,"name":"dismissNext","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":152,"character":11}],"signatures":[{"id":3927,"name":"dismissNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Produces an [interaction](/api/core/class/Interaction/) that invokes ["},{"kind":"code","text":"`ModalDialog.dismissNext`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#dismissNext)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":152,"character":11}],"type":{"type":"reference","target":753,"name":"Interaction","package":"@serenity-js/core"}}]},{"id":3928,"name":"lastDialogMessage","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":160,"character":11}],"signatures":[{"id":3929,"name":"lastDialogMessage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`ModalDialog.message`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#message) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":160,"character":11}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":3930,"name":"lastDialogState","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":168,"character":11}],"signatures":[{"id":3931,"name":"lastDialogState","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter) that resolves to ["},{"kind":"code","text":"`ModalDialog.state`"},{"kind":"text","text":"](/api/web/class/ModalDialog/#state) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":168,"character":11}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":3932,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":3933,"name":"new ModalDialog","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":3918,"name":"ModalDialog","package":"@serenity-js/web"}}]},{"id":3934,"name":"message","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":183,"character":13}],"signatures":[{"id":3935,"name":"message","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a ["},{"kind":"code","text":"`LogicError`"},{"kind":"text","text":"](/api/core/class/LogicError/)\\n when no dialog has been handled yet."}]}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":183,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3936,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":193,"character":13}],"signatures":[{"id":3937,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":193,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}},{"id":3938,"name":"state","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"signatures":[{"id":3939,"name":"state","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":199,"character":4}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[3932]},{"title":"Methods","children":[3919,3921,3923,3926,3928,3930,3934,3936,3938]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":103,"character":22}],"extendedBy":[{"type":"reference","target":3848,"name":"AbsentModalDialog"},{"type":"reference","target":3870,"name":"AcceptedModalDialog"},{"type":"reference","target":3894,"name":"DismissedModalDialog"}],"implementedTypes":[{"type":"reference","target":890,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/ModalDialog","previousId":3894,"nextId":3940},{"id":3940,"name":"ModalDialogHandler","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Represent the strategy to use with any upcoming ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/) windows.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/)\\n- ["},{"kind":"code","text":"`Page.modalDialog`"},{"kind":"text","text":"](/api/web/class/Page/#modalDialog)"}]},"children":[{"id":3945,"name":"acceptNext","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":25,"character":13}],"signatures":[{"id":3946,"name":"acceptNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the handler to accept the next JavaScript modal dialog."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":25,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3947,"name":"acceptNextWithValue","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":31,"character":13}],"signatures":[{"id":3948,"name":"acceptNextWithValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the handler to accept the next JavaScript "},{"kind":"code","text":"`prompt``\\nwith a given `"},{"kind":"text","text":"text` value."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":31,"character":13}],"parameters":[{"id":3949,"name":"text","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3950,"name":"dismissNext","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":36,"character":13}],"signatures":[{"id":3951,"name":"dismissNext","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the handler to dismiss the next JavaScript modal dialog."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":36,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3952,"name":"reset","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":41,"character":13}],"signatures":[{"id":3953,"name":"reset","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resets the handler to its default state."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":41,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]},{"id":3954,"name":"last","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":47,"character":10}],"signatures":[{"id":3955,"name":"last","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the most recently handled ["},{"kind":"code","text":"`ModalDialog`"},{"kind":"text","text":"](/api/web/class/ModalDialog/),\\nor ["},{"kind":"code","text":"`AbsentModalDialog`"},{"kind":"text","text":"](/api/web/class/AbsentModalDialog/) when no dialogs have been handled yet."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":47,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3918,"name":"ModalDialog","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[3945,3947,3950,3952,3954]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":16,"character":22}],"permalink":"/api/web/class/ModalDialogHandler","previousId":3918,"nextId":4527},{"id":4527,"name":"By","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"code","text":"`By`"},{"kind":"text","text":" produces a ["},{"kind":"code","text":"`Selector`"},{"kind":"text","text":"](/api/web/class/Selector/) used to locate a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/) on a web page.\\nSelectors can be defined using a static value or a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) to be resolved at runtime.\\n\\n### Defining a selector using a static value\\n\\n"},{"kind":"code","text":"```typescript\\nimport { PageElement, By } from \'@serenity-js/web\'\\n\\nclass LoginForm {\\n  static usernameField = () =>\\n    PageElement.located(By.id(\'username\'))              // locate element by its id\\n      .describedAs(\'username field\')\\n\\n  static passwordField = () =>\\n    PageElement.of(By.css(\'[data-test=\\"password\\"]\'))    // locate element using a CSS selector\\n      .describedAs(\'password field\')\\n}\\n```"},{"kind":"text","text":"\\n\\n### Defining a selector using a Question\\n\\nEach method on this class accepts an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable) to allow for dynamic resolution of the selector.\\nThis can be useful when the selector is not known at the time of writing the test, or when the selector\\nneeds to be calculated based on the state of the system under test.\\n\\nThe example below demonstrates how to use ["},{"kind":"code","text":"`q`"},{"kind":"text","text":"](/api/core/function/q/) to define a selector that includes a dynamic value.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { q } from \'@serenity-js/core\'\\nimport { PageElement, By } from \'@serenity-js/web\'\\n\\nclass FormField {\\n  static withTestId = (id: Answerable<string>) =>\\n    PageElement.of(By.css(q`input[data-test-id=\\"${ id }\\"]`))\\n      .describedAs(\'form field\')\\n}\\n\\n```"},{"kind":"text","text":"\\n\\n### Learn more\\n- [Page Element Query Language](/handbook/web-testing/page-element-query-language)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\n- ["},{"kind":"code","text":"`q`"},{"kind":"text","text":"](/api/core/function/q/)"}]},"children":[{"id":4528,"name":"css","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":66,"character":11}],"signatures":[{"id":4529,"name":"css","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":66,"character":11}],"parameters":[{"id":4530,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4549,"name":"ByCss","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4531,"name":"cssContainingText","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":80,"character":11}],"signatures":[{"id":4532,"name":"cssContainingText","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) with a given ["},{"kind":"code","text":"`innerText`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText)\\nusing a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":80,"character":11}],"parameters":[{"id":4533,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}},{"id":4534,"name":"text","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4561,"name":"ByCssContainingText","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4535,"name":"deepCss","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":94,"character":11}],"signatures":[{"id":4536,"name":"deepCss","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)\\ncapable of piercing [shadow DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM)-piercing"}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":94,"character":11}],"parameters":[{"id":4537,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4549,"name":"ByCss","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4538,"name":"id","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":106,"character":11}],"signatures":[{"id":4539,"name":"id","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using its [id](https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":106,"character":11}],"parameters":[{"id":4540,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4587,"name":"ById","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4541,"name":"tagName","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":118,"character":11}],"signatures":[{"id":4542,"name":"tagName","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using the name of its [HTML tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Element)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":118,"character":11}],"parameters":[{"id":4543,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4599,"name":"ByTagName","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4544,"name":"xpath","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":130,"character":11}],"signatures":[{"id":4545,"name":"xpath","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using an [XPath selector](https://developer.mozilla.org/en-US/docs/Web/XPath)."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":130,"character":11}],"parameters":[{"id":4546,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4611,"name":"ByXPath","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}}]},{"id":4547,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4548,"name":"new By","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4527,"name":"By","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[4547]},{"title":"Methods","children":[4528,4531,4535,4538,4541,4544]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":59,"character":13}],"permalink":"/api/web/class/By","previousId":3940,"nextId":4549},{"id":4549,"name":"ByCss","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.css`"},{"kind":"text","text":"](/api/web/class/By/#css)"}]},"children":[{"id":4550,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":11,"character":4}],"signatures":[{"id":4551,"name":"new ByCss","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":11,"character":4}],"parameters":[{"id":4552,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4549,"name":"ByCss","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4625,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4624,"name":"Selector.constructor"}},{"id":4553,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4554,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4555,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4627,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4626,"name":"Selector.toString"}},{"id":4556,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4557,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4558,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4629,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4628,"name":"Selector.equals"}},{"id":4559,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4560,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4632,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4631,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4550]},{"title":"Properties","children":[4553]},{"title":"Methods","children":[4554,4556,4559]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByCss","previousId":4527,"nextId":4561},{"id":4561,"name":"ByCssContainingText","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) with a given ["},{"kind":"code","text":"`innerText`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText)\\nusing a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.cssContainingText`"},{"kind":"text","text":"](/api/web/class/By/#cssContainingText)"}]},"children":[{"id":4562,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":4}],"signatures":[{"id":4563,"name":"new ByCssContainingText","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":4}],"parameters":[{"id":4564,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":4565,"name":"text","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4561,"name":"ByCssContainingText","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4625,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4624,"name":"Selector.constructor"}},{"id":4566,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4567,"name":"text","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":63}],"type":{"type":"intrinsic","name":"string"}},{"id":4568,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4569,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4627,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4626,"name":"Selector.toString"}},{"id":4570,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4571,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4572,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4629,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4628,"name":"Selector.equals"}},{"id":4573,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4574,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4632,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4631,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4562]},{"title":"Properties","children":[4566,4567]},{"title":"Methods","children":[4568,4570,4573]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByCssContainingText","previousId":4549,"nextId":4575},{"id":4575,"name":"ByDeepCss","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)\\ncapable of piercing [shadow DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM)-piercing\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.deepCss`"},{"kind":"text","text":"](/api/web/class/By/#deepCss)"}]},"children":[{"id":4576,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":12,"character":4}],"signatures":[{"id":4577,"name":"new ByDeepCss","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":12,"character":4}],"parameters":[{"id":4578,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4575,"name":"ByDeepCss","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4625,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4624,"name":"Selector.constructor"}},{"id":4579,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":12,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4580,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4581,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4627,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4626,"name":"Selector.toString"}},{"id":4582,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4583,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4584,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4629,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4628,"name":"Selector.equals"}},{"id":4585,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4586,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4632,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4631,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4576]},{"title":"Properties","children":[4579]},{"title":"Methods","children":[4580,4582,4585]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":11,"character":13}],"extendedTypes":[{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByDeepCss","previousId":4561,"nextId":4587},{"id":4587,"name":"ById","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using its [id](https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.id`"},{"kind":"text","text":"](/api/web/class/By/#id)"}]},"children":[{"id":4588,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":11,"character":4}],"signatures":[{"id":4589,"name":"new ById","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":11,"character":4}],"parameters":[{"id":4590,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4587,"name":"ById","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4625,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4624,"name":"Selector.constructor"}},{"id":4591,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4592,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4593,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4627,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4626,"name":"Selector.toString"}},{"id":4594,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4595,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4596,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4629,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4628,"name":"Selector.equals"}},{"id":4597,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4598,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4632,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4631,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4588]},{"title":"Properties","children":[4591]},{"title":"Methods","children":[4592,4594,4597]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ById","previousId":4575,"nextId":4599},{"id":4599,"name":"ByTagName","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using the name of its [HTML tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Element).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.tagName`"},{"kind":"text","text":"](/api/web/class/By/#tagName)"}]},"children":[{"id":4600,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":11,"character":4}],"signatures":[{"id":4601,"name":"new ByTagName","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":11,"character":4}],"parameters":[{"id":4602,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4599,"name":"ByTagName","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4625,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4624,"name":"Selector.constructor"}},{"id":4603,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4604,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4605,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4627,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4626,"name":"Selector.toString"}},{"id":4606,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4607,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4608,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4629,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4628,"name":"Selector.equals"}},{"id":4609,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4610,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4632,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4631,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4600]},{"title":"Properties","children":[4603]},{"title":"Methods","children":[4604,4606,4609]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByTagName","previousId":4587,"nextId":4611},{"id":4611,"name":"ByXPath","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Locates a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) using an [XPath selector](https://developer.mozilla.org/en-US/docs/Web/XPath).\\n\\n**Pro tip:** Instantiate using ["},{"kind":"code","text":"`By.xpath`"},{"kind":"text","text":"](/api/web/class/By/#xpath)"}]},"children":[{"id":4612,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":11,"character":4}],"signatures":[{"id":4613,"name":"new ByXPath","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":11,"character":4}],"parameters":[{"id":4614,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":4611,"name":"ByXPath","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":4625,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","target":4624,"name":"Selector.constructor"}},{"id":4615,"name":"value","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":11,"character":32}],"type":{"type":"intrinsic","name":"string"}},{"id":4616,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4617,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":4627,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","target":4626,"name":"Selector.toString"}},{"id":4618,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4619,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4620,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":4629,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","target":4628,"name":"Selector.equals"}},{"id":4621,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4622,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":4632,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","target":4631,"name":"Selector.toJSON"}}],"groups":[{"title":"Constructors","children":[4612]},{"title":"Properties","children":[4615]},{"title":"Methods","children":[4616,4618,4621]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":10,"character":13}],"extendedTypes":[{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}],"permalink":"/api/web/class/ByXPath","previousId":4599,"nextId":4623},{"id":4623,"name":"Selector","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Describes a selector you use to identify a ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) or a group of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)."}]},"children":[{"id":4624,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4625,"name":"new Selector","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.constructor"}},{"id":4626,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"signatures":[{"id":4627,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}}],"overwrites":{"type":"reference","target":-1,"name":"TinyType.toString"}},{"id":4628,"name":"equals","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4629,"name":"equals","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","name":"Comparing simple types","content":[{"kind":"code","text":"```ts\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id(`3cc0852d-fda7-4f61-874e-0cfadbd6182a`);\\n\\nid.equals(id) === true\\n```"}]},{"tag":"@example","name":"Comparing complex types recursively","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"parameters":[{"id":4630,"name":"another","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.equals"}},{"id":4631,"name":"toJSON","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":4632,"name":"toJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/types/json.d.ts","qualifiedName":"JSONValue"},"name":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"TinyType.toJSON"}}],"groups":[{"title":"Constructors","children":[4624]},{"title":"Methods","children":[4626,4628,4631]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":9,"character":22}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/tiny-types/lib/TinyType.d.ts","qualifiedName":"TinyType"},"name":"TinyType","package":"tiny-types"}],"extendedBy":[{"type":"reference","target":4549,"name":"ByCss"},{"type":"reference","target":4561,"name":"ByCssContainingText"},{"type":"reference","target":4575,"name":"ByDeepCss"},{"type":"reference","target":4587,"name":"ById"},{"type":"reference","target":4599,"name":"ByTagName"},{"type":"reference","target":4611,"name":"ByXPath"}],"permalink":"/api/web/class/Selector","previousId":4611,"nextId":4639},{"id":4639,"name":"Attribute","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified HTML attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"shopping-list\\" data-items-left=\\"2\\">\\n  <li data-state=\\"bought\\">Coffee<li>\\n  <li data-state=\\"buy\\">Honey<li>\\n  <li data-state=\\"buy\\">Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve an HTML attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.id(\'shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Attribute.called(\'data-items-left\').of(shoppingList()),\\n      equals(\'2\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`Attribute`"},{"kind":"text","text":" as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Attribute.called(\'id\').of(shoppingList()).toLocaleUpperCase(),\\n      equals(\'SHOPPING-LIST\')\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElements } from \'@serenity-js/web\'\\n\\nclass ShoppingList {\\n  static items = () =>\\n    PageElements.located(By.css(\'#shopping-list li\'))\\n      .describedAs(\'items\')\\n\\n  static outstandingItems = () =>\\n    ShoppingList.items()\\n      .where(\\n        Attribute.called(\'data-state\'),\\n        includes(\'buy\')\\n      )\\n}\\n\\nawait actorCalled(\'Lisa\')\\n.whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n.attemptsTo(\\n  Ensure.that(\\n    Text.ofAll(ShoppingList.outstandingItems()),\\n    equals([ \'Honey\', \'Chocolate\' ])\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":4640,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":110,"character":11}],"signatures":[{"id":4641,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified HTML attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":110,"character":11}],"typeParameter":[{"id":4642,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4643,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the attribute to retrieve"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4639,"typeArguments":[{"type":"reference","target":4642,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"Attribute","package":"@serenity-js/web"}}]},{"id":4708,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":4709,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":4710,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":4711,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":4712,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":4713,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4714,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4715,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":4716,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":4717,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":4718,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":4719,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":4720,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":4721,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4722,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4722]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":4728,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":4729,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}},{"id":4700,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":132,"character":4}],"signatures":[{"id":4701,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to the value of an HTML attribute of the "},{"kind":"code","text":"`pageElement`"},{"kind":"text","text":".\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":132,"character":4}],"parameters":[{"id":4702,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4730,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4730,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4730,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}}],"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}},{"id":4703,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":146,"character":10}],"signatures":[{"id":4704,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":146,"character":10}],"parameters":[{"id":4705,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}},{"id":4706,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":161,"character":4}],"signatures":[{"id":4707,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":161,"character":4}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"QuestionAdapter","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","target":-1,"name":"Optional.isPresent"}}],"groups":[{"title":"Methods","children":[4640,4708,4711,4718,4728,4700,4703,4706]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":98,"character":13}],"typeParameters":[{"id":4730,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4730,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"Attribute.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"},{"type":"reference","target":890,"name":"Optional","package":"@serenity-js/core"}],"permalink":"/api/web/class/Attribute","previousId":4623,"nextId":4731},{"id":4731,"name":"ComputedStyle","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified computed style property of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"shopping-list\\" style=\\"display: block\\">\\n  <li style=\\"display: block\\">Coffee<li>\\n  <li style=\\"display: none\\">Honey<li>\\n  <li style=\\"display: block\\">Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve a computed style property of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { ComputedStyle, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.id(\'shopping-list\'))\\n     .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\').attemptsTo(\\n  Ensure.that(\\n    ComputedStyle.called(\'display\').of(shoppingList()),\\n    equals(\'block\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`ComputedStyle`"},{"kind":"text","text":" as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\').attemptsTo(\\n  Ensure.that(\\n    ComputedStyle.called(\'display\').of(shoppingList()).toLocaleUpperCase(),\\n    equals(\'BLOCK\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElements } from \'@serenity-js/web\'\\n\\nclass ShoppingList {\\n  static items = () =>\\n    PageElements.located(By.css(\'#shopping-list li\'))\\n      .describedAs(\'items\')\\n\\n  static outstandingItems = () =>\\n    ShoppingList.items()\\n      .where(\\n        ComputedStyle.called(\'display\'),\\n        equals(\'block\')\\n      )\\n}\\n\\nawait actorCalled(\'Lisa\')\\n .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n .attemptsTo(\\n   Ensure.that(\\n     Text.ofAll(ShoppingList.outstandingItems()),\\n     equals([ \'Honey\', \'Chocolate\' ])\\n   ),\\n )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":4732,"name":"called","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":116,"character":11}],"signatures":[{"id":4733,"name":"called","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified computed style property of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":116,"character":11}],"typeParameter":[{"id":4734,"name":"NET","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":4735,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The name of the computed style property to retrieve"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4731,"typeArguments":[{"type":"reference","target":4734,"name":"NET","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"ComputedStyle","package":"@serenity-js/web"}}]},{"id":4803,"name":"describedAs","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"signatures":[{"id":4804,"name":"describedAs","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Changes the description of this object, as returned by ["},{"kind":"code","text":"`Describable.describedBy`"},{"kind":"text","text":"](/api/core/class/Describable/#describedBy)\\nand ["},{"kind":"code","text":"`Describable.toString`"},{"kind":"text","text":"](/api/core/class/Describable/#toString)."}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":282,"character":4}],"parameters":[{"id":4805,"name":"description","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Replaces the current description according to the following rules:\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is an ["},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":"](/api/core/#Answerable), it replaces the current description\\n - If "},{"kind":"code","text":"`description`"},{"kind":"text","text":" is a ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/), the current description is passed as "},{"kind":"code","text":"`context`"},{"kind":"text","text":" to "},{"kind":"code","text":"`description.of(context)`"},{"kind":"text","text":", and the result replaces the current description"}]},"type":{"type":"union","types":[{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"},{"type":"reference","target":1497,"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}]}}],"type":{"type":"intrinsic","name":"this"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedAs"}},{"id":4806,"name":"as","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"signatures":[{"id":4807,"name":"as","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":4}],"typeParameter":[{"id":4808,"name":"O","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"parameters":[{"id":4809,"name":"mapping","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":4810,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"signatures":[{"id":4811,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/Question.ts","line":293,"character":19}],"parameters":[{"id":4812,"name":"answer","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true},{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}]}}]}}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4373,"name":"O","package":"@serenity-js/core","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.as"}},{"id":4813,"name":"describedBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"signatures":[{"id":4814,"name":"describedBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves the description of this object in the context of the provided "},{"kind":"code","text":"`actor`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":4}],"parameters":[{"id":4815,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":4816,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4817,"name":"name","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":17,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4817]}],"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":16,"character":58}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.describedBy"}},{"id":4823,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"signatures":[{"id":4824,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable description of this object."}]},"sources":[{"fileName":"packages/core/lib/screenplay/questions/Describable.ts","line":24,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Question.toString"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.toString"}},{"id":4794,"name":"ofPseudoElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":140,"character":4}],"signatures":[{"id":4795,"name":"ofPseudoElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe value of the specified computed style property of the specified pseudo-element of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":140,"character":4}],"parameters":[{"id":4796,"name":"pseudoElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The pseudo-element to retrieve the computed style property from, such as "},{"kind":"code","text":"`::before`"},{"kind":"text","text":" or "},{"kind":"code","text":"`::after`"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4825,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4797,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":158,"character":4}],"signatures":[{"id":4798,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Resolves to the value of a computed style property of the "},{"kind":"code","text":"`pageElement`"},{"kind":"text","text":".\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":158,"character":4}],"parameters":[{"id":4799,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4825,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4825,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4825,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}}],"implementationOf":{"type":"reference","target":-1,"name":"MetaQuestion.of"}},{"id":4800,"name":"answeredBy","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":173,"character":10}],"signatures":[{"id":4801,"name":"answeredBy","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":173,"character":10}],"parameters":[{"id":4802,"name":"actor","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":1003,"name":"AnswersQuestions","package":"@serenity-js/core"},{"type":"reference","target":557,"name":"UsesAbilities","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","target":-1,"name":"Question.answeredBy"}}],"groups":[{"title":"Methods","children":[4732,4803,4806,4813,4823,4794,4797,4800]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/ComputedStyle.ts","line":104,"character":13}],"typeParameters":[{"id":4825,"name":"Native_Element_Type","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"extendedTypes":[{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"implementedTypes":[{"type":"reference","target":1497,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":4825,"name":"Native_Element_Type","package":"@serenity-js/web","qualifiedName":"ComputedStyle.Native_Element_Type","refersToTypeParameter":true}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":893,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}],"name":"Question","package":"@serenity-js/core"}],"name":"MetaQuestion","package":"@serenity-js/core"}],"permalink":"/api/web/class/ComputedStyle","previousId":4639,"nextId":4826},{"id":4826,"name":"CssClasses","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na list of [CSS classes](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-class)\\nof a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"shopping-list\\" class=\\"active favourite\\">\\n  <li class=\\"bought\\">Coffee<li>\\n  <li class=\\"buy\\">Honey<li>\\n  <li class=\\"buy\\">Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve CSS classes of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      CssClasses.of(shoppingList()),\\n      equals([ \'active\', \'favourite\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using CssClasses as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      CssClasses.of(shoppingList()).length,\\n      equals(2)\\n    ),\\n    Ensure.that(\\n      CssClasses.of(shoppingList())[0],\\n      equals(\'active\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, contain } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement } from \'@serenity-js/web\'\\n\\nclass ShoppingList {\\n  static items = () =>\\n    PageElements.located(By.css(\'#shopping-list li\'))\\n      .describedAs(\'items\')\\n\\n  static outstandingItems = () =>\\n    ShoppingList.items()\\n      .where(CssClasses, contain(\'buy\'))\\n}\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Text.ofAll(ShoppingList.outstandingItems()),\\n      equals([ \'Honey\', \'Chocolate\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":4827,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/CssClasses.ts","line":112,"character":11}],"signatures":[{"id":4828,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na list of [CSS classes](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-class)\\nof a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/CssClasses.ts","line":112,"character":11}],"parameters":[{"id":4829,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4830,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4831,"name":"new CssClasses","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4826,"name":"CssClasses","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[4830]},{"title":"Methods","children":[4827]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/CssClasses.ts","line":99,"character":13}],"permalink":"/api/web/class/CssClasses","previousId":4731,"nextId":4832},{"id":4832,"name":"LastScriptExecution","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na returns the result of the last script executed via ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/).\\n\\n## Executing a script and reading the result\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, LastScriptExecution } from \'@serenity-js/web\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    ExecuteScript.sync(() => navigator.userAgent),\\n    Ensure.that(LastScriptExecution.result<string>(), includes(\'Chrome\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using LastScriptExecution as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, LastScriptExecution } from \'@serenity-js/web\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    ExecuteScript.sync(() => navigator.userAgent),\\n    Ensure.that(\\n      LastScriptExecution.result<string>().toLocaleLowerCase(),\\n      includes(\'chrome\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)"}]},"children":[{"id":4833,"name":"result","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/LastScriptExecution.ts","line":53,"character":11}],"signatures":[{"id":4834,"name":"result","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Enables asserting on the result of a function executed via ["},{"kind":"code","text":"`ExecuteScript`"},{"kind":"text","text":"](/api/web/class/ExecuteScript/)."}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/LastScriptExecution.ts","line":53,"character":11}],"typeParameter":[{"id":4835,"name":"R","variant":"typeParam","kind":131072,"flags":{"isExternal":true}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4835,"name":"R","package":"@serenity-js/web","refersToTypeParameter":true}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4836,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4837,"name":"new LastScriptExecution","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4832,"name":"LastScriptExecution","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[4836]},{"title":"Methods","children":[4833]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/LastScriptExecution.ts","line":48,"character":13}],"permalink":"/api/web/class/LastScriptExecution","previousId":4826,"nextId":4838},{"id":4838,"name":"Selected","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\noptions and values selected in a\\n[HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select).\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Select`"},{"kind":"text","text":"](/api/web/class/Select/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":4839,"name":"valueOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":69,"character":11}],"signatures":[{"id":4840,"name":"valueOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na single [option](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nselected in an [HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select).\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\');\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.value(\'UK\').from(Countries.dropdown),\\n    Ensure.that(Selected.valueOf(Countries.dropdown), equals(\'UK\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.value`"},{"kind":"text","text":"](/api/web/class/Select/#value)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":69,"character":11}],"parameters":[{"id":4841,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4842,"name":"valuesOf","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":128,"character":11}],"signatures":[{"id":4843,"name":"valuesOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nvalues of [options](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nselected in an [HTML "},{"kind":"code","text":"`<select multiple>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple)\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.values(\'UK\').from(Countries.dropdown),\\n    Ensure.that(Selected.valuesOf(Countries.dropdown), equals([ \'UK\' ])),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.values`"},{"kind":"text","text":"](/api/web/class/Select/#values)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":128,"character":11}],"parameters":[{"id":4844,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4845,"name":"optionIn","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":189,"character":11}],"signatures":[{"id":4846,"name":"optionIn","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\na single option selected in an [HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple)\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.option(\'Poland\').from(Countries.dropdown),\\n    Ensure.that(\\n      Selected.optionIn(Countries.dropdown),\\n      equals(\'Poland\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.option`"},{"kind":"text","text":"](/api/web/class/Select/#option)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":189,"character":11}],"parameters":[{"id":4847,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4848,"name":"optionsIn","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":250,"character":11}],"signatures":[{"id":4849,"name":"optionsIn","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\noptions selected in an [HTML "},{"kind":"code","text":"`<select multiple>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple)\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.options(\'Poland\', \'United States\').from(Countries.dropdown),\\n    Ensure.that(\\n      Selected.optionsIn(Countries.dropdown),\\n      equals([ \'Poland\', \'United States\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Select.options`"},{"kind":"text","text":"](/api/web/class/Select/#options)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":250,"character":11}],"parameters":[{"id":4850,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/) identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","target":648,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4851,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4852,"name":"new Selected","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4838,"name":"Selected","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[4851]},{"title":"Methods","children":[4839,4842,4845,4848]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":19,"character":13}],"permalink":"/api/web/class/Selected","previousId":4832,"nextId":4853},{"id":4853,"name":"Text","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe visible (i.e. not hidden by CSS) ["},{"kind":"code","text":"`innerText`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText) of:\\n- a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n- a group of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\n\\nThe result includes the visible text of any sub-elements, without any leading or trailing whitespace.\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<h1>Shopping list</h1>\\n<ul id=\\"shopping-list\\">\\n  <li>Coffee<li>\\n  <li class=\\"bought\\">Honey<li>\\n  <li>Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve text of a single ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Text } from \'@serenity-js/web\'\\n\\nconst header = () =>\\n  PageElement.located(By.css(\'h1\'))\\n    .describedAs(\'header\')\\n\\nawait actorCalled(\'Lisa\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Ensure.that(Text.of(header()), equals(\'Shopping list\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Retrieve text of multiple ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Text } from \'@serenity-js/web\'\\n\\nconst shoppingListItems = () =>\\n  PageElements.located(By.css(\'#shopping-list li\'))\\n    .describedAs(\'shopping list items\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Text.ofAll(shoppingListItems()),\\n      equals([ \'Coffee\', \'Honey\', \'Chocolate\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in [Page Element Query Language](/handbook/web-testing/page-element-query-language/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { contain, Ensure } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement, Text } from \'@serenity-js/web\'\\n\\nconst shoppingListItemCalled = (name: string) =>\\n  PageElements.located(By.css(\'#shopping-list li\'))\\n    .describedAs(\'shopping list items\')\\n    .where(Text, equals(name))\\n    .first()\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      CssClasses.of(shoppingListItemCalled(\'Honey)),\\n      contain(\'bought\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":4854,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":107,"character":11}],"signatures":[{"id":4855,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe text of a single ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":107,"character":11}],"parameters":[{"id":4856,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4857,"name":"ofAll","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":129,"character":11},{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":130,"character":11},{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":131,"character":11}],"signatures":[{"id":4858,"name":"ofAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe text of a group of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElements/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":129,"character":11}],"parameters":[{"id":4859,"name":"pageElements","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4264,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElements","package":"@serenity-js/web"}}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}},{"id":4860,"name":"ofAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":130,"character":11}],"parameters":[{"id":4861,"name":"pageElements","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":648,"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}}],"name":"Answerable","package":"@serenity-js/core"}}],"type":{"type":"reference","target":995,"typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"QuestionAdapter","package":"@serenity-js/core"}}]},{"id":4862,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4863,"name":"new Text","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4853,"name":"Text","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[4862]},{"title":"Methods","children":[4854,4857]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":95,"character":13}],"permalink":"/api/web/class/Text","previousId":4838,"nextId":4864},{"id":4864,"name":"Value","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Uses the [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe "},{"kind":"code","text":"`value`"},{"kind":"text","text":" attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n<input type=\\"text\\" id=\\"username\\" value=\\"Alice\\" />\\n```"},{"kind":"text","text":"\\n\\n## Retrieve the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Value } from \'@serenity-js/web\'\\n\\nconst usernameField = () =>\\n  PageElement.located(By.id(\'username\'))\\n    .describedAs(\'username field\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(Value.of(usernameField), equals(\'Alice\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using Value as ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Value } from \'@serenity-js/web\'\\n\\nconst usernameField = () =>\\n  PageElement.located(By.id(\'username\'))\\n    .describedAs(\'username field\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Value.of(usernameField).toLocaleLowerCase()[0],\\n      equals(\'a\')  // [a]lice\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)\\n- ["},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"](/api/core/#QuestionAdapter)\\n- ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/)"}]},"children":[{"id":4865,"name":"of","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Value.ts","line":72,"character":11}],"signatures":[{"id":4866,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a ["},{"kind":"code","text":"`Question`"},{"kind":"text","text":"](/api/core/class/Question/) that uses\\nthe [actor\'s](/api/core/class/Actor/) [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/) to retrieve\\nthe "},{"kind":"code","text":"`value`"},{"kind":"text","text":" attribute of a given ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/).\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":"](/api/core/interface/MetaQuestion/)"}]},"sources":[{"fileName":"packages/web/src/screenplay/questions/Value.ts","line":72,"character":11}],"parameters":[{"id":4867,"name":"pageElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"reference","target":995,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"}],"name":"QuestionAdapter","package":"@serenity-js/core"}]}}],"type":{"type":"reference","target":1000,"typeArguments":[{"type":"reference","target":4188,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement","package":"@serenity-js/web"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter","package":"@serenity-js/core"}}]},{"id":4868,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4869,"name":"new Value","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4864,"name":"Value","package":"@serenity-js/web"}}]}],"groups":[{"title":"Constructors","children":[4868]},{"title":"Methods","children":[4865]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Value.ts","line":60,"character":13}],"permalink":"/api/web/class/Value","previousId":4853,"nextId":4870},{"id":4870,"name":"Photographer","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Photographer is a ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) who takes screenshots\\nusing the web browser associated with the [actor](/api/core/class/Actor/) that is\\ncurrently [in the spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n## Registering Photographer programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure, ArtifactArchiver } from \'@serenity-js/core\'\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\nconfigure({\\n  crew: [\\n    ArtifactArchiver.storingArtifactsAt(process.cwd(), \'target/site/serenity\'),\\n    Photographer.whoWill(TakePhotosOfFailures),\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using Photographer with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n  reporter: [\\n      [ \'@serenity-js/playwright-test\', {\\n          crew: [\\n              \'@serenity-js/serenity-bdd\',\\n              [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n          ]\\n          // other Serenity/JS config\\n      }]\\n  ],\\n\\n  use: {\\n    crew: [\\n      [ \'@serenity-js/web:Photographer\', {\\n        strategy: \'TakePhotosOfFailures\',\\n        // strategy: \'TakePhotosOfInteractions\',\\n      } ]\\n    ],\\n  },\\n};\\nexport default config;\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`SerenityOptions`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityOptions/)\\n\\n## Using Photographer with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { ArtifactArchiver } from \'@serenity-js/core\'\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig= {\\n\\n  // Tell WebdriverIO to use Serenity/JS framework\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    // Configure Serenity/JS to use an appropriate test runner adapter\\n    runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    // runner: \'jasmine\',\\n\\n    // register custom Actors class to configure your Serenity/JS actors\\n    actors: new Actors(),\\n\\n    // Register StageCrewMembers we\'ve imported at the top of this file\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n      [ \'@serenity-js/web:Photographer\', {\\n        strategy: \'TakePhotosOfFailures\',\\n        // strategy: \'TakePhotosOfInteractions\',\\n      } ]\\n    ]\\n  },\\n\\n  // ... rest of the config omitted for brevity\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using Photographer with Protractor\\n\\n"},{"kind":"code","text":"```ts\\n// protractor.conf.js\\nexports.config = {\\n\\n  // Tell Protractor to use the Serenity/JS framework Protractor Adapter\\n  framework:      \'custom\',\\n  frameworkPath:  require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    runner: \'jasmine\',\\n    // runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    crew: [\\n      @serenity-js/serenity-bdd\',\\n       \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n       \'@serenity-js/web:Photographer\', {\\n         strategy: \'TakePhotosOfFailures\',\\n         // strategy: \'TakePhotosOfInteractions\',\\n       ]\\n    ]\\n  },\\n\\n  // ... rest of the config omitted for brevity\\n}\\n```"},{"kind":"text","text":"\\n\\n## Taking photos only upon failures only\\n\\n"},{"kind":"code","text":"```ts\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\nPhotographer.whoWill(TakePhotosOfFailures)\\n```"},{"kind":"text","text":"\\n\\n## Taking photos of all the interactions\\n\\n"},{"kind":"code","text":"```ts\\nimport { Photographer, TakePhotosOfInteractions } from \'@serenity-js/web\'\\n\\nPhotographer.whoWill(TakePhotosOfInteractions)\\n```"},{"kind":"text","text":"\\n\\n## Taking photos before and after all the interactions\\n\\n"},{"kind":"code","text":"```ts\\nimport { Photographer, TakePhotosBeforeAndAfterInteractions } from \'@serenity-js/web\'\\n\\nPhotographer.whoWill(TakePhotosBeforeAndAfterInteractions)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\n- ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/)\\n- ["},{"kind":"code","text":"`TakePhotosBeforeAndAfterInteractions`"},{"kind":"text","text":"](/api/web/class/TakePhotosBeforeAndAfterInteractions/)\\n- ["},{"kind":"code","text":"`TakePhotosOfFailures`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfFailures/)\\n- ["},{"kind":"code","text":"`TakePhotosOfInteractions`"},{"kind":"text","text":"](/api/web/class/TakePhotosOfInteractions/)"}]},"children":[{"id":4871,"name":"whoWill","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":165,"character":11}],"signatures":[{"id":4872,"name":"whoWill","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) configured to take photos (screenshots)\\nas per the specified ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/)."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":165,"character":11}],"parameters":[{"id":4873,"name":"strategy","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A no-arg constructor function that instantiates a ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/)"}]},"type":{"type":"reflection","declaration":{"id":4874,"name":"__type","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":165,"character":29}],"signatures":[{"id":4875,"name":"new strategy","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":165,"character":29}],"type":{"type":"reference","target":4893,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}}]}}}],"type":{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":4876,"name":"fromJSON","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":175,"character":11}],"signatures":[{"id":4877,"name":"fromJSON","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Instantiates a new ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) configured to take photos (screenshots)\\nas per the specified ["},{"kind":"code","text":"`PhotoTakingStrategy`"},{"kind":"text","text":"](/api/web/class/PhotoTakingStrategy/)."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":175,"character":11}],"parameters":[{"id":4878,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"id":4879,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":4880,"name":"strategy","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":175,"character":31}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"union","types":[{"type":"literal","value":"PhotoTakingStrategy"},{"type":"literal","value":"TakePhotosBeforeAndAfterInteractions"},{"type":"literal","value":"TakePhotosOfFailures"},{"type":"literal","value":"TakePhotosOfInteractions"}]},{"type":"literal","value":"PhotoTakingStrategy"}],"name":"Omit","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"}}],"groups":[{"title":"Properties","children":[4880]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":175,"character":29}]}}}],"type":{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"}}]},{"id":4881,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":192,"character":4}],"signatures":[{"id":4882,"name":"new Photographer","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":192,"character":4}],"parameters":[{"id":4883,"name":"photoTakingStrategy","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4893,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}},{"id":4884,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true,"isOptional":true},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":4870,"name":"Photographer","package":"@serenity-js/web"}}]},{"id":4887,"name":"assignedTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":204,"character":4}],"signatures":[{"id":4888,"name":"assignedTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Assigns this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) to a given ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":204,"character":4}],"parameters":[{"id":4889,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An instance of a ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/) this ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) will be assigned to"}]},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.assignedTo"}},{"id":4890,"name":"notifyOf","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":215,"character":4}],"signatures":[{"id":4891,"name":"notifyOf","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Handles ["},{"kind":"code","text":"`DomainEvent`"},{"kind":"text","text":"](/api/core-events/class/DomainEvent/) objects emitted by the ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)\\nthis ["},{"kind":"code","text":"`StageCrewMember`"},{"kind":"text","text":"](/api/core/interface/StageCrewMember/) is assigned to."}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":215,"character":4}],"parameters":[{"id":4892,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":2406,"name":"DomainEvent","package":"@serenity-js/core"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","target":-1,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[4881]},{"title":"Methods","children":[4871,4876,4887,4890]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":156,"character":13}],"implementedTypes":[{"type":"reference","target":2119,"name":"StageCrewMember","package":"@serenity-js/core"}],"permalink":"/api/web/class/Photographer","previousId":4864,"nextId":4893},{"id":4893,"name":"PhotoTakingStrategy","variant":"declaration","kind":128,"flags":{"isExternal":true,"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos, a.k.a. screenshots,\\nof the ["},{"kind":"code","text":"`Activity`"},{"kind":"text","text":"](/api/core/class/Activity/) performed by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/)\\nwhen desired conditions are met."}]},"children":[{"id":4894,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4895,"name":"new PhotoTakingStrategy","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4893,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}}]},{"id":4896,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":4897,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":4898,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2245,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2175,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":4899,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[4894]},{"title":"Methods","children":[4896]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":16,"character":22}],"extendedBy":[{"type":"reference","target":4912,"name":"TakePhotosBeforeAndAfterInteractions"},{"type":"reference","target":4925,"name":"TakePhotosOfFailures"},{"type":"reference","target":4938,"name":"TakePhotosOfInteractions"}],"permalink":"/api/web/class/PhotoTakingStrategy","previousId":4870,"nextId":4912},{"id":4912,"name":"TakePhotosBeforeAndAfterInteractions","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos (a.k.a. screenshots) **both before and after**\\nevery single ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) performed\\nby the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n**Please note** that this strategy will result in _a lot_ of screenshots being taken,\\nwhich will seriously affect the performance of your tests.\\nFor this reason, it\'s best to use it only for debugging purposes."}]},"children":[{"id":4913,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4914,"name":"new TakePhotosBeforeAndAfterInteractions","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4912,"name":"TakePhotosBeforeAndAfterInteractions","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":4895,"name":"PhotoTakingStrategy.constructor"}}],"inheritedFrom":{"type":"reference","target":4894,"name":"PhotoTakingStrategy.constructor"}},{"id":4921,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":4922,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":4923,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2245,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2175,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":4924,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":4897,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"inheritedFrom":{"type":"reference","target":4896,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"groups":[{"title":"Constructors","children":[4913]},{"title":"Methods","children":[4921]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/TakePhotosBeforeAndAfterInteractions.ts","line":17,"character":13}],"extendedTypes":[{"type":"reference","target":4893,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}],"permalink":"/api/web/class/TakePhotosBeforeAndAfterInteractions","previousId":4893,"nextId":4925},{"id":4925,"name":"TakePhotosOfFailures","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos (a.k.a. screenshots)\\nwhen then ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/) performed\\nby the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/)\\nresults in an error.\\n\\nThis strategy works best when you are interested in the screenshots only when\\na scenario fails."}]},"children":[{"id":4926,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4927,"name":"new TakePhotosOfFailures","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4925,"name":"TakePhotosOfFailures","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":4895,"name":"PhotoTakingStrategy.constructor"}}],"inheritedFrom":{"type":"reference","target":4894,"name":"PhotoTakingStrategy.constructor"}},{"id":4934,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":4935,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":4936,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2245,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2175,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":4937,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":4897,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"inheritedFrom":{"type":"reference","target":4896,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"groups":[{"title":"Constructors","children":[4926]},{"title":"Methods","children":[4934]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/TakePhotosOfFailures.ts","line":18,"character":13}],"extendedTypes":[{"type":"reference","target":4893,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}],"permalink":"/api/web/class/TakePhotosOfFailures","previousId":4912,"nextId":4938},{"id":4938,"name":"TakePhotosOfInteractions","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Configures the ["},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":"](/api/web/class/Photographer/) to take photos (a.k.a. screenshots)\\nwhen then ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/)\\nperforms any ["},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"](/api/core/class/Interaction/).\\n\\nThis strategy works best when you want the results of your automated tests\\nto become comprehensive living documentation of your system.\\n\\n*Please note* that taking screenshots affects the performance of your tests."}]},"children":[{"id":4939,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"id":4940,"name":"new TakePhotosOfInteractions","variant":"signature","kind":16384,"flags":{"isExternal":true},"type":{"type":"reference","target":4938,"name":"TakePhotosOfInteractions","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":4895,"name":"PhotoTakingStrategy.constructor"}}],"inheritedFrom":{"type":"reference","target":4894,"name":"PhotoTakingStrategy.constructor"}},{"id":4947,"name":"considerTakingPhoto","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"signatures":[{"id":4948,"name":"considerTakingPhoto","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) in the [spotlight](/api/core/function/actorInTheSpotlight/).\\n\\n#### Learn more\\n- [ActivityStarts](/api/core-events/class/ActivityStarts/)\\n- [ActivityFinished](/api/core-events/class/ActivityFinished/)\\n- ["},{"kind":"code","text":"`Stage`"},{"kind":"text","text":"](/api/core/class/Stage/)"}]},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10}],"parameters":[{"id":4949,"name":"event","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","target":2245,"name":"ActivityStarts","package":"@serenity-js/core"},{"type":"reference","target":2175,"name":"ActivityFinished","package":"@serenity-js/core"}]}},{"id":4950,"name":"stage","variant":"param","kind":32768,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","target":2044,"name":"Stage","package":"@serenity-js/core"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":4897,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"inheritedFrom":{"type":"reference","target":4896,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"groups":[{"title":"Constructors","children":[4939]},{"title":"Methods","children":[4947]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/TakePhotosOfInteractions.ts","line":18,"character":13}],"extendedTypes":[{"type":"reference","target":4893,"name":"PhotoTakingStrategy","package":"@serenity-js/web"}],"permalink":"/api/web/class/TakePhotosOfInteractions","previousId":4925}],"groups":[{"title":"Abilities","children":[3092]},{"title":"Activities","children":[3110,3156,3196,3236,3283,3295,3338,3378,3390,3427,3475,3515,3551,3586,3625]},{"title":"Classes","children":[3661]},{"title":"Errors","children":[3007,3033,3056]},{"title":"Expectations","children":[3082,3084,3086,3088,3090]},{"title":"Models","children":[3698,3702,3733,3839,3956,4022,4072,4188,4264,4391,4479,4503,4633,4636,3848,3870,3894,3918,3940,4527,4549,4561,4575,4587,4599,4611,4623]},{"title":"Questions","children":[4639,4731,4826,4832,4838,4853,4864]},{"title":"Stage","children":[4870,4893,4912,4925,4938]}],"sources":[{"fileName":"packages/web/src/index.ts","line":1,"character":0}],"permalink":"/api/web"},"urlSlug":"web"}],"packageName":"@serenity-js/web","packageVersion":"3.25.4"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":26,"name":"@serenity-js/webdriverio/adapter","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6664,"name":"WebdriverIOFrameworkAdapterFactory","variant":"declaration","kind":128,"flags":{"isExternal":true},"children":[{"id":6665,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":14,"character":4}],"signatures":[{"id":6666,"name":"new WebdriverIOFrameworkAdapterFactory","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":14,"character":4}],"parameters":[{"id":6667,"name":"serenity","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":1839,"name":"Serenity","package":"@serenity-js/core"}},{"id":6668,"name":"loader","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"ModuleLoader","package":"@serenity-js/core"}},{"id":6669,"name":"cwd","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"Path","package":"@serenity-js/core"}}],"type":{"type":"reference","target":6664,"name":"WebdriverIOFrameworkAdapterFactory","package":"@serenity-js/webdriverio"}}]},{"id":6673,"name":"init","variant":"declaration","kind":2048,"flags":{"isPublic":true,"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":21,"character":11}],"signatures":[{"id":6674,"name":"init","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":21,"character":11}],"parameters":[{"id":6675,"name":"cid","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":6676,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6207,"name":"WebdriverIOConfig","package":"@serenity-js/webdriverio"}},{"id":6677,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":6678,"name":"capabilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RemoteCapability"},"name":"RemoteCapability","package":"@wdio/types"}},{"id":6679,"name":"reporter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"EventEmitter"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"DefaultEventMap"},"name":"DefaultEventMap","package":"@types/node"}],"name":"EventEmitter","package":"@types/node"},{"type":"reference","name":"ProvidesWriteStream","package":"@serenity-js/webdriverio"},{"type":"reference","name":"InitialisesReporters","package":"@serenity-js/webdriverio"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","name":"WebdriverIOFrameworkAdapter","package":"@serenity-js/webdriverio"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Constructors","children":[6665]},{"title":"Methods","children":[6673]}],"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":13,"character":13}],"permalink":"/api/webdriverio-adapter/class/WebdriverIOFrameworkAdapterFactory"}],"groups":[{"title":"Test Runner Adapter","children":[6664]}],"sources":[{"fileName":"packages/webdriverio/src/adapter/index.ts","line":1,"character":0}],"permalink":"/api/webdriverio-adapter"},"urlSlug":"webdriverio-adapter"},{"index":true,"label":"index","reflection":{"id":9,"name":"@serenity-js/webdriverio","variant":"declaration","kind":2,"flags":{"isExternal":true},"children":[{"id":6207,"name":"WebdriverIOConfig","variant":"declaration","kind":256,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"[WebdriverIO configuration object](https://webdriver.io/docs/configurationfile/),\\nwith [Serenity/JS-specific additions](https://serenity-js.orgapi/core/class/SerenityConfig/).\\n\\n## Integrating WebdriverIO with Serenity/JS\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    // runner: \'jasmine\',\\n\\n    crew: [\\n      // Optional, print test execution results to standard output\\n      \'@serenity-js/console-reporter\',\\n\\n      // Optional, produce Serenity BDD reports\\n      // and living documentation (HTML)\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', {\\n          outputDirectory: \'target/site/serenity\'\\n      } ],\\n\\n      // Optional, automatically capture screenshots\\n      // upon interaction failure\\n      [ \'@serenity-js/web:Photographer\', {\\n          strategy: \'TakePhotosOfFailures\'\\n          // strategy: \'TakePhotosOfInteractions\'\\n      } ],\\n    ]\\n  },\\n\\n  // Configure your Cucumber runner\\n  cucumberOpts: {\\n    // see Cucumber configuration options below\\n  },\\n\\n  // ... or Jasmine runner\\n  jasmineOpts: {\\n    // see Jasmine configuration options below\\n  },\\n\\n  // ... or Mocha runner\\n  mochaOpts: {\\n     // see Mocha configuration options below\\n  },\\n\\n  runner: \'local\',\\n\\n  specs: [\\n    \'./features/*.feature\',\\n\\n    // or for Mocha/Jasmine\\n    // \'./*.spec.ts\'\\n  ],\\n\\n  // Any other WebdriverIO configuration\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)\\n- ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)\\n- ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"children":[{"id":6208,"name":"serenity","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS configuration with an additional "},{"kind":"code","text":"`runner`"},{"kind":"text","text":" entry\\nallowing to specify the test runner, such as "},{"kind":"code","text":"`cucumber`"},{"kind":"text","text":", "},{"kind":"code","text":"`mocha`"},{"kind":"text","text":", or "},{"kind":"code","text":"`jasmine`"},{"kind":"text","text":".\\n\\n#### Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- ["},{"kind":"code","text":"`CucumberConfig`"},{"kind":"text","text":"](/api/cucumber-adapter/interface/CucumberConfig/)\\n- ["},{"kind":"code","text":"`JasmineConfig`"},{"kind":"text","text":"](/api/jasmine-adapter/interface/JasmineConfig/)\\n- ["},{"kind":"code","text":"`MochaConfig`"},{"kind":"text","text":"](/api/mocha-adapter/interface/MochaConfig/)"}]},"sources":[{"fileName":"packages/webdriverio/src/config/WebdriverIOConfig.ts","line":93,"character":4}],"type":{"type":"intersection","types":[{"type":"reference","target":67,"name":"SerenityConfig","package":"@serenity-js/core"},{"type":"reflection","declaration":{"id":6209,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6210,"name":"runner","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/src/config/WebdriverIOConfig.ts","line":93,"character":34}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[6210]}],"sources":[{"fileName":"packages/webdriverio/src/config/WebdriverIOConfig.ts","line":93,"character":32}]}}]}},{"id":6292,"name":"protocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protocol to use when communicating with the Selenium standalone server (or driver)."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'http\'\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.protocol"}},{"id":6293,"name":"hostname","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Host of your WebDriver server."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'localhost\'\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.hostname"}},{"id":6294,"name":"port","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Port your WebDriver server is on."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.port"}},{"id":6265,"name":"path","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to WebDriver endpoint or grid server."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'/\'\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.path"}},{"id":6295,"name":"queryParams","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Query paramaters that are propagated to the driver server."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6296,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"indexSignature":{"id":6297,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6298,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.queryParams"}},{"id":6299,"name":"user","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Your cloud service username (only works for [Sauce Labs](https://saucelabs.com),\\n[Browserstack](https://www.browserstack.com), [TestingBot](https://testingbot.com),\\n[CrossBrowserTesting](https://crossbrowsertesting.com) or\\n[LambdaTest](https://www.lambdatest.com) accounts). If set, WebdriverIO will\\nautomatically set connection options for you. If you don\'t use a cloud provider this\\ncan be used to authenticate any other WebDriver backend."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.user"}},{"id":6300,"name":"key","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Your cloud service access key or secret key (only works for\\n[Sauce Labs](https://saucelabs.com), [Browserstack](https://www.browserstack.com),\\n[TestingBot](https://testingbot.com), [CrossBrowserTesting](https://crossbrowsertesting.com)\\nor [LambdaTest](https://www.lambdatest.com) accounts). If set, WebdriverIO will\\nautomatically set connection options for you. If you don\'t use a cloud provider this\\ncan be used to authenticate any other WebDriver backend."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.key"}},{"id":6267,"name":"logLevel","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Level of logging verbosity."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n\'info\'\\n```"}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"WebDriverLogTypes"},"name":"WebDriverLogTypes","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.logLevel"}},{"id":6268,"name":"logLevels","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set specific log levels per logger\\nuse \'silent\' level to disable logger"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"WebDriverLogTypes"},"name":"WebDriverLogTypes","package":"@wdio/types"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.logLevels"}},{"id":6269,"name":"connectionRetryTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Timeout for any WebDriver request to a driver or grid."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n120000\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.connectionRetryTimeout"}},{"id":6270,"name":"connectionRetryCount","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Count of request retries to the Selenium server."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n3\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.connectionRetryCount"}},{"id":6271,"name":"headers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify custom headers to pass into every request."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6272,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"indexSignature":{"id":6273,"name":"__index","variant":"signature","kind":8192,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6274,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.headers"}},{"id":6275,"name":"agent","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Allows you to use a custom http/https/http2 [agent](https://www.npmjs.com/package/got#agent) to make requests."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```js\\n{\\n    http: new http.Agent({ keepAlive: true }),\\n    https: new https.Agent({ keepAlive: true })\\n}\\n```"}]}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6276,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6277,"name":"http","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/http.d.ts","qualifiedName":"\\"http\\".Agent"},"name":"Agent","package":"@types/node","qualifiedName":"\\"http\\".Agent"}},{"id":6278,"name":"https","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/https.d.ts","qualifiedName":"\\"https\\".Agent"},"name":"Agent","package":"@types/node","qualifiedName":"\\"https\\".Agent"}}],"groups":[{"title":"Properties","children":[6277,6278]}],"sources":[]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.agent"}},{"id":6279,"name":"transformRequest","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Function intercepting [HTTP request options](https://github.com/sindresorhus/got#options) before a WebDriver request is made."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6280,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6281,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6282,"name":"requestOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibOptions"},"name":"RequestLibOptions","package":"@wdio/types"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibOptions"},"name":"RequestLibOptions","package":"@wdio/types"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.transformRequest"}},{"id":6283,"name":"transformResponse","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Function intercepting HTTP response objects after a WebDriver response has arrived."}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6284,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6285,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6286,"name":"response","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibResponse"},"name":"RequestLibResponse","package":"@wdio/types"}},{"id":6287,"name":"requestOptions","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibOptions"},"name":"RequestLibOptions","package":"@wdio/types"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"RequestLibResponse"},"name":"RequestLibResponse","package":"@wdio/types"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.transformResponse"}},{"id":6288,"name":"enableDirectConnect","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Appium direct connect options (see: https://appiumpro.com/editions/86-connecting-directly-to-appium-hosts-in-distributed-environments)"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.enableDirectConnect"}},{"id":6289,"name":"strictSSL","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether it requires SSL certificates to be valid in HTTP/s requests\\nfor an environment which cannot get process environment well."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\ntrue\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.strictSSL"}},{"id":6290,"name":"outputDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Directory to store all testrunner log files (including reporter logs and "},{"kind":"code","text":"`wdio`"},{"kind":"text","text":" logs).\\nIf not set, all logs are streamed to "},{"kind":"code","text":"`stdout`"},{"kind":"text","text":". Since most reporters are made to log to\\n"},{"kind":"code","text":"`stdout`"},{"kind":"text","text":", it is recommended to only use this option for specific reporters where it\\nmakes more sense to push report into a file (like the "},{"kind":"code","text":"`junit`"},{"kind":"text","text":" reporter, for example).\\n\\nWhen running in standalone mode, the only log generated by WebdriverIO will be\\nthe "},{"kind":"code","text":"`wdio`"},{"kind":"text","text":" log."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.outputDir"}},{"id":6291,"name":"cacheDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The path to the root of the cache directory. This directory is used to store all drivers that are downloaded\\nwhen attempting to start a session."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.cacheDir"}},{"id":6301,"name":"automationProtocol","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Define the protocol you want to use for your browser automation.\\nCurrently only ["},{"kind":"code","text":"`webdriver`"},{"kind":"text","text":"](https://www.npmjs.com/package/webdriver) and\\n["},{"kind":"code","text":"`devtools`"},{"kind":"text","text":"](https://www.npmjs.com/package/devtools) are supported,\\nas these are the main browser automation technologies available."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"this option will be removed in future versions of WebdriverIO. We recommend to use WebDriver for browser or mobile automation."}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"SupportedProtocols"},"name":"SupportedProtocols","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.automationProtocol"}},{"id":6302,"name":"region","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If running on Sauce Labs, you can choose to run tests between different data centers:\\nUS or EU. To change your region to EU, add region: \'eu\' to your config."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"SauceRegions"},"name":"SauceRegions","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.region"}},{"id":6303,"name":"headless","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Sauce Labs provides a headless offering that allows you to run Chrome and Firefox tests headless."}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.headless"}},{"id":6266,"name":"baseUrl","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Shorten url command calls by setting a base URL."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.baseUrl"}},{"id":6304,"name":"waitforTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default timeout for all "},{"kind":"code","text":"`waitFor*`"},{"kind":"text","text":" commands. (Note the lowercase f in the option name.)\\nThis timeout only affects commands starting with "},{"kind":"code","text":"`waitFor*`"},{"kind":"text","text":" and their default wait time."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.waitforTimeout"}},{"id":6305,"name":"waitforInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default interval for all "},{"kind":"code","text":"`waitFor*`"},{"kind":"text","text":" commands to check if an expected state (e.g.,\\nvisibility) has been changed."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.waitforInterval"}},{"id":6211,"name":"capabilities","variant":"declaration","kind":1024,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Defines a set of capabilities you want to run in your testrunner session. Check out the\\n[WebDriver Protocol](https://w3c.github.io/webdriver/#capabilities) for more details.\\nIf you want to run a multiremote session you need to define instead of an array of\\ncapabilities an object that has an arbitrary browser instance name as string and its\\ncapabilities as values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\\n// wdio.conf.js\\nexport const config = {\\n  // define parallel running capabilities\\n  capabilities: [{\\n    browserName: \'safari\',\\n    platformName: \'MacOS 10.13\',\\n    ...\\n  }, {\\n    browserName: \'microsoftedge\',\\n    platformName: \'Windows 10\',\\n    ...\\n  }]\\n}\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```\\n// wdio.conf.js\\nexport const config = {\\n  // multiremote example\\n  capabilities: {\\n    browserA: {\\n      browserName: \'chrome\',\\n      browserVersion: 86\\n      platformName: \'Windows 10\'\\n    },\\n    browserB: {\\n      browserName: \'firefox\',\\n      browserVersion: 74\\n      platformName: \'Mac OS X\'\\n    }\\n  }\\n})\\n```"}]}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RemoteCapabilities"},"name":"RemoteCapabilities","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.capabilities"}},{"id":6212,"name":"runner","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Type of runner\\n- local: every spec file group is spawned in its own local process\\n  running an independant browser session\\n- browser: all spec files are run within the browser"}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"local"},{"type":"literal","value":"browser"},{"type":"tuple","elements":[{"type":"literal","value":"browser"},{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.BrowserRunnerOptions"},"name":"BrowserRunnerOptions","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.BrowserRunnerOptions"}]},{"type":"tuple","elements":[{"type":"literal","value":"local"},{"type":"intrinsic","name":"never"}]}]},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.runner"}},{"id":6213,"name":"rootDir","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Project root directory path."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.rootDir"}},{"id":6214,"name":"specs","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Define specs for test execution. You can either specify a glob\\npattern to match multiple files at once or wrap a glob or set of\\npaths into an array to run them within a single worker process."}]},"sources":[],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specs"}},{"id":6215,"name":"exclude","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Exclude specs from test execution."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.exclude"}},{"id":6216,"name":"suites","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An object describing various of suites, which you can then specify\\nwith the --suite option on the wdio CLI."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.suites"}},{"id":6217,"name":"maxInstances","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of total parallel running workers."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.maxInstances"}},{"id":6218,"name":"maxInstancesPerCapability","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of total parallel running workers per capability."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.maxInstancesPerCapability"}},{"id":6219,"name":"injectGlobals","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inserts WebdriverIO\'s globals (e.g. "},{"kind":"code","text":"`browser`"},{"kind":"text","text":", "},{"kind":"code","text":"`$`"},{"kind":"text","text":" and "},{"kind":"code","text":"`$$`"},{"kind":"text","text":") into the\\nglobal environment. If you set to "},{"kind":"code","text":"`false`"},{"kind":"text","text":", you should import from\\n"},{"kind":"code","text":"`@wdio/globals`"},{"kind":"text","text":", e.g.:\\n\\n"},{"kind":"code","text":"```ts\\nimport { browser, $, $$, expect } from \'@wdio/globals\'\\n```"},{"kind":"text","text":"\\n\\nNote: WebdriverIO doesn\'t handle injection of test framework specific\\nglobals."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\ntrue\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.injectGlobals"}},{"id":6220,"name":"bail","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you want your test run to stop after a specific number of test failures, use bail.\\n(It defaults to 0, which runs all tests no matter what.) Note: Please be aware that\\nwhen using a third party test runner (such as Mocha), additional configuration might\\nbe required."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.bail"}},{"id":6221,"name":"updateSnapshots","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set to true if you want to update your snapshots."}]},"sources":[],"type":{"type":"union","types":[{"type":"literal","value":"none"},{"type":"literal","value":"all"},{"type":"literal","value":"new"}]},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.updateSnapshots"}},{"id":6222,"name":"resolveSnapshotPath","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Overrides default snapshot path. For example, to store snapshots next to test files."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n__snapshots__ stores snapshot files in __snapshots__ directory next to the test file.\\n```"}]}]},"sources":[],"type":{"type":"reflection","declaration":{"id":6223,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[],"signatures":[{"id":6224,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[],"parameters":[{"id":6225,"name":"testPath","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":6226,"name":"snapExtension","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.resolveSnapshotPath"}},{"id":6227,"name":"specFileRetries","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The number of retry attempts for an entire specfile when it fails as a whole."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specFileRetries"}},{"id":6228,"name":"specFileRetriesDelay","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Delay in seconds between the spec file retry attempts"}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specFileRetriesDelay"}},{"id":6229,"name":"specFileRetriesDeferred","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not retried spec files should be retried immediately or deferred to the end of the queue"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.specFileRetriesDeferred"}},{"id":6230,"name":"groupLogsByTestSpec","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Choose the log output view.\\nIf set to \\"false\\" logs from different test files will be printed in real-time.\\nPlease note that this may result in the mixing of log outputs from different Test Specs when running in parallel.\\nIf set to \\"true\\" log outputs will be grouped by test files and printed only when the test is completed.\\nBy default, it is set to \\"false\\" so logs are printed in real-time."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\nfalse\\n```"}]}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.groupLogsByTestSpec"}},{"id":6231,"name":"services","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Services take over a specific job you don\'t want to take care of. They enhance\\nyour test setup with almost no effort."}]},"sources":[],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Services.ts","qualifiedName":"ServiceEntry"},"name":"ServiceEntry","package":"@wdio/types"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.services"}},{"id":6232,"name":"framework","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Defines the test framework to be used by the WDIO testrunner."}]},"sources":[],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.framework"}},{"id":6233,"name":"reporters","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of reporters to use. A reporter can be either a string, or an array of\\n"},{"kind":"code","text":"`[\'reporterName\', { <reporter options> }]`"},{"kind":"text","text":" where the first element is a string\\nwith the reporter name and the second element an object with reporter options."}]},"sources":[],"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Reporters.ts","qualifiedName":"ReporterEntry"},"name":"ReporterEntry","package":"@wdio/types"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.reporters"}},{"id":6234,"name":"reporterSyncInterval","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Determines in which interval the reporter should check if they are synchronised\\nif they report their logs asynchronously (e.g. if logs are streamed to a 3rd\\nparty vendor)."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.reporterSyncInterval"}},{"id":6235,"name":"reporterSyncTimeout","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Determines the maximum time reporters have to finish uploading all their logs\\nuntil an error is being thrown by the testrunner."}]},"sources":[],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.reporterSyncTimeout"}},{"id":6236,"name":"execArgv","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Node arguments to specify when launching child processes."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.execArgv"}},{"id":6237,"name":"runnerEnv","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A set of environment variables to be injected into the worker process."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.runnerEnv"}},{"id":6238,"name":"filesToWatch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Files to watch when running "},{"kind":"code","text":"`wdio`"},{"kind":"text","text":" with the "},{"kind":"code","text":"`--watch`"},{"kind":"text","text":" flag."}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.filesToWatch"}},{"id":6239,"name":"cucumberFeaturesWithLineNumbers","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of cucumber features with line numbers (when using [cucumber framework](https://webdriver.io/docs/frameworks.html#using-cucumber))."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\\n[]\\n```"}]}]},"sources":[],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.cucumberFeaturesWithLineNumbers"}},{"id":6240,"name":"watch","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"flags"}]},"sources":[],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.watch"}},{"id":6241,"name":"shard","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Shard tests and execute only the selected shard. Specify in the one-based form like "},{"kind":"code","text":"`{ total: 5, current: 2 }`"},{"kind":"text","text":"."}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"ShardOptions"},"name":"ShardOptions","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.shard"}},{"id":6242,"name":"mochaOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"framework options"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.MochaOpts"},"name":"MochaOpts","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.MochaOpts"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.mochaOpts"}},{"id":6243,"name":"jasmineOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.JasmineOpts"},"name":"JasmineOpts","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.JasmineOpts"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.jasmineOpts"}},{"id":6244,"name":"cucumberOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/index.ts","qualifiedName":"__global.WebdriverIO.CucumberOpts"},"name":"CucumberOpts","package":"@wdio/types","qualifiedName":"__global.WebdriverIO.CucumberOpts"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.cucumberOpts"}},{"id":6245,"name":"autoCompileOpts","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"autocompile options"}]},"sources":[],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"AutoCompileConfig"},"name":"AutoCompileConfig","package":"@wdio/types"},"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.autoCompileOpts"}},{"id":6246,"name":"onPrepare","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onPrepare"}},{"id":6247,"name":"onComplete","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onComplete"}},{"id":6248,"name":"onWorkerStart","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onWorkerStart"}},{"id":6249,"name":"onWorkerEnd","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onWorkerEnd"}},{"id":6250,"name":"before","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.before"}},{"id":6251,"name":"after","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.after"}},{"id":6252,"name":"beforeSession","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeSession"}},{"id":6253,"name":"afterSession","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterSession"}},{"id":6254,"name":"onReload","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.onReload"}},{"id":6255,"name":"beforeSuite","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeSuite"}},{"id":6256,"name":"afterSuite","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterSuite"}},{"id":6257,"name":"beforeTest","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeTest"}},{"id":6258,"name":"afterTest","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterTest"}},{"id":6259,"name":"beforeHook","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeHook"}},{"id":6260,"name":"afterHook","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterHook"}},{"id":6261,"name":"beforeCommand","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeCommand"}},{"id":6262,"name":"afterCommand","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterCommand"}},{"id":6263,"name":"beforeAssertion","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.beforeAssertion"}},{"id":6264,"name":"afterAssertion","variant":"declaration","kind":2048,"flags":{"isExternal":true,"isOptional":true},"sources":[],"inheritedFrom":{"type":"reference","target":-1,"name":"Options.Testrunner.afterAssertion"}}],"groups":[{"title":"Properties","children":[6208,6292,6293,6294,6265,6295,6299,6300,6267,6268,6269,6270,6271,6275,6279,6283,6288,6289,6290,6291,6301,6302,6303,6266,6304,6305,6211,6212,6213,6214,6215,6216,6217,6218,6219,6220,6221,6222,6227,6228,6229,6230,6231,6232,6233,6234,6235,6236,6237,6238,6239,6240,6241,6242,6243,6244,6245]},{"title":"Methods","children":[6246,6247,6248,6249,6250,6251,6252,6253,6254,6255,6256,6257,6258,6259,6260,6261,6262,6263,6264]}],"sources":[{"fileName":"packages/webdriverio/src/config/WebdriverIOConfig.ts","line":80,"character":17}],"extendedTypes":[{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Options.ts","qualifiedName":"Testrunner"},"name":"Testrunner","package":"@wdio/types"}],"permalink":"/api/webdriverio/interface/WebdriverIOConfig","previousId":6306,"nextId":6325},{"id":10,"name":"default","variant":"declaration","kind":32,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO Framework Adapter integrates WebdriverIO with Serenity/JS"}]},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":12,"character":0}],"type":{"type":"reflection","declaration":{"id":11,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":12,"name":"init","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":13,"character":10}],"signatures":[{"id":13,"name":"init","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":13,"character":10}],"parameters":[{"id":14,"name":"cid","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}},{"id":15,"name":"config","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6207,"name":"WebdriverIOConfig","package":"@serenity-js/webdriverio"}},{"id":16,"name":"specs","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":17,"name":"capabilities","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@wdio/types/src/Capabilities.ts","qualifiedName":"RemoteCapability"},"name":"RemoteCapability","package":"@wdio/types"}},{"id":18,"name":"reporter","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"EventEmitter"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/events.d.ts","qualifiedName":"DefaultEventMap"},"name":"DefaultEventMap","package":"@types/node"}],"name":"EventEmitter","package":"@types/node"},{"type":"reference","name":"ProvidesWriteStream","package":"@serenity-js/webdriverio"},{"type":"reference","name":"InitialisesReporters","package":"@serenity-js/webdriverio"}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":19,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":20,"name":"hasTests","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":17}],"type":{"type":"reflection","declaration":{"id":21,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":27}],"signatures":[{"id":22,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":27}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":23,"name":"run","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":42}],"type":{"type":"reflection","declaration":{"id":24,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":47}],"signatures":[{"id":25,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":47}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}}}],"groups":[{"title":"Properties","children":[20,23]}],"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":15}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"}}]}],"groups":[{"title":"Methods","children":[12]}],"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":12,"character":15}]}},"permalink":"/api/webdriverio#default","previousId":6587},{"id":6306,"name":"BrowseTheWebWithWebdriverIO","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"This implementation of the [ability](/api/core/class/Ability/) to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\nenables the ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/) to interact with web front-ends using [WebdriverIO](https://webdriver.io/).\\n\\n## Using WebdriverIO to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { browser } from \'@wdio/globals\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))  // `browser` is global in WebdriverIO tests\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [WebdriverIO website](https://webdriver.io/)\\n- ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb/)\\n- ["},{"kind":"code","text":"`Ability`"},{"kind":"text","text":"](/api/core/class/Ability/)\\n- ["},{"kind":"code","text":"`Actor`"},{"kind":"text","text":"](/api/core/class/Actor/)"}]},"children":[{"id":6307,"name":"using","variant":"declaration","kind":2048,"flags":{"isStatic":true,"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":43,"character":11}],"signatures":[{"id":6308,"name":"using","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":43,"character":11}],"parameters":[{"id":6309,"name":"browserInstance","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Browser"}}],"type":{"type":"reference","target":6306,"name":"BrowseTheWebWithWebdriverIO","package":"@serenity-js/webdriverio"}}]},{"id":6315,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"signatures":[{"id":6316,"name":"new BrowseTheWebWithWebdriverIO","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4}],"parameters":[{"id":6317,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3702,"typeArguments":[{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"name":"BrowsingSession","package":"@serenity-js/web"}}],"type":{"type":"reference","target":6306,"name":"BrowseTheWebWithWebdriverIO","package":"@serenity-js/webdriverio"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<WebdriverIO.Element>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb<WebdriverIO.Element>.constructor"}},{"id":6319,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"signatures":[{"id":6320,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/) representing the currently active browser tab."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":87,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.currentPage"}},{"id":6321,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"signatures":[{"id":6322,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns an array of [pages](/api/web/class/Page/) representing all the browser tabs\\navailable in the current ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":92,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.allPages"}},{"id":6323,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"signatures":[{"id":6324,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns [basic meta-data](/api/web/interface/BrowserCapabilities/) about the browser associated with this ability."}]},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.ts","line":96,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3698,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowseTheWeb.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[6315]},{"title":"Methods","children":[6307,6319,6321,6323]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":41,"character":13}],"extendedTypes":[{"type":"reference","target":3092,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"BrowseTheWeb","package":"@serenity-js/web"}],"permalink":"/api/webdriverio/class/BrowseTheWebWithWebdriverIO","nextId":6207},{"id":6325,"name":"WebdriverIOBrowsingSession","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"children":[{"id":6352,"name":"closePagesOtherThan","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"signatures":[{"id":6353,"name":"closePagesOtherThan","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":15,"character":4}],"parameters":[{"id":6354,"name":"pageOfInterest","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6470,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closePagesOtherThan"}},{"id":6355,"name":"register","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"signatures":[{"id":6356,"name":"register","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Registers specified [pages](/api/web/class/Page/) to be managed by this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":33,"character":4}],"parameters":[{"id":6357,"name":"pages","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":6470,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.register"}},{"id":6358,"name":"deregister","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"signatures":[{"id":6359,"name":"deregister","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Informs this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) that it should no longer manage [pages](/api/web/class/Page/)\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":40,"character":4}],"parameters":[{"id":6360,"name":"pageIds","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.deregister"}},{"id":6361,"name":"registeredPageIds","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"signatures":[{"id":6362,"name":"registeredPageIds","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any [pages](/api/web/class/Page/) this ["},{"kind":"code","text":"`BrowsingSession`"},{"kind":"text","text":"](/api/web/class/BrowsingSession/) is aware of."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":49,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.registeredPageIds"}},{"id":6363,"name":"closeAllPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"signatures":[{"id":6364,"name":"closeAllPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.ts","line":72,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"BrowsingSession.closeAllPages"}},{"id":6326,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":21,"character":4}],"signatures":[{"id":6327,"name":"new WebdriverIOBrowsingSession","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":21,"character":4}],"parameters":[{"id":6328,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Browser"}}],"type":{"type":"reference","target":6325,"name":"WebdriverIOBrowsingSession","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<WebdriverIOPage>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession<WebdriverIOPage>.constructor"}},{"id":6330,"name":"allPages","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":29,"character":19}],"signatures":[{"id":6331,"name":"allPages","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":29,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":6470,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.allPages"}},{"id":6332,"name":"changeCurrentPageTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":62,"character":19}],"signatures":[{"id":6333,"name":"changeCurrentPageTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":62,"character":19}],"parameters":[{"id":6334,"name":"page","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6470,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.changeCurrentPageTo"}},{"id":6337,"name":"currentPage","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":101,"character":19}],"signatures":[{"id":6338,"name":"currentPage","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":101,"character":19}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6470,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.currentPage"}},{"id":6348,"name":"browserCapabilities","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":173,"character":13}],"signatures":[{"id":6349,"name":"browserCapabilities","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":173,"character":13}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3698,"name":"BrowserCapabilities","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","target":-1,"name":"BrowsingSession.browserCapabilities"}}],"groups":[{"title":"Constructors","children":[6326]},{"title":"Methods","children":[6352,6355,6358,6361,6363,6330,6332,6337,6348]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":19,"character":13}],"extendedTypes":[{"type":"reference","target":3702,"typeArguments":[{"type":"reference","target":6470,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"}],"name":"BrowsingSession","package":"@serenity-js/web"}],"permalink":"/api/webdriverio/class/WebdriverIOBrowsingSession","previousId":6207,"nextId":6365},{"id":6365,"name":"WebdriverIOCookie","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`Cookie`"},{"kind":"text","text":"](/api/web/class/Cookie/)."}]},"children":[{"id":6454,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"signatures":[{"id":6455,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":99,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.name"}},{"id":6456,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"signatures":[{"id":6457,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Optional`"},{"kind":"text","text":"](/api/core/interface/Optional/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":106,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isPresent"}},{"id":6458,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"signatures":[{"id":6459,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":110,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.value"}},{"id":6460,"name":"path","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"signatures":[{"id":6461,"name":"path","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":114,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.path"}},{"id":6462,"name":"domain","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"signatures":[{"id":6463,"name":"domain","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":118,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.domain"}},{"id":6464,"name":"isHttpOnly","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"signatures":[{"id":6465,"name":"isHttpOnly","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":125,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isHttpOnly"}},{"id":6466,"name":"isSecure","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"signatures":[{"id":6467,"name":"isSecure","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":132,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.isSecure"}},{"id":6468,"name":"expiry","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"signatures":[{"id":6469,"name":"expiry","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- ["},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":"](/api/core/class/Timestamp/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.ts","line":139,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":1782,"name":"Timestamp","package":"@serenity-js/core"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Cookie.expiry"}},{"id":6444,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":15,"character":4}],"signatures":[{"id":6445,"name":"new WebdriverIOCookie","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":15,"character":4}],"parameters":[{"id":6446,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Browser"}},{"id":6447,"name":"cookieName","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":6365,"name":"WebdriverIOCookie","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.constructor"}},{"id":6449,"name":"delete","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":23,"character":10}],"signatures":[{"id":6450,"name":"delete","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":23,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"overwrites":{"type":"reference","target":-1,"name":"Cookie.delete"}}],"groups":[{"title":"Constructors","children":[6444]},{"title":"Methods","children":[6454,6456,6458,6460,6462,6464,6466,6468,6449]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":13,"character":13}],"extendedTypes":[{"type":"reference","target":3733,"name":"Cookie","package":"@serenity-js/web"}],"permalink":"/api/webdriverio/class/WebdriverIOCookie","previousId":6325,"nextId":6470},{"id":6470,"name":"WebdriverIOPage","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"children":[{"id":6580,"name":"id","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":132,"character":13}],"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.id"}},{"id":6581,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"signatures":[{"id":6582,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- ["},{"kind":"code","text":"`Switch`"},{"kind":"text","text":"](/api/web/class/Switch/)\\n- ["},{"kind":"code","text":"`Switchable`"},{"kind":"text","text":"](/api/web/interface/Switchable/)"}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":432,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4636,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.switchTo"}},{"id":6583,"name":"modalDialog","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"signatures":[{"id":6584,"name":"modalDialog","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns the ["},{"kind":"code","text":"`ModalDialogHandler`"},{"kind":"text","text":"](/api/web/class/ModalDialogHandler/) for the current ["},{"kind":"code","text":"`Page`"},{"kind":"text","text":"](/api/web/class/Page/)."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":444,"character":4}],"type":{"type":"reference","target":3940,"name":"ModalDialogHandler","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.modalDialog"}},{"id":6585,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"signatures":[{"id":6586,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.ts","line":448,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"Page.toString"}},{"id":6482,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":32,"character":4}],"signatures":[{"id":6483,"name":"new WebdriverIOPage","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":32,"character":4}],"parameters":[{"id":6484,"name":"session","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6325,"name":"WebdriverIOBrowsingSession","package":"@serenity-js/webdriverio"}},{"id":6485,"name":"browser","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Browser"},"name":"Browser","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Browser"}},{"id":6486,"name":"modalDialogHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3940,"name":"ModalDialogHandler","package":"@serenity-js/web"}},{"id":6487,"name":"errorHandler","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"WebdriverIOErrorHandler","package":"@serenity-js/webdriverio"}},{"id":6488,"name":"pageId","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"CorrelationId","package":"@serenity-js/core"}}],"type":{"type":"reference","target":6470,"name":"WebdriverIOPage","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"Page<WebdriverIO.Element>.constructor"}}],"overwrites":{"type":"reference","target":-1,"name":"Page<WebdriverIO.Element>.constructor"}},{"id":6493,"name":"createPageElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":47,"character":4}],"signatures":[{"id":6494,"name":"createPageElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":47,"character":4}],"parameters":[{"id":6495,"name":"nativeElement","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.createPageElement"}},{"id":6496,"name":"locate","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":58,"character":4}],"signatures":[{"id":6497,"name":"locate","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":58,"character":4}],"parameters":[{"id":6498,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locate"}},{"id":6499,"name":"locateAll","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":64,"character":4}],"signatures":[{"id":6500,"name":"locateAll","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":64,"character":4}],"parameters":[{"id":6501,"name":"selector","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4623,"name":"Selector","package":"@serenity-js/web"}}],"type":{"type":"reference","target":4264,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElements","package":"@serenity-js/web"},"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.locateAll"}},{"id":6502,"name":"navigateTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":72,"character":10}],"signatures":[{"id":6503,"name":"navigateTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":72,"character":10}],"parameters":[{"id":6504,"name":"destination","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateTo"}},{"id":6505,"name":"navigateBack","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":76,"character":10}],"signatures":[{"id":6506,"name":"navigateBack","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":76,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateBack"}},{"id":6507,"name":"navigateForward","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":80,"character":10}],"signatures":[{"id":6508,"name":"navigateForward","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":80,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.navigateForward"}},{"id":6509,"name":"reload","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":84,"character":10}],"signatures":[{"id":6510,"name":"reload","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":84,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.reload"}},{"id":6511,"name":"sendKeys","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":88,"character":10}],"signatures":[{"id":6512,"name":"sendKeys","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":88,"character":10}],"parameters":[{"id":6513,"name":"keys","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":3956,"name":"Key","package":"@serenity-js/web"}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.sendKeys"}},{"id":6514,"name":"executeScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":100,"character":10}],"signatures":[{"id":6515,"name":"executeScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":100,"character":10}],"typeParameter":[{"id":6516,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":6517,"name":"InnerArguments","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":6518,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":6519,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":101,"character":26}],"signatures":[{"id":6520,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":101,"character":26}],"parameters":[{"id":6521,"name":"parameters","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6517,"name":"InnerArguments","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"reference","target":6516,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}]}}]}},{"id":6522,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6517,"name":"InnerArguments","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6516,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeScript"}},{"id":6523,"name":"executeAsyncScript","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":126,"character":10}],"signatures":[{"id":6524,"name":"executeAsyncScript","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":126,"character":10}],"typeParameter":[{"id":6525,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true}},{"id":6526,"name":"Parameters","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":6527,"name":"script","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":6528,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":26}],"signatures":[{"id":6529,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":26}],"parameters":[{"id":6530,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"namedTupleMember","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","target":6526,"name":"Parameters","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}}},{"type":"namedTupleMember","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":6531,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":74}],"signatures":[{"id":6532,"name":"__type","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":127,"character":74}],"parameters":[{"id":6533,"name":"result","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6525,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":6534,"name":"args","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"reference","target":6526,"name":"Parameters","package":"@serenity-js/webdriverio","refersToTypeParameter":true}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":6525,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.executeAsyncScript"}},{"id":6535,"name":"lastScriptExecutionResult","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":157,"character":4}],"signatures":[{"id":6536,"name":"lastScriptExecutionResult","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":157,"character":4}],"typeParameter":[{"id":6537,"name":"Result","variant":"typeParam","kind":131072,"flags":{"isExternal":true},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","target":6537,"name":"Result","package":"@serenity-js/webdriverio","refersToTypeParameter":true},"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.lastScriptExecutionResult"}},{"id":6538,"name":"takeScreenshot","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":169,"character":10}],"signatures":[{"id":6539,"name":"takeScreenshot","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":169,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.takeScreenshot"}},{"id":6540,"name":"cookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":188,"character":10}],"signatures":[{"id":6541,"name":"cookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":188,"character":10}],"parameters":[{"id":6542,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":3733,"name":"Cookie","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.cookie"}},{"id":6543,"name":"setCookie","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":192,"character":10}],"signatures":[{"id":6544,"name":"setCookie","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":192,"character":10}],"parameters":[{"id":6545,"name":"cookieData","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":3839,"name":"CookieData","package":"@serenity-js/web"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setCookie"}},{"id":6546,"name":"deleteAllCookies","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":209,"character":10}],"signatures":[{"id":6547,"name":"deleteAllCookies","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":209,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.deleteAllCookies"}},{"id":6548,"name":"title","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":215,"character":10}],"signatures":[{"id":6549,"name":"title","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":215,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.title"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.title"}},{"id":6550,"name":"name","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":219,"character":10}],"signatures":[{"id":6551,"name":"name","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":219,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.name"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.name"}},{"id":6552,"name":"url","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":223,"character":10}],"signatures":[{"id":6553,"name":"url","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":223,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/node/url.d.ts","qualifiedName":"\\"url\\".URL"},"name":"URL","package":"@types/node","qualifiedName":"\\"url\\".URL"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.url"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.url"}},{"id":6554,"name":"viewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":10}],"signatures":[{"id":6555,"name":"viewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reflection","declaration":{"id":6556,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6557,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":36}],"type":{"type":"intrinsic","name":"number"}},{"id":6558,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":51}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[6557,6558]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":229,"character":34}]}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.viewportSize"}},{"id":6559,"name":"setViewportSize","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":10}],"signatures":[{"id":6560,"name":"setViewportSize","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":10}],"parameters":[{"id":6561,"name":"size","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":6562,"name":"__type","variant":"declaration","kind":65536,"flags":{"isExternal":true},"children":[{"id":6563,"name":"width","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":34}],"type":{"type":"intrinsic","name":"number"}},{"id":6564,"name":"height","variant":"declaration","kind":1024,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":49}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[6563,6564]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":249,"character":32}]}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.setViewportSize"}},{"id":6565,"name":"close","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":269,"character":10}],"signatures":[{"id":6566,"name":"close","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":269,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.close"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.close"}},{"id":6567,"name":"closeOthers","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":273,"character":10}],"signatures":[{"id":6568,"name":"closeOthers","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":273,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.closeOthers"}},{"id":6569,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":277,"character":10}],"signatures":[{"id":6570,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":277,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"Page.isPresent"}}],"groups":[{"title":"Constructors","children":[6482]},{"title":"Properties","children":[6580]},{"title":"Methods","children":[6581,6583,6585,6493,6496,6499,6502,6505,6507,6509,6511,6514,6523,6535,6538,6540,6543,6546,6548,6550,6552,6554,6559,6565,6567,6569]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":21,"character":13}],"extendedTypes":[{"type":"reference","target":4072,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Page","package":"@serenity-js/web"}],"permalink":"/api/webdriverio/class/WebdriverIOPage","previousId":6365,"nextId":6587},{"id":6587,"name":"WebdriverIOPageElement","variant":"declaration","kind":128,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of ["},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":"](/api/web/class/PageElement/)."}]},"children":[{"id":6659,"name":"locator","variant":"declaration","kind":1024,"flags":{"isExternal":true,"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":19,"character":13}],"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.locator"}},{"id":6604,"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"signatures":[{"id":6605,"name":"new WebdriverIOPageElement","variant":"signature","kind":16384,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":46,"character":4}],"parameters":[{"id":6606,"name":"locator","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":4022,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"},{"type":"intrinsic","name":"any"}],"name":"Locator","package":"@serenity-js/web"}}],"type":{"type":"reference","target":6587,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<WebdriverIO.Element>.constructor"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement<WebdriverIO.Element>.constructor"}},{"id":6660,"name":"nativeElement","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"signatures":[{"id":6661,"name":"nativeElement","variant":"signature","kind":4096,"flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":107,"character":4}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.nativeElement"}},{"id":6662,"name":"toString","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"signatures":[{"id":6663,"name":"toString","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.ts","line":108,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","target":-1,"name":"PageElement.toString"}},{"id":6607,"name":"of","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":17,"character":4}],"signatures":[{"id":6608,"name":"of","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":17,"character":4}],"parameters":[{"id":6609,"name":"parent","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6587,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":6587,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.of"}},{"id":6610,"name":"closestTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":21,"character":4}],"signatures":[{"id":6611,"name":"closestTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":21,"character":4}],"parameters":[{"id":6612,"name":"child","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","target":6587,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"}}],"type":{"type":"reference","target":6587,"name":"WebdriverIOPageElement","package":"@serenity-js/webdriverio"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.closestTo"}},{"id":6613,"name":"clearValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":25,"character":10}],"signatures":[{"id":6614,"name":"clearValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":25,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.clearValue"}},{"id":6615,"name":"click","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":64,"character":10}],"signatures":[{"id":6616,"name":"click","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":64,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.click"}},{"id":6617,"name":"doubleClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":69,"character":10}],"signatures":[{"id":6618,"name":"doubleClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":69,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.doubleClick"}},{"id":6619,"name":"enterValue","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":74,"character":10}],"signatures":[{"id":6620,"name":"enterValue","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":74,"character":10}],"parameters":[{"id":6621,"name":"value","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.enterValue"}},{"id":6622,"name":"scrollIntoView","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":81,"character":10}],"signatures":[{"id":6623,"name":"scrollIntoView","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":81,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.scrollIntoView"}},{"id":6624,"name":"hoverOver","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":86,"character":10}],"signatures":[{"id":6625,"name":"hoverOver","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":86,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.hoverOver"}},{"id":6626,"name":"rightClick","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":91,"character":10}],"signatures":[{"id":6627,"name":"rightClick","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":91,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.rightClick"}},{"id":6628,"name":"selectOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":96,"character":10}],"signatures":[{"id":6629,"name":"selectOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":96,"character":10}],"parameters":[{"id":6630,"name":"options","variant":"param","kind":32768,"flags":{"isExternal":true,"isRest":true},"type":{"type":"array","elementType":{"type":"reference","target":4503,"name":"SelectOption","package":"@serenity-js/web"}}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectOptions"}},{"id":6631,"name":"selectedOptions","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":109,"character":10}],"signatures":[{"id":6632,"name":"selectedOptions","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":109,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","target":4503,"name":"SelectOption","package":"@serenity-js/web"}}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.selectedOptions"}},{"id":6633,"name":"attribute","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":137,"character":10}],"signatures":[{"id":6634,"name":"attribute","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":137,"character":10}],"parameters":[{"id":6635,"name":"name","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.attribute"}},{"id":6636,"name":"text","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":142,"character":10}],"signatures":[{"id":6637,"name":"text","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":142,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.text"}},{"id":6638,"name":"value","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":147,"character":10}],"signatures":[{"id":6639,"name":"value","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":147,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.value"}},{"id":6640,"name":"html","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":152,"character":10}],"signatures":[{"id":6641,"name":"html","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":152,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.html"}},{"id":6642,"name":"switchTo","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":157,"character":10}],"signatures":[{"id":6643,"name":"switchTo","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":157,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":4636,"name":"SwitchableOrigin","package":"@serenity-js/web"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.switchTo"}},{"id":6644,"name":"isActive","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":217,"character":10}],"signatures":[{"id":6645,"name":"isActive","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":217,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isActive"}},{"id":6646,"name":"isClickable","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":222,"character":10}],"signatures":[{"id":6647,"name":"isClickable","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":222,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isClickable"}},{"id":6648,"name":"isEnabled","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":227,"character":10}],"signatures":[{"id":6649,"name":"isEnabled","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":227,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isEnabled"}},{"id":6650,"name":"isPresent","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":232,"character":10}],"signatures":[{"id":6651,"name":"isPresent","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":232,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isPresent"}},{"id":6652,"name":"isSelected","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":237,"character":10}],"signatures":[{"id":6653,"name":"isSelected","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":237,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isSelected"}},{"id":6654,"name":"isVisible","variant":"declaration","kind":2048,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":242,"character":10}],"signatures":[{"id":6655,"name":"isVisible","variant":"signature","kind":4096,"flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":242,"character":10}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript","externalUrl":"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","target":-1,"name":"PageElement.isVisible"}}],"groups":[{"title":"Constructors","children":[6604]},{"title":"Properties","children":[6659]},{"title":"Methods","children":[6660,6662,6607,6610,6613,6615,6617,6619,6622,6624,6626,6628,6631,6633,6636,6638,6640,6642,6644,6646,6648,6650,6652,6654]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":16,"character":13}],"extendedTypes":[{"type":"reference","target":4188,"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/webdriverio/src/types.ts","qualifiedName":"__global.WebdriverIO.Element"},"name":"WebdriverIO.Element","package":"webdriverio","qualifiedName":"__global.WebdriverIO.Element"}],"name":"PageElement","package":"@serenity-js/web"}],"permalink":"/api/webdriverio/class/WebdriverIOPageElement","previousId":6470,"nextId":10}],"groups":[{"title":"Abilities","children":[6306]},{"title":"Configuration","children":[6207]},{"title":"Models","children":[6325,6365,6470,6587]},{"title":"Variables","children":[10]}],"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":1,"character":0}],"permalink":"/api/webdriverio"},"urlSlug":"webdriverio"}],"packageName":"@serenity-js/webdriverio","packageVersion":"3.25.4"}]')}}]);